<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mavern阿里云仓库设置</title>
      <link href="/20-5-4.html"/>
      <url>/20-5-4.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>使用国外的仓库速度不太理想，有的时候网络不好要花费很久的时间。因此选择换成国内的阿里云maven库主要步骤如下</p><p><strong>第一步，右击项目名称</strong></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-4/1.png" alt=""></p><p><strong>第二步，创建setting.xml</strong></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-4/2.png" alt=""></p><p><strong>第三步，填上这些即可</strong></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-4/3.png" alt=""></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/central<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UUPDL脚本下载Windows遇到由于吊销服务器已脱机，吊销功能无法检查吊销</title>
      <link href="/20-5-3.html"/>
      <url>/20-5-3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h1 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h1><p>近期使用UUPDL脚本下载Windows arm镜像但是遇到了如下问题</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-3/1.png" alt=""></p><p>导致没法下载，起初以为时微软垃圾服务器的原因。因为有好多人跟自己一样的报错结果，但是奇怪的是竟然有人能够下载。这就十分的离谱，说明并不是微软的锅。经过排查后发现是宽带运营商的DNS的问题。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>1.更换一下DNS更改为8.8.8.8，然后命令行运行如下命令刷新一下DNS</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> /flushdns</span><br></pre></td></tr></table></figure><p>2.修改一下文件夹内的aria2_download_windows.cmd脚本文件,搜索”%aria2%” 在第二个的位置后面添加<code>–check-certificate=false</code>也就是把文件的低81行修改为</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"<span class="variable">%aria2%</span>" --check-certificate=false --no-conf --log-level=info --log="aria2_download.log" -x16 -s16 -j5 -c -R -d"<span class="variable">%destDir%</span>" -i"<span class="variable">%aria2Script%</span>"</span><br></pre></td></tr></table></figure><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-3/2.png" alt=""></p><p>然后就可以正常的下载了<img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-3/3.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决AMD CPU 启动Android模拟器时无法安装Intel HAXM 的问题</title>
      <link href="/20-5-2.html"/>
      <url>/20-5-2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>在使用是AMD处理器的电脑，安装Android studio时遇到了如下问题</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-2/1.png" alt=""></p><p>在网上看了很多解决方法，但是都不是十分的完整，在看了Android官方说明文档解决了问题。</p><p><a href="https://androidstudio.googleblog.com/2019/10/android-emulator-hypervisor-driver-for.html" target="_blank" rel="noopener">官方文档链接🔗</a></p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>主要解决方法如下:</p><p>1.首先开启电脑虚拟化，是否开启可以通过任务管理器查看，虚拟化显示已启用表示已经开启了。如果虚拟化没有开启，重启按进入BIOS，设置CPU开启虚拟化。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-2/2.png" alt=""></p><p>由于不同牌子的电脑进入BIOS和开启虚拟化不太一样，这里就不再详细阐述可以自行百度解决。</p><p>2.关闭Hyper-V和Windows虚拟机监控程序平台等。在控制面版中打开Windows功能，把那些选项给关闭掉</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-2/3.png" alt=""></p><p>3.安装Android Emulator Hypervisor Driver for AMD Processors”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-2/4.PNG" alt=""></p><p>然后使用管理员权限打开Windows命令控制台转到自己的SDK目录下的\extras\ google\ Android_Emulator_Hypervisor_Driver文件夹下运行silent_install.bat。如果执行结果返回是：STATE: 4 RUNNING，说明安装成功就可以正常使用了。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-2/5.PNG" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-5-2/6.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql_front连接报错，sql执行错误#3167的解决方案</title>
      <link href="/20-4-18.html"/>
      <url>/20-4-18.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>在使用myql_front连接mysql时出现了:The ‘INFORMATION_SCHEMA.SESSION_VARIABLES’ feature is disabled; see the documentation for ‘show_compatibility_56’</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-4-18/1.png" alt=""></p><p>百度后得知-从mysql5.7.6开始information_schema.global_status已经开始被舍弃，为了兼容性，此时需要打开 show_compatibility_56</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from information_schema.global_status limit 3;</span><br></pre></td></tr></table></figure><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-4-18/2.png" alt=""></p><p>查看一下show_compatibility_56的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &apos;%show_compatibility_56%&apos;;</span><br></pre></td></tr></table></figure><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-4-18/3.png" alt=""></p><p>把show_compatibility_56打开</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set global show_compatibility_56=on;</span><br><span class="line">show variables like &apos;%show_compatibility_56%&apos;;</span><br></pre></td></tr></table></figure><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-4-18/4.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from information_schema.global_status limit 3;</span><br></pre></td></tr></table></figure><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-4-18/5.png" alt=""></p><p>然后即可使用mysql_front连接到mysql数据库了</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/20-4-18/6.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下编译nginx报错Wno-implicit-fallthrough</title>
      <link href="/20-1-10.html"/>
      <url>/20-1-10.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>解决方法有如下几种:</p><ol><li>更换gcc版本，具体是升级还是降级还需测试。</li><li>在报错的switch-case块中加上break。此时要对代码逻辑理解清楚，否则加上break有可能会破坏原来的逻辑。</li><li>编译时忽略Implicit fallthrough error这个错误。</li></ol><p>在这里采用的是第三种方法，编译时忽略Implicit fallthrough error这个错误。</p><p>进入到相关目录下，使用vim命令编辑Makefile文件，修改CFLAGS那一行。在后面加上<code>-Wno-implicit-fallthrough</code>即可忽略编译时的错误。</p>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Server安装flash</title>
      <link href="/20-1-3.html"/>
      <url>/20-1-3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>在搭建桌面虚拟化服务中，使用到了Windows Server系统。其中安装connection server服务必须要使用到flash。所以下面主要讲一下在Windows server上如何安装flash。</p><p>Windows Server 2016/2019显示启用flash，但实际上并未安装flash。想要启用flash，需通过命令行添加Adobe-Flash-For-Windows-Package。</p><p>Windows Server 2016： </p><p>在管理员模式的CMD或Powershell窗口命令行执行如下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dism /online /add-package /packagepath:<span class="string">"C:\Windows\servicing\Packages\Adobe-Flash-For-Windows-Package~31bf3856ad364e35~amd64~~10.0.14393.0.mum"</span></span><br></pre></td></tr></table></figure><p>如上命令执行成功后，检查WinSer 2016补丁更新会发现针对Adobe Flash Player安全更新，当前的补丁信息为”2018-适用于 Adobe Flash Player for Windows Server 2016 的 08 安全更新，适用于基于 x64 的系统 (KB4343902)”。</p><p>Windows Server 2019：</p><p>Windows Server 2019中启用flash的方法与2016相似，只不过要把上面命令行中的14393.0改为17763.1，就是在管理员模式的CMD或Powershell窗口命令行执行如下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dism /online /add-package /packagepath:<span class="string">"C:\Windows\servicing\Packages\Adobe-Flash-For-Windows-Package~31bf3856ad364e35~amd64~~10.0.17763.1.mum"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VMware workstation 不可恢复错误解决</title>
      <link href="/19-11-28.html"/>
      <url>/19-11-28.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>由于笔记本关机时，仍然在运行VMware里面的系统并没有正常的关机当再次开机时导致出现了如下错误</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/19-11-28/1.png" alt=""></p><p>虚拟机是一种被挂起的状态，无法恢复到当时电脑关机时的状态。</p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>到虚拟机安装目录下删除掉一个文件即可</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/19-11-28/2.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>桌面虚拟化</title>
      <link href="/19-11-27.html"/>
      <url>/19-11-27.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>太懒了以后再写吧</p><h1 id="新建Esxi服务器"><a href="#新建Esxi服务器" class="headerlink" title="新建Esxi服务器"></a>新建Esxi服务器</h1><h1 id="搭建域控服务器"><a href="#搭建域控服务器" class="headerlink" title="搭建域控服务器"></a>搭建域控服务器</h1><h1 id="创建vCenter"><a href="#创建vCenter" class="headerlink" title="创建vCenter"></a>创建vCenter</h1><h1 id="搭建connection-server"><a href="#搭建connection-server" class="headerlink" title="搭建connection server"></a>搭建connection server</h1><h1 id="创建模板机"><a href="#创建模板机" class="headerlink" title="创建模板机"></a>创建模板机</h1><h1 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Esxi挂载iSCSI</title>
      <link href="/19-11-26.html"/>
      <url>/19-11-26.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>之前曾写过一篇对于Windows挂在iSCSI的文章，在后面的学习中发现Esxi也可以挂载iSCSI。下面主要简单的记录一下基本流程。</p><h1 id="配置openfiler"><a href="#配置openfiler" class="headerlink" title="配置openfiler"></a>配置openfiler</h1><p>在openfiler的web管理界面点击system然后配置Network Access Configuration把Esxi的IP地址添加进去</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/1.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/2.png" alt=""></p><p>然后配置iSCSI  Targets，由于之前已经配置过所以直接修改Network ACL 即可把Esxi主机🖥的IP地址改为allow</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/3.png" alt=""></p><h1 id="配置Esxi"><a href="#配置Esxi" class="headerlink" title="配置Esxi"></a>配置Esxi</h1><p>通过vSphere client连接Esxi服务器，连接成功如下图所示</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/4.png" alt=""></p><p>点击配置然后点击添加存储适配器，选择添加软件iSCSI适配器</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/5.png" alt=""></p><p>添加成功后，会发现多了一个iSCSISoftware Adapter</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/6.png" alt=""></p><p>右键点击属性对其进行配置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/7.png" alt=""></p><p>网络配置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/8.png" alt=""></p><p>设置动态发现</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/9.png" alt=""></p><p>点击右侧的存储然后添加存储</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/10.png" alt=""></p><p>选择Lun创建的数据存储</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/11.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/1.png" alt=""></p><p>后面这里都采取默认设置，可以根据自己需求来进行配置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/12.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/13.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/14.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/15.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/11-26/17.png" alt=""></p><p>到此已经挂载成功，可以对数据存储进行操作。上传下载文件等等</p>]]></content>
      
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vCenter安装问题</title>
      <link href="/19-11-15.html"/>
      <url>/19-11-15.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>在之前安装ESXI是选择采用桥接的方式，选择的是桥接到无线网卡。十分顺利的安装成功了，但是由于桥接这种方法在后来的使用之中发现有点不太方便。主要有以下弊端：</p><p><strong>我们必须连接固定的WiFi网络;虚拟机中或者物理机的IP修改会带来很多麻烦。</strong></p><p>​    当切换所连接的网络之后，自己电脑的IP地址(内网)会发生相应的变化比如我在宿舍中连接的WiFi是在192.168.1.0这个网段下面的；连接自己手机的热点是172.20.10.0网段下面的；连接同学的手机热点是192.168.43.0这个网段下面的。那么在不同的网段下面就需要修改自己物理机win10的IP地址或者虚拟机中ESXI的IP地址。比如上课当所连的WiFi分配的IP地址为192.168.43.0网段下，ESXI还为上次在宿舍设置的桥接IP地址时192.168.1.0网段下面。这时win10是无法ESXI的IP地址用vsphere client或者使用使用浏览器在web端对ESXI进行操作的。可以通过如下两种方法进行访问，但是这两种方法都不是一个很好的方法。如果修改ESXI的IP地址是可以访问ESXI的同时win10也是可以上网。但是这种方法有个弊端，vCenter可以安装在ESXI中也可以安装在Windows server中。问题就出在当它安装在ESXI中时，当我们要想访问它时。我们会通过IP地址账户密码进行访问。但是IP地址遭到了变化不在同一个网段之下的时候是ping不通的，我们也是访问不了的。可是vCenter要想修改IP地址必须访问<a href="http://ip:5480" target="_blank" rel="noopener">http://ip:5480</a> 来进行修改或者使用SSH远程连接vCenter使用相关命令来进行修改。根本无法访问肯定也是没办法修改的。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/1.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/2.png" alt=""></p><p>所以修改ESXI地址在某种情况下是不可取的，通过修改Windows 10IP地址呢是不会出现这么多问题的。But你修改了静态IP地址之后你Windows就没法上网了呀。如果需要查资料什么的用手机查起来并不是很方便，所以说体验起来也不是很友好。😂😂😂</p><p>那么难到就没有一个完美的解决方案嘛</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/11.png" alt=""></p><p>答案是当然是有的，我们可以采用VMware workstation的虚拟网络编辑器添加一个新的网络，并且设置成仅主机模式</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/3.png" alt=""></p><p>虚拟机的网络适配器选项选择使用Vmnet4(仅主机模式)这个网络</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/4.png" alt=""></p><p>然后重启ESXI并且重新安装一个新的vCenter，可是在安装vCenter的过程之中这次并没有那么的顺利了。安装多次出现了奇奇怪怪的错误这里由于当时没截图所以就先不放图了，反正就是无论如何都安装不上要么安装卡死，要么提示安装错误真的狗血。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/8.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/9.png" alt=""></p><p>后面突发奇想既然前面选择桥接安装成功了，那么就先继续使用桥接安装呗。把自己Windows无线网卡的地址设置成在Vmnet4网段下的，这里设置的如下当然可以任意设置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/10.jpg" alt=""></p><p>并且把ESXI的IP地址也设置成此网段下的地址</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/6.png" alt=""></p><p>然后进行安装就完事了最终安装成功后截图如下</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/7.png" alt=""></p><p>到此安装完成之后可以把WiFi的IP地址改成自动获取，或者使用拨号上网来对ESXI以及vCenter进行访问了。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/12.png" alt=""></p><p>这样就再也不用担心上面的问题出现了，可以一边愉快的学习虚拟化，一边愉快的做其他的事情。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vCenter/13.png" alt=""></p><p>目前使用中没发现问题，这样稳的一比！！！😉😉</p>]]></content>
      
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows server搭建vpn服务实验</title>
      <link href="/vpn.html"/>
      <url>/vpn.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>虚拟专用网络 VPN（Virtual Private Network）综合利用了密码、数字签名和 PKI 等技术，利用隧道协议，在不安全的公共网络上构建虚拟的专用数据通道，以保证其中数据的机密性和完整性。VPN 是企业网在公共网络上的扩展，可以开辟一条安全的隧道，保证两个端点或者两个局域网之间的安全通信。VPN 通过将因特网虚拟成一台路由器，将物理位置分散的局域网和主机虚拟成一个统一的虚拟企业网，从而保证数据通信的安全性。VPN 综合利用了隧道技术、加密技术、鉴别技术和密钥管理等技术，在公共网络上建立了一个虚拟的安全通道，以实现两个网络或者两台主机之间的安全连接，目前 VPN 主要有两类应用场景，其一是远程访问 VPN 模式，即企业员工从外地访问企业内部网络中的主机，当员工在外出差，需要访问企业内部网络中的机密信息时，为了避免信息传输过程中发生泄密，主机首先以 VPN 客户端的方式连接到企业的远程访问 VPN 服务器，这样远程主机访问内网数据时就会被加密传输，从而保证数据的安全性，如图 2-31 所示，</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/1.jpg" alt=""></p><center><strong>图2-31 远程主机访问企业内网</strong></center><p>其二当一个公司在多个城市设置有分公司时，为了保证企业分公司之间的数据传输安全，在每个局域网的出口处设置VPN 服务器，当局域网之间需要交换信息时，两个 VPN 服务器之间建立一条安全的隧道，保证数据在隧道中安全的传输，这种方式也被称为是网络到网络 VPN，适用于企业各个分支机构，商业合作伙伴之间的网络互连要求，如图 2-32 所示。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/2.jpg" alt=""></p><center><b>图2-32 企业分支机构之间的局域网连通</b></center><p>本例中应用的场景是远程访问 VPN 模式，通过远程计算机访问企业内网的资源，具体实验拓扑图如图 2-33 所示，详细配置信息如表 1-1 所示，具体配置步骤如下：</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/3.jpg" alt=""></p><center><b>图2-33 实验拓扑图</b></center><center><b>表 1-1 网络设备主要功能介绍</b></center><table><thead><tr><th align="left"><strong>网络配置情况</strong></th><th align="left"><strong>电脑设置内容</strong></th></tr></thead><tbody><tr><td align="left"><strong>路由器（windows server 2008 模拟仿真）<br/>VMnet1：<br/>IP 地址：192.168.149.3<br/>子网掩码：255.255.255.0<br/>VMnet2:<br/>IP 地址：192.168.87.3<br/>子网掩码：255.255.255.0</strong></td><td align="left"><strong>1、 完成网络 IP 地址配置；<br/>2、 完成 LAN 路由的设置；</strong></td></tr><tr><td align="left"><strong>VPN 服务器（windows server 2008）<br/>VMnet2:<br/>IP 地址：192.168.87.5<br/>子网掩码：255.255.255.0<br/>默认网关：192.168.87.3<br/>VMnet3：<br/>IP 地址：192.168.171.3<br/>子网掩码：255.255.255.0</strong></td><td align="left"><strong>1、 完成网络 IP 地址配置；<br/>2、完成 VPN 服务器搭建；</strong></td></tr><tr><td align="left"><strong>远程计算机的基本配置情况（XP 操作<br/>系统）<br/>VMnet1:<br/>IP 地址：192.168.149.6<br/>子网掩码：255.255.255.0<br/>默认网关：192.168.149.3</strong></td><td align="left"><strong>1、 完成网络 IP 地址配置；<br/>2、 完成 VPN 客户端安装；<br/>3、 使用客户端拨号连接 VPN 服务器；<br/>4、 使用 PING 命令测试连通性；</strong></td></tr></tbody></table><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="步骤-1："><a href="#步骤-1：" class="headerlink" title="步骤 1："></a>步骤 1：</h2><p>首先进行的是模拟路由器的配置，使用的是 windows 2008 操作系统来进行模拟设置，首先选择 VMware 菜单栏中的虚拟机选项，选择其中的设置选项，并选择添加，根据要求添加对应的网络适配器，并进行网络 IP 地址的设置，如图 2-34和图2-35 所示(这里不再详细讲如何在虚拟机中安装Windows server 2008)</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/4.jpg" alt=""></p><center><b>图2-34 添加多块网卡</b></center><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/5.jpg" alt=""></p><center><b>图2-35 配置IP地址<b></center><p>windows server 2008默认是没有路由和远程访问这个服务的需要自行添加，具体步骤如下</p><p>点击桌面左下角的服务器管理器，然后点击添加角色</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/6.jpg" alt=""></p><p>选择网络策略和访问服务</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/7.jpg" alt=""></p><p>点击下一步</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/8.jpg" alt=""></p><p>选择为网络策略和访问服务安装的角色服务，即:路由和远程访问服务</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/9.jpg" alt=""></p><p>点击安装</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/10.jpg" alt=""></p><p>安装完成</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/11.jpg" alt=""></p><p>下面选择开始菜单，管理工具，打开路由和远程访问，在其中右键选择配置并启用，进入向导开始进行配置。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/12.jpg" alt=""></p><p>选择自定义配置，单击下一步继续，并按照服务器的功能，选择 LAN 路由器，这样就可以使该服务器实现路由器的功能，完成后系统会要求进行服务配置，同意配置.并且启动服务</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/13.jpg" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/14.jpg" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/15.jpg" alt=""></p><p>配置完成后，将会看到在路由和远程访问中包含 IP 路由选择，其中包括常规和静态路由两个选项，这样模拟的路由器就已经配置完成了</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/16.jpg" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/17.jpg" alt=""></p><h2 id="步骤2："><a href="#步骤2：" class="headerlink" title="步骤2："></a>步骤2：</h2><p>配置 VPN 服务器，首先根据实验要求完成网络适配器的添加，并进行 IP 地址的配置，</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/18.jpg" alt=""></p><p>完成 IP 地址配置后，同样选择管理工具，路由和远程访问，右键选择配置并启用路由和远程访问，并在其中选择远程访问（拨号或 VPN）选项，单击下一步继续</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/19.jpg" alt=""></p><p>分别选择 VPN 和拨号两个选项，单击下一步继续，进行网络接口的选择，在此必须选择的接口是连接外网的接口，在此选择的是本地连接 2，IP 地址是192.168.87.5，单击下一步继续</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/20.jpg" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/21.jpg" alt=""></p><p>分别对 IP 地址指定和多个远程访问服务器设置，完成 VPN 服务器的配置，完成后会自动开启服务</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/22.jpg" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/23.jpg" alt=""></p><p>完成配置后可以在路由和远程访问中了解具体的配置情况</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/24.jpg" alt=""></p><p>为了能让远程计算机能够通过拨号接入到 VPN 服务器，需要首先为远程用户创建一个登录账号，右键我的电脑选择管理，在其中选择本地用户和组，在用户中创建用户 vpn，设置密码，并选择密码永不过期。右键该用户选择属性，在其中选择拨入选项卡，勾选允许访问，单击确定后，完成配置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/25.jpg" alt=""></p><h2 id="步骤-3："><a href="#步骤-3：" class="headerlink" title="步骤 3："></a>步骤 3：</h2><p>最后需要在远程计算机中新建 VPN 客户端，首先按照要求配置 IP 地址，并右键网上邻居选择属性，在其中选择创建一个新的连接，选择连接到我的工作场所的网络，单击下一步继续</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/26.jpg" alt=""></p><p>在网络连接选项页面，选择虚拟专用网络连接，单击下一步继续，输入公司名称，并输入 VPN 服务器的 IP 地址192.168.87.5，选择在我的桌面上添加一个到此连接的快捷方式</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/27.jpg" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/28.jpg" alt=""></p><p>打开拨号连接，输入用户名和密码，在此输入的是用户名是 vpn，密码是 123456，必须跟 VPN 服务器中设置的一致，单击连接后就可以 VPN 拨号连接，连接成功后可以通过 ipconfig /all 命令，查看到本机网络连接情况，可以清晰的看到在原有的网络连接基础上多了一个 PPP 网络连接适配器，获得的地址就是公司内网的 IP 地址</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/29.jpg" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/30.jpg" alt=""></p><p>VPN 拨号使内部 IP 地址获得成功后，可以通过 ping 命令来进行测试，使用 ping 命令测试公司内部的连通性</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/VPN/31.jpg" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机安装openfiler</title>
      <link href="/openfiler.html"/>
      <url>/openfiler.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Openfiler是一个基于rPath Linux系统的免费ISCIS/NAS应用。它是一个基于浏览器的免费网络存储管理实用程序，可以在单一框架中提供基于文件的网络连接存储 (NAS) 和基于块的存储区域网 (SAN)。Openfiler 支持 CIFS、NFS、HTTP/DAV 和 FTP。Openfiler能把标准x86/64架构的系统变成一个强大的NAS、SAN存储和IP存储网关，为管理员提供一个强大的管理平台，并能能应付未来的存储需求。依赖如VMware，Virtual Iron和Xen服务器虚拟化技术，Openfiler也可部署为一个虚拟机实例。<br>Openfiler的主要性能和优点：</p><p>● 可靠性—Openfiler可以支持软件和硬件的RAID，能监测和预警，并且可以做卷的快照和快速恢复。<br>● 高可用性–Openfiler支持主动或被动的高可用性集群、多路径存储（MPIO）、块级别的复制。<br>● 性能–及时更新的Linux内核支持最新的CPU、网络和存储硬件。<br>● 可伸缩性—文件系统可扩展性最高可超出60TB，并能使文件系统大小可以在线的增长。</p><h1 id="openfiler安装"><a href="#openfiler安装" class="headerlink" title="openfiler安装"></a>openfiler安装</h1><h2 id="下载openfiler镜像"><a href="#下载openfiler镜像" class="headerlink" title="下载openfiler镜像"></a>下载openfiler镜像</h2><p><a href="https://www.openfiler.com/community/download" target="_blank" rel="noopener">链接🔗</a></p><h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p>新建虚拟机，选择自定义</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/0.png" alt=""></p><p>选择虚拟机兼容性</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/1.png" alt=""></p><p>选择稍后安装操作系统</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/2.png" alt=""></p><p>选择系统为Linux并且选择为Red Hat Enterprise Linux 5</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/3.png" alt=""></p><p>命名虚拟机并且选择安装位置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/4.png" alt=""></p><p>处理器配置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/5.png" alt=""></p><p>虚拟机内存设置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/6.png" alt=""></p><p>设置网络类型，选择桥接</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/7.png" alt=""></p><p>选择I/O控制器类型</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/8.png" alt=""></p><p>选择磁盘类型</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/9.png" alt=""></p><p>选择磁盘</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/10.png" alt=""></p><p>指定磁盘容量</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/11.png" alt=""></p><p>指定磁盘文件</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/12.png" alt=""></p><p>选择挂载安装镜像</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/13.png" alt=""></p><p>开启虚拟机，进入此界面按回车</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/14.png" alt=""></p><p>点击下一步</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/15.png" alt=""></p><p>选择适当的键盘</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/16.png" alt=""></p><p>初始化磁盘，选择”Yes”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/17.png" alt=""></p><p>创建分区，选择”Yes”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/18.png" alt=""></p><p>选择使用静态的IP地址</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/19.png" alt=""></p><p>配置网关与DNS服务器地址，这一步使用内网地址的话感觉DNS服务器配置与否都行。所以此处有点多余2333🤣</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/20.png" alt=""></p><p>选择时区，选择上海</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/21.png" alt=""></p><p>设置root密码</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/22.png" alt=""></p><p>点击“Next”进行安装</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/23.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/24.png" alt=""></p><p>安装完成，选择“Reboot”重启系统</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/25.png" alt=""></p><h2 id="配置openfiler-的iscsi目标服务器"><a href="#配置openfiler-的iscsi目标服务器" class="headerlink" title="配置openfiler 的iscsi目标服务器"></a><strong>配置openfiler 的iscsi目标服务器</strong></h2><h3 id="1-重启进入操作系统"><a href="#1-重启进入操作系统" class="headerlink" title="1.重启进入操作系统"></a><strong>1.重启进入操作系统</strong></h3><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/26.png" alt=""></p><h3 id="2-添加3块scsi硬盘"><a href="#2-添加3块scsi硬盘" class="headerlink" title="2.添加3块scsi硬盘"></a><strong>2.添加3块scsi硬盘</strong></h3><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/27.png" alt=""></p><p>然后输入<code>init 6</code>重启操作系统，重新扫描scsi硬盘。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/28.png" alt=""></p><h3 id="3-登录web界面"><a href="#3-登录web界面" class="headerlink" title="3.登录web界面"></a><strong>3.登录web界面</strong></h3><p>登录地址就是启动时页面上显示的IP地址;用户名是：openfiler ， 密码是：password</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/29.png" alt=""></p><h3 id="4-磁盘配置RAID5"><a href="#4-磁盘配置RAID5" class="headerlink" title="4.磁盘配置RAID5"></a><strong>4.磁盘配置RAID5</strong></h3><p>登录成功后界面如下所示</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/30.png" alt=""></p><p>选择”Volumes”选项</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/31.png" alt=""></p><p>选择右测得菜单栏“Block Devices”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/32.png" alt=""></p><p>点击刚添加的三块硬盘</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/33.png" alt=""></p><p>创建raid分区类型</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/34.png" alt=""></p><p>选择右侧的“Software RAID”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/35.png" alt=""></p><p>选择创建RAID5分区，点击“Add array”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/36.png" alt=""></p><h3 id="5-创建逻辑卷"><a href="#5-创建逻辑卷" class="headerlink" title="5.创建逻辑卷"></a><strong>5.创建逻辑卷</strong></h3><p>使用刚才创建好的raid5分区创建逻辑卷，点击“Volume Groups”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/37.png" alt=""></p><p>点击“create new physical volumes”，给卷组起一个名字叫“First”，选择物理卷“/dev/md0”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/38.png" alt=""></p><p>点击右侧的“Add volume”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/39.png" alt=""></p><p>创建卷，卷的名字叫“One”，卷描述“hello world”当然可以填其他的，容量调整为最大，FileSystem / Volume type： 选择 block(iSCSI,FC,etc)</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/40.png" alt=""></p><h3 id="6-启动iscsi目标服务器"><a href="#6-启动iscsi目标服务器" class="headerlink" title="6.启动iscsi目标服务器"></a><strong>6.启动iscsi目标服务器</strong></h3><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/41.png" alt=""></p><h3 id="7-配置访问控制列表，iscsi目标服务器"><a href="#7-配置访问控制列表，iscsi目标服务器" class="headerlink" title="7.配置访问控制列表，iscsi目标服务器"></a><strong>7.配置访问控制列表，iscsi目标服务器</strong></h3><p>选择“System”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/42.png" alt=""></p><p>选择允许访问的ip地址或一个网段，然后点击“update”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/43.png" alt=""></p><p>选择Volumes</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/44.png" alt=""></p><p>选择右边的“iSCSI Targets”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/45.png" alt=""></p><p>添加一个target IQN</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/46.png" alt=""></p><p>选择“LUN Mapping”，然后进行映射</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/47.png" alt=""></p><p>选择“Network ACL”，“ACCESS”下面改成“Allow”，然后点击“update”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/48.png" alt=""></p><h2 id="连接iscsi测试"><a href="#连接iscsi测试" class="headerlink" title="连接iscsi测试"></a><strong>连接iscsi测试</strong></h2><p>打开iscsi发起程序，连接iscsi目标服务器</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/49.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/50.png" alt=""></p><p>查看Windows磁盘管理，发现已经正常连接</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/51.png" alt=""></p><p>新建一个分区</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/52.png" alt=""></p><p>复制文件速度测试</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/openfiler/53.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟化VMware ESXi 6.7服务器与vCenter的安装与配置</title>
      <link href="/vsphere.html"/>
      <url>/vsphere.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/desktop.jpg" alt="首页"></p><a id="more"></a><h1 id="vSphere虚拟化架构"><a href="#vSphere虚拟化架构" class="headerlink" title="vSphere虚拟化架构"></a>vSphere虚拟化架构</h1><p>vSphere是VNware公司在2001年基于云计算推出的一套企业级虚拟化解决方案、核心组件为ESXi。如今，经历了5个版本的改进，已经实现了虚拟化基础架构、高可用性、集中管理、性能监控等一体化解决方案。</p><p><a href="https://baike.baidu.com/item/vSphere" target="_blank" rel="noopener">🔗详情点击</a></p><h2 id="虚拟机的好处"><a href="#虚拟机的好处" class="headerlink" title="虚拟机的好处"></a>虚拟机的好处</h2><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/1.png" alt="img"></p><h2 id="为什么要使用虚拟机："><a href="#为什么要使用虚拟机：" class="headerlink" title="为什么要使用虚拟机："></a>为什么要使用虚拟机：</h2><p>　　<strong>物理架构存在的问题：</strong></p><ul><li>　　难以复制和移动</li><li>　　受制于一定的硬件组件</li><li>　　生命周期短</li><li>　　物理服务器的资源利用率低</li></ul><p>　　<strong>服务器虚拟化</strong><br>　　<strong>虚拟机与物理机相比</strong></p><ul><li>　　最大化利用物理机的资源，节省能耗</li><li>　　更方便地获取计算资源</li><li>　　硬件无关。虚机都是文件，方便迁移、保护</li><li>　　生命周期更长，不会随着硬件变化而变化</li><li>　　根据需求的变化，非常容易更改资源的分配</li><li>　　更多高级功能</li></ul><p>　　在线的数据、虚拟机迁移<br>　　高可用<br>　　自动资源调配<br>　　云计算</p><h2 id="vSphere基础物理架构"><a href="#vSphere基础物理架构" class="headerlink" title="vSphere基础物理架构"></a>vSphere基础物理架构</h2><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/2.png" alt="img"></p><p>　　虚拟化服务器：又称x86服务器，可以由多个ESXi组成，通过网络服务提供CPU和内存资源，所有的虚拟机运行在该服务器中。<br>存储网络：用于存储所有的虚拟化数据，虚拟机的性能也与之息息相关。存储网络可以使用SAN、NAS等存储技术。</p><h2 id="vSphere基本架构"><a href="#vSphere基本架构" class="headerlink" title="vSphere基本架构"></a>vSphere基本架构</h2><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/3.png" alt="vmware"></p><p>1.架构服务<br>Infrastructure Service(架构服务)定义了 Computer、 Storage、 Network等三大部分<br>(1)计算机<br>计算机主要包括ESX和ESXi( vSphere5.0中仅有ESXI)、DRS(分布式资源调配)以及<br>Memory(内存)。<br>①ESX/ESXi<br>ESXI是在物理服务器上安装虚拟化管理服务用于管理底层硬件资源。安装ESXi的物理服务<br>器称为ESXi主机。是 Sphere虚拟化架构的基础。<br>②DRS<br>DRS(分布式资源调配)是 Sphere高级特性之一,动态调配虚拟机运行的ESXI主机,充分<br>利用物理服务器硬件资源。<br>③内存<br>Memory(内存)就是物理服务器以及虚拟机内存的管理。<br>(2)存储<br>Storage (存储)主要包括了VMFS、 Thin Provisioning、 Storage I/O Control。<br>VMFS (虚拟机文件系统)是跨越多个物理服务器实现虚拟化的基础。<br>Thin Provisioning (精简盘)是对虚拟机硬盘文件VMDK动态调配的技术。<br>Storage I/O Control(存储读写控制)是 vSphere高级特性之一,利用对存储读写的控制是存储达到更好的性能。<br>(3)网络<br>Network包括了 Distributed Switch、 Network I/O Control<br>Distributed Switch (分布式交换机)是Sphere虚拟化架构网络核心之一,是跨越多台ESXI主机的虚拟交换机。</p><p>Network I/O Control(网络读写控制)是 vSphere高级特性之一,通过对网络读写的控制使网络达到更好的性能。<br>2应用服务<br>Application Service(应用服务)定义了 Availability、Security、Scalability等三大部分。<br>(1)可用性<br>Availability (可 用 性)包括了 vMation、Storage vMotion、High Availability、 Fault Tolerance、 Data Recovery。<br>①实时迁移<br>vMotion(实时迁移)是让运行在ESXi主机上的虚拟机可以在开机或关机状态下迁移到另外的ESXI主机上。<br>②存储实时迁移<br>Sterage vMotion(存储实时迁移)是让虚拟机所使用的存储文件在开机或关机状态下迁移到另的存储设备上。<br>③高可用性<br>High Availability(高可用性)是在ESXi主机出现故障的情况下,将虚拟机迁移到正常的ESXi主机运行,尽量避免由于ESXi主机故障而导致服务中断。<br>④容错<br>Fault Tolerance(容错)是让虚拟机同时在两台ESX主机上以主/从方式并发地运行,也就是所谓的虚拟机双机热备。当任意一台虚拟机出现故障,另外一台立即接替工作,对于用户而言感觉不到后台已经发生了故障切换。<br>⑤数据恢复<br>Data Recovery(数据恢复)是通过合理的备份机制对虚拟机进行备份,以便故障发生时能够快速恢复。<br>(2)安全性<br>Security包括 vShield Zones、 VMsafe。<br>vShield Zones是一种安全性虚拟工具,可用于显示和实施网络活动。<br>VMsafe安全API使第三方安全厂商可以在管理程序内部保护虚拟机。<br>(3)扩展性<br>Scalability括DRS、Hot Add。<br>①DRS<br>DRS(分布式资源调配)是 vSphere高级特性之一,动态调配虚拟机运行的ESXi主机,充分利用物理服务器硬件资源。<br>②热插拔<br>Hot Add(热拔插)使虚拟机能够在不关机的情况下增加CPU、内存、硬盘等</p><p>3.vCenter Server<br>vSphere虚拟化架构的核心管理工具也是日常管理操作平台。vSphere虎拟化<br>性都必须依靠 vCenter Server实现,利用 vCenter Server可以集中管理多个ESXI主机及其虚拟机<br>4.虚拟机<br>Virtual Machine(虚拟机)对于用户来说,实际就是一台物理机,和物理机一样拥有CPU、内存、硬盘等硬件资源,安装操作系统以及应用程序后与物理服务器提供的服务完全一样。<br>5.私有云资源池/公有云<br>Private Cloud Resource Pool  (私有云资源池)由硬件资源组成，通过vSphere管理私有云所有资源。</p><p>Public Cloud(公有云)私有云的延伸，可向外部提供云计算服务。</p><h1 id="Esxi"><a href="#Esxi" class="headerlink" title="Esxi"></a>Esxi</h1><p>ESXi专为运行虚拟机、最大限度降低配置要求和简化部署而设计。只需几分钟时间，客户便可完成从安装到运行虚拟机的全过程，特别是在下载并安装预配置虚拟设备的时候。</p><p>在VMware Virtual Appliance Marketplace 上有800多款为VMware hypervisor 创建的虚拟设备，如今，ESXi已经实现了与Virtual Appliance Marketplace的直接整合，使用户能够即刻下载并运行虚拟设备。这为即插即用型软件的交付与安装提供了一种全新和极其简化的方式。</p><p><a href="https://baike.baidu.com/item/ESXi" target="_blank" rel="noopener">🔗详情点击</a></p><h2 id="安装Esxi服务器"><a href="#安装Esxi服务器" class="headerlink" title="安装Esxi服务器"></a>安装Esxi服务器</h2><p>由于种种原因无法在物理机完成操作，只好使用VMware workstation来安装Esxi。</p><p>使用的虚拟机是<a href="https://pan.baidu.com/s/1lbPFwUlxvoNkzyl2jQjPPQ" target="_blank" rel="noopener">VMware 15</a> </p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/1.jpg" alt="百度云链接"></p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>首先打开VMware workstation软件创建新的虚拟机并且采用自定义安装</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj.png" alt="新建虚拟机"></p><p>选择稍后安装一个操作系统</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj2.png" alt="新建虚拟机"></p><p>选择操作系统，点击VMware ESX选择版本为VMware ESXI 6.x的那个版本</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj3.png" alt="新建虚拟机"></p><p>命名虚拟机名称并且选择虚拟机在自己电脑上的位置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj4.png" alt="新建虚拟机"></p><p>选择处理器的配置，这里可以根据自己的需求选择</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj5.png" alt="新建虚拟机"></p><p>选择网络类型，这里使用桥接网络</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj7.png" alt="新建虚拟机"></p><p>选择I/O控制器类型，选择为推荐的准虚拟化SCSI</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj8.png" alt="新建虚拟机"></p><p>选择虚拟磁盘类型为SCSI</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj9.png" alt="新建虚拟机"></p><p>选择创建新的虚拟磁盘</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj10.png" alt="新建虚拟机"></p><p>指定虚拟磁盘的容量大小，在这分配200GB空间具体根据自己需求</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj11.png" alt="新建虚拟机"></p><p>先不要点击完成，因为ESXI的镜像还没有挂载，点击自定义硬件</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj12.png" alt="新建虚拟机"></p><p>选择挂载自己电脑上的ISO镜像文件</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/xj13.png" alt="新建虚拟机"></p><p>选择完成后点击关闭然后再点击完成，然后打开虚拟机。会出现如下的界面</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/az1.png" alt="新建虚拟机"></p><p>等待片刻，按回车键开始安装</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/az2.png" alt="新建虚拟机"></p><p>按F11键接受协议并继续</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/az3.png" alt="新建虚拟机"></p><p>选择安装的位置并按回车键继续安装</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/az4.png" alt="新建虚拟机"></p><p>选择键盘布局，这里选择使用默认.</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/az5.png" alt="新建虚拟机"></p><p>为root用户创建密码，需要选择安全性较高的的数字字母字符组合来作为密码</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/az6.png" alt="新建虚拟机"></p><p>按下F11键开始正式的安装</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/az7.png" alt="新建虚拟机"></p><p>接下来会进入这个安装进度界面，</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/az8.png" alt="新建虚拟机"></p><p>等待2-3分钟后，安装完成按回车键重启系统</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/az9.png" alt="新建虚拟机"></p><p>重启完成后界面如下</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/jm.png" alt="新建虚拟机"></p><p>对系统进行配置，按F2键然后输入刚才创建的密码进入配置界面。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/jm1.png" alt="新建虚拟机"></p><p>Configure Managment Network来配置网络。配置静态IPV4地址</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/jm2.png" alt="新建虚拟机"></p><p>配置DNS服务器地址</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/jm3.png" alt="新建虚拟机"></p><p>按ESC键离开，会提示下面这个界面按Y同意重启网络</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/jm4.png" alt="新建虚拟机"></p><p>Troubleshooting Options来开启SSH与Shell</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/jm5.png" alt="新建虚拟机"></p><p>到此为止配置上基本完成了，下面在浏览器地址栏中输入刚才配置的IP地址<code>192.168.1.103</code>使用web界面对ESXI进行控制。使用root用户登录</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/jm6.png" alt="新建虚拟机"></p><h1 id="vCenter"><a href="#vCenter" class="headerlink" title="vCenter"></a>vCenter</h1><p>Vcenter一般指 VMware vCenter™ Server<br>VMware vCenterServer 提供了一个可伸缩、可扩展的平台，为 虚拟化管理奠定了基础。 VMware vCenter Server（以前称为 VMware VirtualCenter），可集中管理 VMware vSphere 环境，与其他管理平台相比，极大地提高了 IT 管理员对虚拟环境的控制。<br>VMware vCenter Server：提高在虚拟基础架构每个级别上的集中控制和可见性，通过主动管理发挥 vSphere 潜能，是一个具有广泛合作伙伴体系支持的可伸缩、可扩展平台。</p><p><a href="https://baike.baidu.com/item/vCenter" target="_blank" rel="noopener">🔗详情点击</a></p><h2 id="安装vCenter"><a href="#安装vCenter" class="headerlink" title="安装vCenter"></a>安装vCenter</h2><p>vCenter主要有两种:一种是基于Windows的vCenter server它的功能和性能更强大！还有一种就是基于嵌入式linux的vCenter server appliance，使用小的虚拟化环境（主机小于50台，虚拟机少于1000个），使用这个部署起来更简单快捷。当然如果更大的虚拟化环境，就一定需要基于Windows的vCenter server了。随着版本的更迭，vmware去windows化越来越明显了，很多高级功能（跨集群迁移，vcsa ha等等）只有以vcsa方式部署才可能实现了，vcsa部署维护都要比传统windows+vCenterServer+MySQL方便，就是web管理界面还是不如原来的vsphere client好用。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter.png" alt="vcenter"></p><h3 id="安装vCenter-server-appliance"><a href="#安装vCenter-server-appliance" class="headerlink" title="安装vCenter server appliance"></a>安装vCenter server appliance</h3><p>在Windows上装载镜像</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter1.png" alt="vcenter"></p><p>然后打开vcsa-ui-installer那个文件夹，在打开下面的那个win32目录，双击installer.exe即可开始安装。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter2.png" alt="vcenter"></p><p>安装分为两个阶段</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter3.png" alt="vcenter"></p><p>勾选“我接受许可协议条款”</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter4.png" alt="vcenter"></p><p>选择嵌入式 <strong>Platform Services Controller</strong></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter5.png" alt="vcenter"></p><p>指定VCSA 6.7部署到ESXi主机或vCenter Server</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter6.png" alt="vcenter"></p><p>会出现警告直接点是即可，下面配置VCSA 6.7虚拟机名称以及root密码。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter7.png" alt="vcenter"></p><p>选择部署大小</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter8.png" alt="vcenter"></p><p>选择VCSA 6.7虚拟机存储</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter9.png" alt="vcenter"></p><p>之前的设置部署大小为300GB，可是由于自己电脑没有那么大的存储空间23333。只好这样先装了</p><p>配置VCSA 6.7虚拟机网络</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter10.png" alt="vcenter"></p><p>确认第1阶段参数</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter11.png" alt="vcenter"></p><p>开始第一阶段部署，部署的时间取决于物理服务器性能</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter12.png" alt="vcenter"></p><p>第一阶段完成，开始第二阶段</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter13.png" alt="vcenter"></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter14.png" alt="vcenter"></p><p>配置系统时间</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter15.png" alt="vcenter"></p><p>这里选择跟ESXI主机同步。当然也可以选择和NTP服务器时间相同。根据自己需求选择是否启用SSH</p><p>SSO配置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter16.png" alt="vcenter"></p><p>确认是否加入CEIP</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter17.png" alt="vcenter"></p><p>确认参数</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter18.png" alt="vcenter"></p><p>点击确定开始第二阶段部署</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter19.png" alt="vcenter"></p><p>开始部署</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter20.png" alt="vcenter"></p><p>安装完成</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter21.png" alt="vcenter"></p><p>打开VCSA 6.7控制台界面</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter22.png" alt="vcenter"></p><p>在浏览器中输入VCSA 6.7的IP地址进行访问，VCSA 6.7提供H5以及FLASH两个选择，从初步使用看，H5功能比VCSA 6.5得到增强</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter23.png" alt="vcenter"></p><p>输入SSO登录</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter24.png" alt="vcenter"></p><p>VCSA 6.7 登录成功后界面如下</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter25.png" alt="vcenter"></p><p>访问VMware vCenter Server Appliance Web</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter26.png" alt="vcenter"></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vcenter27.png" alt="vcenter"></p><h3 id="安装vCenter-server"><a href="#安装vCenter-server" class="headerlink" title="安装vCenter server"></a>安装vCenter server</h3><p>当镜像挂载之后打开安装程序</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc1.png" alt="vcenter"></p><p>点击下一步继续安装</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc2.png" alt="vcenter"></p><p>选择接受许可协议条款</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc3.png" alt="vcenter"></p><p>选择部署类型，在这先暂时选择嵌入式部署。在以后会对外部部署进行安装。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc4.png" alt="vcenter"></p><p>配置系统网络名称，输入windows server的IP地址</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc5.png" alt="vcenter"></p><p>vCenter Single Sign-On 配置</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc6.png" alt="vcenter"></p><p>选择vCenter Server服务账户</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc7.png" alt="vcenter"></p><p>数据库设置，选择嵌入式数据库</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc8.png" alt="vcenter"></p><p>配置端口</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc9.png" alt="vcenter"></p><p>选择安装目录</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc10.png" alt="vcenter"></p><p>加入客户体验提升计划</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc11.png" alt="vcenter"></p><p>点击完成开始安装</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc12.png" alt="vcenter"></p><p>安装过程时间根据机器性能决定，大概10分钟左右</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc13.png" alt="vcenter"></p><p>安装完成</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc14.png" alt="vcenter"></p><p>在客户机访问vSphere Web Client</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc15.png" alt="vcenter"></p><p>输入刚才设置的账号密码，然后登录成功</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vsphere/vc16.png" alt="vcenter"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Vmware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Vmware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Coding Pages申请SSL/TLS证书错误</title>
      <link href="/ssl.html"/>
      <url>/ssl.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>博客是托管在coding与github上的，分别开启了https。但是Coding Pages提供的SSL/TLS证书，每次申请成功后有效期是三个月，证书到期后可以继续免费申请。但是当我登陆进入Coding Pages服务的后台并点击重新申请证书时，竟然报错了！！报错信息如下</p><blockquote><p>urn:acme:error:unauthorized:Invalid response from <a href="http://exmaple.com/.well-known/acme-challenge/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" target="_blank" rel="noopener">http://exmaple.com/.well-known/acme-challenge/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</a>: xxxxxxxxx</p></blockquote><p>一时不知如何解决，无奈😔只能百度。找到了官方的帮助文档<a href="https://dev.tencent.com/help/doc/faq/coding-pages/ssh/tls" target="_blank" rel="noopener">链接🔗</a><br>里面有十分详细的说明，按照官方文档最终找到了解决方案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误原因：无法获取正确的域名验证信息</span><br><span class="line">解决方式1：检查 DNS 的 CNAME 记录是否设置正确，静态 Pages 为 &lt;username&gt;.coding.me，动态 Pages 为 &lt;space_key&gt;.coding.io</span><br><span class="line">解决方式2：检查域名的 DNS 是否将海外线路解析到 Coding Pages 的服务器</span><br></pre></td></tr></table></figure><p>显然是因为第二种原因才导致的报错，因为自己也把域名解析到了Github Pages。</p><p><strong>解决方法</strong>：先暂停掉对境外线路的解析，再去Coding Pages界面开启https，成功后再开启对境外线路的解析。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>启动docker WARNING IPv4 forwarding is disabled.解决方法</title>
      <link href="/%F0%9F%90%8B.html"/>
      <url>/%F0%9F%90%8B.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/docker/mountain.jpg" height="300px"><a id="more"></a><p>近期在云服务器上体验了一把Docker容器，但是在测试时出现了如下所示的问题。<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/docker/1.png"><br>刚开始以为⚠警告并没有什么大的问题，但是在通过IP地址访问tomcat那个页面的时候怎么也看不到应有的页面。然后通过仔细看了一警告后发现<br>IPv4转发被禁用，网络无法正常工作。所以必须编辑一下<code>/usr/lib/sysctl.d/00-system.conf</code>这个文件往里面加入<code>net.ipv4.ip_forward=1</code>才行。然后需要<code>systemctl restart network &amp;&amp; systemctl restart docker</code>重启网络和Docker.最终测试结果如下所示<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/docker/2.png"></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个很(⊙﹏⊙)的问题</title>
      <link href="/su.html"/>
      <url>/su.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/1.png" alagin="center"><p>最近给自己的Linux终端做了一个美化，使用的是<code>oh-my-zsh</code>，并且用<code>chsh -s /bin/zsh</code>命令把zsh改成了登录root时使用的shell。但是自己手贱不小心直接把安装的zsh给卸载了🤣。然后就遇到了无法登录root用户的这个问题……<a id="more"></a></p><p>这个提示的是找不到<code>/bin/zsh</code>这个文件或者目录。🦑由于是卸载了的所以肯定找不到的。对于这个问题想的是直接用<code>chsh /bin/zsh</code>把他改回来。但是呢这个修改的也仅仅只是限定于修改当前登录的用户，现在也就是只能修改普通用户的shell，root用户没有登录是无法所以是不行的。使用<code>cat /etc/passwd</code>查看了一下相关文件。</p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/2.png"><p>必须把root用户登录的shell改成其他的才行。这里我竟然会想到使用<code>vim /etc/passwd</code>命令来修改，但是对于普通用户来说那个文件只是可读的无法做修改。</p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/3.png"><p>那加个sudo呢？使用<code>sudo vim /etc/passwd</code>还是不行的。</p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/4.png"><p>这个必须做对<code>/etc/sudoers</code>做相关修改才行，而且这个要修改也就有涉及到登录root用户的问题这个更不用想了。</p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/cat.jpg"><p>对于这个问题最后是这么处理的，重启服务器来到启动菜单，出现以下字样立刻按ESC键来到启动菜单。</p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/6.png"><p>然后按esc键来到下面这个界面</p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/5.png"><p>输入a然后会进入这个界面<img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/7.png"></p><p>输入<code>init=/bin/sh</code>后按回车进入另外一个界面<img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/8.png"></p><p>然后输入<code>mount –orw,remount /</code>,以读写的方式重新挂载分区，然后在使用<code>vim /etc/passwd</code>命令来修改配置文件</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/9.png">，修改成<code>/bin/bash</code>然后保存退出。重启系统然后就可以登录root用户了😂</p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/su/ku.png">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACL</title>
      <link href="/ACL.html"/>
      <url>/ACL.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/banner.png" width="80%">访问控制列表（Access Control List，ACL） 是路由器和交换机接口的指令列表，用来控制端口进出的数据包。ACL适用于所有的被路由协议，如IP、IPX、AppleTalk等。ACL可以过滤网络中的流量，是控制访问的一种网络技术手段。ACL是物联网中保障系统安全性的重要技术，在设备硬件层安全基础上，通过对在软件层面对设备间通信进行访问控制，使用可编程方法指定访问规则，防止非法设备破坏系统安全，非法获取系统数据。<a id="more"></a><p>此篇博客主要讲ACL的一些基础配置，以及两个有关于自己平时学习上有关于ACL的综合实验。</p><h1 id="ACL基础知识"><a href="#ACL基础知识" class="headerlink" title="ACL基础知识"></a>ACL基础知识</h1><h1 id="ACL综合实验"><a href="#ACL综合实验" class="headerlink" title="ACL综合实验"></a>ACL综合实验</h1><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/Topology1.jpg"><p><strong>实验要求</strong>：某公司有一台三层交换机，公司的服务器、部门A、部门B的用户都连接到这台交换机上，并有以下规定：</p><ol><li>完成PC、服务器、交换机、路由器的基础配置（包括接口地址、vlan划分、静态或者动态路由等）</li><li>部门A和部门B的用户不允许访问FTP服务器和VOD服务器，但可以随时访问Mail服务器。</li><li>内部用户可以通过代理192.168.3.100（提示：路由器R0的下接口地址）访问Internet，但不允许部门A的用户访问Internet。（路由器router0上方的网络模拟为外网Internet）</li><li>部门A和部门B的总经理（IP地址分别为192.168.1.100和192.168.2.100）可以访问Internet和所有服务器。<blockquote><p>提示：cisco 访问控制列表建立与规则书写的格式如下：<br>access-list 表号 permit（deny） 协议 源地址 目的地址 运算符 端口号<br>在接口下应用ACL的指令如下：<br>Ip access-group 表号 out (in)</p></blockquote></li></ol><p><span id="inline-blue">注意</span>此实验二层交换机不需要做配置<br>配置三层交换机<code>S1</code></p><blockquote><p>Switch&gt;<br>Switch&gt;en<br>Switch#conf t<br>Switch(config)#vlan 2<br>Switch(config-vlan)#exit<br>Switch(config)#vlan 3<br>Switch(config-vlan)#exit<br>Switch(config)#vlan 4<br>Switch(config-vlan)#exit<br>Switch(config)#int fa 0/1<br>Switch(config-if)#sw acc vlan 1<br>Switch(config-if)#exit<br>Switch(config)#int fa 0/2<br>Switch(config-if)#sw acc vlan 2<br>Switch(config-if)#exit<br>Switch(config)#int fa 0/3<br>Switch(config-if)#sw acc vlan 3<br>Switch(config-if)#exit<br>Switch(config)#int fa 0/4<br>Switch(config-if)#sw acc vlan 4<br>Switch(config-if)#exit<br>Switch(config)#int vlan 1<br>Switch(config-if)#ip add 192.168.1.1 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#int vlan 2<br>Switch(config-if)#ip add 192.168.2.1 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#int vlan 3<br>Switch(config-if)#ip add 192.168.3.1 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#int vlan 4<br>Switch(config-if)#ip add 192.168.4.1 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#ip routing<br>Switch(config)#router rip<br>Switch(config-router)#network 192.168.1.0<br>Switch(config-router)#network 192.168.2.0<br>Switch(config-router)#network 192.168.3.0<br>Switch(config-router)#network 192.168.4.0<br>Switch(config-router)#version 2<br>Switch(config)#ip access-list extended 100<br>Switch(config-ext-nacl)#permit ip host 192.168.1.100 any<br>Switch(config-ext-nacl)#deny ip 192.168.1.100 0.0.0.255 host 192.168.4.60<br>Switch(config-ext-nacl)#deny ip 192.168.1.100 0.0.0.255 host 192.168.4.70<br>Switch(config-ext-nacl)#deny ip 192.168.1.100 0.0.0.255 host 192.168.3.100<br>Switch(config-ext-nacl)#permit ip any any<br>Switch(config-ext-nacl)#int vlan 1<br>Switch(config-if)#ip access-group 100 in<br>Switch(config-if)#ip access-list extended 101<br>Switch(config-ext-nacl)#permit ip host 192.168.2.100 any<br>Switch(config-ext-nacl)#deny ip 192.168.2.100 0.0.0.255 host 192.168.4.60<br>Switch(config-ext-nacl)#deny ip 192.168.2.100 0.0.0.255 host 192.168.4.70<br>Switch(config-ext-nacl)#permit ip any any<br>Switch(config-ext-nacl)#int vlan 2<br>Switch(config-if)#ip access-group 101 in</p></blockquote><p>配置路由器<code>R1</code></p><blockquote><p>Router&gt;en<br>Router#conf t<br>Router(config)#int fa 0/0<br>Router(config-if)#ip add 192.168.3.100 255.255.255.0<br>Router(config-if)#no shutdown<br>Router(config-if)#exit<br>Router(config)#int fa 0/1<br>Router(config-if)#ip add 192.168.5.1 255.255.255.0<br>Router(config-if)#no shutdown<br>Router(config)#router rip<br>Router(config-router)#network 192.168.3.0<br>Router(config-router)#network 192.168.5.0<br>Router(config-router)#version 2</p></blockquote><p>结果验证<br>部门A经理上网—可以上网<br>Ping 192.168.3.100<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/A.png"><br>部门A经理访问Mail、FTP、VOD服务器—可以访问<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/B.png"><br>部门A用户上网—不能上网<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/C.png"><br>部门A用户访问Mail服务器—可以访问<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/D.png"><br>部门A用户访问FTP服务器和VOD服务器—不能访问<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/E.png"><br>部门B经理上网—可以上网<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/F.png"><br>部门B经理访问FTP、Mail、VOD服务器—可以访问<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/G.png"><br>部门B用户上网—可以上网<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/H.png"><br>部门B用户访问Mail服务器—可以访问<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/I.png"><br>部门B用户访问FTP服务器和VOD服务器—不能访问<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/J.png"></p><h1 id="ospf及ACL综合实验"><a href="#ospf及ACL综合实验" class="headerlink" title="ospf及ACL综合实验"></a>ospf及ACL综合实验</h1><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/Topology2.jpg"><blockquote><p>实验要求：</p></blockquote><ol><li>S2、S3均是三层交换机，要求把PC1和PC2的网关配置在S3上，Server的网关配置在R4上；</li><li>各个设备的接口地址在所属网段内自行选用，终端PC1、PC2及Server的地址如图所示；</li><li>R1、R4、S2、S3的相应端口运行OSPF路由协议，各个区域的区域号由自己定义；</li><li>在R4上通过引入直连路由的方式把Server所在的网段发布进OSPF路由进程；</li><li>在S3上通过引入直连路由的方式把两台PC所在的网段发布进OSPF路由进程；</li><li>通过在R1上配置ACL，使PC2所在的网段不能访问R1右侧公网，PC1所在的网段可以访问R1右侧公网但是不能访问公网中的Server。</li></ol><p>三层交换机<code>S1</code></p><blockquote><p>Switch&gt;en<br>Switch#conf t<br>Switch(config)#vlan 2<br>Switch(config-vlan)#exit<br>Switch(config)#vlan 3<br>Switch(config-vlan)#exit<br>Switch(config)#vlan 1<br>Switch(config-vlan)#exit<br>Switch(config)#int fa 0/1<br>Switch(config-if)#sw acc vlan 1<br>Switch(config-if)#exit<br>Switch(config)#int fa 0/2<br>Switch(config-if)#sw acc vlan 2<br>Switch(config-if)#exit<br>Switch(config)#int fa 0/3<br>Switch(config-if)#sw acc vlan 3<br>Switch(config-if)#exit<br>Switch(config)#int vlan 1<br>Switch(config-if)#ip add 192.168.11.1 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#int vlan 2<br>Switch(config-if)#ip add 192.168.22.1 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#int vlan 3<br>Switch(config-if)#ip add 13.0.0.1 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#ip routing<br>Switch(config)#router ospf 10<br>Switch(config-router)#network 192.168.11.0 0.0.0.255 area 1<br>Switch(config-router)#network 192.168.22.0 0.0.0.255 area 1<br>Switch(config-router)#network 13.0.0.0 0.0.0.255 area 1</p></blockquote><p>三层交换机<code>S2</code></p><blockquote><p>Switch&gt;en<br>Switch#conf t<br>Switch(config)#vlan 1<br>Switch(config-vlan)#exit<br>Switch(config)#vlan 2<br>Switch(config-vlan)#exit<br>Switch(config)#int fa 0/1<br>Switch(config-if)#sw acc vlan 1<br>Switch(config-if)#exit<br>Switch(config)#int vlan 1<br>Switch(config-if)#ip add 12.0.0.2 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#int fa 0/2<br>Switch(config-if)#sw acc vlan 2<br>Switch(config-if)#exit<br>Switch(config)#int vlan 2<br>Switch(config-if)#ip add 24.0.0.1 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#ip routing<br>Switch(config)#router ospf 10<br>Switch(config-router)#network 12.0.0.0 0.0.0.255 area 0<br>Switch(config-router)#network 24.0.0.0 0.0.0.255 area 2</p></blockquote><p>路由器<code>R1</code></p><blockquote><p>Router&gt;en<br>Router#conf t<br>Router(config)#int fa 0/0<br>Router(config-if)#ip add 13.0.0.2 255.255.255.0<br>Router(config-if)#no shutdown<br>Router(config-if)#exit<br>Router(config)#int fa 0/1<br>Router(config-if)#ip add 12.0.0.1 255.255.255.0<br>Router(config-if)#no shutdown<br>Router(config-if)#exit<br>Router(config)#router ospf 10<br>Router(config-router)#network 13.0.0.0 0.0.0.255 area 1<br>Router(config-router)#network 12.0.0.0 0.0.0.255 area 0<br>Router(config-router)#exit<br>Router(config)#ip access-list extended 100<br>Router(config-ext-nacl)#deny ip 192.168.11.0 0.0.0.255 host 8.8.8.8<br>Router(config-ext-nacl)#permit ip 192.168.11.0 0.0.0.255 any<br>Router(config-ext-nacl)#deny ip 192.168.22.0 0.0.0.255 any<br>Router(config-ext-nacl)#permit ip any any<br>Router(config-ext-nacl)#int fa 0/1<br>Router(config-if)#ip acc<br>Router(config-if)#ip access-group 100 out</p></blockquote><p>路由器<code>R2</code></p><blockquote><p>Router&gt;en<br>Router#conf t<br>Router(config)#int fa 0/0<br>Router(config-if)#ip add 24.0.0.2 255.255.255.0<br>Router(config-if)#no shutdown<br>Router(config-if)#exit<br>Router(config)#int fa 0/1<br>Router(config-if)#ip add 8.8.8.1 255.255.255.0<br>Router(config-if)#no shutdown<br>Router(config-if)#exit<br>Router(config)#router ospf 10<br>Router(config-router)#network 24.0.0.0 0.0.0.255 area 2<br>Router(config-router)#network 8.0.0.0 0.0.0.255 area 2</p></blockquote><p>验证<br><code>PC1</code>访问<code>R1</code>右侧公网—可以访问<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/1.png"><br><code>PC1</code>访问服务器—不能访问<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/2.png"><br><code>PC2</code>访问<code>R1</code>右侧公网—不能访问<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ACL/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test</title>
      <link href="/test.html"/>
      <url>/test.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/%E7%BD%91%E9%A1%B5/img/West.png" alt=""></p><a id="more"></a><iframe height="400" style="width: 100%;" scrolling="no" title="mYjxmL" src="//codepen.io/x1angfeng/embed/mYjxmL/?height=265&theme-id=0&default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/x1angfeng/pen/mYjxmL/' target="_blank" rel="noopener">mYjxmL</a> by X1angfeng  (<a href='https://codepen.io/x1angfeng' target="_blank" rel="noopener">@x1angfeng</a>) on <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=0 height=0 src="https://music.163.com/outchain/player?type=2&id=199768&auto=1&height=66"></iframe>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置与管理FTP服务</title>
      <link href="/ftp.html"/>
      <url>/ftp.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>FTP用于在Internet上控制文件的双向传输。同时，它也是一个应用程序。基于不同的操作系统有不同的FTP应用程序，而所有这些应用程序都遵循同一种协议以传输文件。在FTP的使用中，用户经常遇到两个概念：“下载”和“上传”下载文件就是从远程主机复制文件到自己的电脑上💻；上传文件就是将自己电脑上💻的文件复制到远程计算机。</p></blockquote><a id="more"></a><h1 id="任务一"><a href="#任务一" class="headerlink" title="任务一"></a>任务一</h1><p><code>配置企业文件下载服务器</code><br>某公司视频网站处于经营初期，为了提高公司的知名度，争取更多的用户资源，预把自己拥有的视频资源分享给互联网用户。具体要求如下<br><strong>(1)</strong>配置FTP匿名用户的主目录为/var/ftp/anon,下载带宽限制为100KB/S.<br><strong>(2)</strong>建立一个名为abc、口令为xyz的FTP账户，下载带宽限制为500KB/S.<br><strong>(3)</strong>设置FTP服务器，同时登录到FTP服务器的最大链接数为100；每个IP最大链接数为3；用户空闲时间超过限值为5分钟。<br><strong>(4)</strong>服务器IP地址为192.168.131.129<br><span id="inline-blue">任务实施</span></p><h2 id="设置IP地址"><a href="#设置IP地址" class="headerlink" title="设置IP地址"></a>设置IP地址</h2><p>使用<code>setup</code>或者<code>vim /etc/sysconfig/network-scripts/ifcfg-eth0</code>来修改服务器的IP地址，然后使用<code>service network restart</code>重启网络服务。</p><h2 id="安装vsftpd文件"><a href="#安装vsftpd文件" class="headerlink" title="安装vsftpd文件"></a>安装vsftpd文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vsftpd #安装vsftpd</span><br><span class="line">rpm -qa |grep vsftpd #查询安装信息</span><br></pre></td></tr></table></figure><h2 id="建立匿名用户主目录以及abc用户"><a href="#建立匿名用户主目录以及abc用户" class="headerlink" title="建立匿名用户主目录以及abc用户"></a>建立匿名用户主目录以及abc用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/ftp/anon</span><br><span class="line">useradd -s /sbin/nologin abc #建立用户不允许本地登录</span><br><span class="line">passwd abc</span><br></pre></td></tr></table></figure><h2 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h2><p>编辑配置文件前首先使用<code>cp -p  /etc/vsftpd/vsftpd.conf  /etc/vsftpd/vsftpd.conf.bak</code>命令备份配置文件,然后使用<code>vim /etc/vsftpd/vsftpd.conf</code>命令编辑vsftpd配置文件，主要修改的内容如下:<br><code>注意</code>有的是需要修改的,有的是需要添加的</p><p>anonymous_enable=yes<br>anon_root=/var/ftp/anon<br>anon_max_rate=100000<br>local_enable=yes<br>local_max_rate=500000<br>max_clinets=100<br>max_per_ip=3<br>connect_timeout=300</p><h2 id="配置vsftpd在系统中运行"><a href="#配置vsftpd在系统中运行" class="headerlink" title="配置vsftpd在系统中运行"></a>配置vsftpd在系统中运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --levels 2335 vsftpd on #开机运行</span><br><span class="line">service vsftpd restart #重启服务</span><br></pre></td></tr></table></figure><h2 id="了解配置文件"><a href="#了解配置文件" class="headerlink" title="了解配置文件"></a>了解配置文件</h2><p>anonymous_enable=yes #允许匿名用户登录<br>local_enable=yes #用户本地用户登录<br>write_enable=yes #允许本地用户具有写的权限<br>local_umask=022<br>#设置本地用户的文件生成掩码为022，默认为077；文件写入格式<br>anon_mkdir_write_enable=yes #允许匿名用户具有写的权限<br>dirmessage_enable=yes #激活上传/下载日子，当远程用户更改时提示<br>ascii_download_enable=yes #允许用户用ASCII格式来上传/下载文件<br>ftp_banner=welcome to you! #用户登录时提示欢迎词<br>userlist_enable=yes<br>#用户列表是否启用,当用户加入到/etc/vsftpd/ftpusers文件时，用户将不能访问FTP服务</p><p>经过测试abc用户和匿名用户均可访问FTP服务器资源。</p><h1 id="任务二"><a href="#任务二" class="headerlink" title="任务二"></a>任务二</h1><p><code>配置企业内部文件FTP配额</code><br><span id="inline-blue">背景</span>某工厂制造加工企业，接到一笔较大的生产订单，需要多部分联合开发配合完成，部门之间需要交换公共文件，同时也需要部门之间有各自保密的文件。<br><strong>(1)</strong>新建一个分区，10GB空间，ext3文件系统，挂载到/ftp下，作为FTP服务器数据存放的地方。<br><strong>(2)</strong>四个部门：dep1、dep2、dep3、dep4，分别对应目录<code>/ftp/dep1,/ftp/dep2,/ftp/dep3,/ftp/dep4</code>.另外设定一个公共目录/ftp/public<br><strong>(3)</strong>五个用户:admin,user1,user2,user3,user4。user1,user2,user3,user4对应的部门分别是dep1,dep2,dep3,dep4,他们只能访问属于自己部门的目录和public目录。admin管理员用户可以访问服务器上的任意一个目录。<br><strong>(4)</strong>用户访问权限控制:user1,user2,user3,user4在所能访问的目录，具有上传文件、下载文件的功能，但是不具有删除文件、更改文件权限等功能。admin管理员对所有目录有文件上传、下载、删除、权限更改等功能。<br><strong>(5)</strong>对每个部门定制一个quota，设置该账户的文件配额为1000个，磁盘配额为2GB。<br><strong>(6)</strong>禁止匿名用户访问</p><h2 id="磁盘分区与挂载"><a href="#磁盘分区与挂载" class="headerlink" title="磁盘分区与挂载"></a>磁盘分区与挂载</h2><p>增加一块硬盘，然后使用下面命令进行分区，并把分区挂载情况写入/etc/fstab</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br><span class="line">mkfs.ext3 /dev/sdb1</span><br><span class="line">mkdir /ftp</span><br><span class="line">mount /dev/sdb1 /ftp -o usrquota,grpquota #挂载分区</span><br></pre></td></tr></table></figure><p>使用<code>vim /etc/fstab</code>命令设置开机自动挂载,在文件最后增加如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/sdb1 /ftp ext3 defaults,usrquota,grpquota 0 0</span><br></pre></td></tr></table></figure><h2 id="建立用户与用户组并设置权限"><a href="#建立用户与用户组并设置权限" class="headerlink" title="建立用户与用户组并设置权限"></a>建立用户与用户组并设置权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">groupadd dep1</span><br><span class="line">groupadd dep2</span><br><span class="line">groupadd dep3</span><br><span class="line">groupadd dep4</span><br><span class="line">groupadd market</span><br><span class="line">useradd -G dep1,market user1</span><br><span class="line">useradd -G dep2,market user2</span><br><span class="line">useradd -G dep3,market user3</span><br><span class="line">useradd -G dep4,market user4</span><br><span class="line">useradd -G dep1,dep2,dep3,dep4,market admin</span><br><span class="line">passwd user1</span><br><span class="line">passwd user2</span><br><span class="line">passwd user3</span><br><span class="line">passwd user4</span><br><span class="line">passwd admin</span><br><span class="line">mkdir /ftp/dep1</span><br><span class="line">mkdir /ftp/dep2</span><br><span class="line">mkdir /ftp/dep3</span><br><span class="line">mkdir /ftp/dep4</span><br><span class="line">mkdir /ftp/public</span><br><span class="line">chown user1:dep1 /ftp/dep1</span><br><span class="line">chown user2:dep2 /ftp/dep2</span><br><span class="line">chown user3:dep3 /ftp/dep3</span><br><span class="line">chown user4:dep4 /ftp/dep4</span><br><span class="line">chown admin:market /ftp/public</span><br><span class="line">chmod 770 /ftp/dep1</span><br><span class="line">chmod 770 /ftp/dep2</span><br><span class="line">chmod 770 /ftp/dep3</span><br><span class="line">chmod 770 /ftp/dep4</span><br><span class="line">chmod 770 /ftp/public</span><br></pre></td></tr></table></figure><p>最终新建的用户、用户组、文件夹以及权限如下图所示<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ftp.png" alt=""></p><h2 id="创建quota，配置磁盘配额"><a href="#创建quota，配置磁盘配额" class="headerlink" title="创建quota，配置磁盘配额"></a>创建quota，配置磁盘配额</h2><p>使用<code>setenforce 0</code>关闭SELinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">quotacheck -cuvg /dev/sdb1</span><br><span class="line">quotaon -a</span><br><span class="line">edquota -g dep1</span><br></pre></td></tr></table></figure><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/edquota.png" alt=""><br>使用<code>edquota -p dep1 -g dep2 dep3 dep4</code>命令把quota属性设置套用到其余用户组。</p><h2 id="编辑配置文件-1"><a href="#编辑配置文件-1" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h2><p>使用<code>vim /etc/vsftpd/vsftpd.conf</code>修改或添加如下几处内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=NO</span><br><span class="line">local_root=/ftp</span><br><span class="line">user_config_dir=/etc/vsftpd/ftp_config_dir</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br></pre></td></tr></table></figure><h2 id="建立用户独立文件"><a href="#建立用户独立文件" class="headerlink" title="建立用户独立文件"></a>建立用户独立文件</h2><p>使用<code>mkdir /etc/vsftpd/ftp_config_dir</code>命令建立每个用户独立文件存放的目录。使用<code>vim /etc/vsftpd/ftp_config_dir/user1</code>命令建立用户配置文件，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmds_allowed=ABOR,ACCT,APPE,CWD,CDUP,HELP,LIST,MODE,MDTM,NOOP,NLST,PASS,PASV,PORT,PWD,QUIT,REIN,RETR,SITE,SIZE,STOR,STAT,STOU,STRU,SYST,TYPE,USER</span><br></pre></td></tr></table></figure><p>使用命令<code>cd /etc/vsftpd/ftp_config_dir</code>进入到目录下，然后使用<code>cp user1 user2</code>,<code>cp user1 user3</code>,<code>cp user1 user4</code>复制配置文件</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>使用windows作为客户端来进行验证，在资源管理器的地址栏或者，浏览器的地址栏中输入<code>ftp://192.168.131.129</code>可以看到以下内容<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/2.png" alt="">这里显示让我们输入账户以及密码才可以登陆。无法使用匿名用户访问<br>或者当使用cmd命令行输入<code>ftp 192.168.131.129</code>尝试用匿名用户登陆显示登陆失败。<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/3.png" alt=""><br>这是因为设置了禁止匿名用户访问所以才会这样，因此应该使用之前建立的用户登陆。为了区分登陆分别在/home/user1<del>4的文件夹下创建user1</del>user4文件夹。并且在/ftp/dep1<del>4目录下创建名为1</del>4的文件。<br>当各个部门用户登陆成功后分别会显示一个对应自己用户名字的文件夹<img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/1.png" alt="">)当管理员admin用户登陆成功后显示如下所示内容。<img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/admin.png" alt=""><br>下面测试使用cmd命令行的方式来进行登陆ftp服务器进行文件的上传以及下载。</p><h3 id="user1-4"><a href="#user1-4" class="headerlink" title="user1~4"></a>user1~4</h3><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/user1.png" alt=""><br>因为操作都一样所以就截了一张图<br>查看windows客户端下载的文件<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/windows.png" alt=""><br><code>1~4</code>和<code>public</code>均为从服务器上下载下来的文件，<br>查看Linux服务器被上传的文件<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/Linux.png" alt=""><br>测试客户端是否能删除文件<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/delete.png" alt="">如图显示是无法删除的，到此为止测试各个部门的上传下载以及删除权限已经测试完毕。<br>测试用户的配额是否配置成功❓<br>可以搞一个这里搞一个centos的系统镜像来测试，大小为4.16GB.最终发现是无法放入的</p><h3 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h3><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/admin1.png" alt=""><br>这里管理员用户对于四个部门的目录均具有上传、下载、删除的权限，理所当然对于公共目录public也同样具有最高的权限。</p><h1 id="任务三"><a href="#任务三" class="headerlink" title="任务三"></a>任务三</h1><p><code>配置vsftp虚拟用户访问</code></p><h2 id="安装相关文件"><a href="#安装相关文件" class="headerlink" title="安装相关文件"></a>安装相关文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install pam* -y</span><br><span class="line">yum install db4* -y</span><br></pre></td></tr></table></figure><h2 id="建立用户"><a href="#建立用户" class="headerlink" title="建立用户"></a>建立用户</h2><p>建vsftpd服务宿主用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd vsftpdadmin -s /sbin/nologin</span><br></pre></td></tr></table></figure><p>建立vsftpd服务的宿主用户用来替换root用户，并不需要登录所以指定不可用shell。</p><p>建立FTP虚拟宿主账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd ftpuser -s /sbin/nologin</span><br></pre></td></tr></table></figure><h2 id="配置vsftpd-conf文件"><a href="#配置vsftpd-conf文件" class="headerlink" title="配置vsftpd.conf文件"></a>配置vsftpd.conf文件</h2><p>使用vim命令进行编辑，编辑前记得备份使用<code>cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak</code>来备份，vsftpd主配置文件，主要修改下面部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=NO </span><br><span class="line">chroot_list_enable=YES </span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br></pre></td></tr></table></figure><p><code>anonymous_enable=NO</code>不允许匿名用户访问，默认为YES,<code>chroot_list_enable=YES</code>不允许FTP用户离开自己的主目录,<code>chroot_list_file=/etc/vsftpd/chroot_list</code>搭配上面一行使用的，这条是锁定用户只能登录家目录的位置，如果不开启用户登录时就会报500 OOPS的错误。</p><p id="div-border-left-blue">注意/etc/vsftpd/chroot_list本身是不存在的，需要自己手动创建。往里面输入账户一行一个</p>文件内具体代码的意义<blockquote><p>local_enable=YES #允许本地用户访问<br> write_enable=YES #允许写入<br> local_umask=022 #上传后文件的掩码<br> dirmessage_enable=YES #开启目录标语<br> xferlog_enable=YES #开启日志<br> connect_from_port_20=YES #设定连接端口<br> xferlog_std_format=YES #设定vsftpd服务日子保存路径<br> idle_session_timeout=600 #会话超时时间<br> async_abor_enable=YES #支持异步传输功能<br> ascii_upload_enable=YES #支持ASCII模式上传功能<br> ascii_download_enable=YES #支持ASCII模式的下载功能<br> ftpd_banner=Welcome to blah FTP service. #FTP登录欢迎语<br> chroot_local_user=YES #禁止本地用户登录自己的FTP主目录<br> pam_service_name=vsftpd #设定pam服务下vsftpd的验证配置文件名<br> userlist_enable=YES #拒绝登录用户名单</p></blockquote><p>userlist_deny=NO </p><p>TCP_wrappers=YES #限制主机对VSFTP服务器的访问<br> tcp_wrapper=YES<br> chroot_local_user=NO<br> guest_enable=YES #设定启用虚拟用户功能<br> guest_username=ftpuser #指定虚拟用户的宿主用户<br> virtual_use_local_privs=YES #设定虚拟用户的权限符合其宿主用户<br> user_config_dir=/etc/vsftpd/vconf #设定虚拟用户个人vsftp的配置文件存放路径</p><h2 id="建立日志文件并修改权限"><a href="#建立日志文件并修改权限" class="headerlink" title="建立日志文件并修改权限"></a>建立日志文件并修改权限</h2> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch /var/log/vsftpd.log</span><br><span class="line">chown vsftpdadmin.vsftpdadmin /var/log/vsftpd.log</span><br></pre></td></tr></table></figure><h2 id="建立虚拟用户文件"><a href="#建立虚拟用户文件" class="headerlink" title="建立虚拟用户文件"></a>建立虚拟用户文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/vsftpd/vconf</span><br><span class="line">touch /etc/vsftpd/vconf/vir_user</span><br></pre></td></tr></table></figure><h2 id="建立虚拟用户"><a href="#建立虚拟用户" class="headerlink" title="建立虚拟用户"></a>建立虚拟用户</h2><p>使用<code>vim /etc/vstfpd/vconf/vir_user</code>命令来编辑虚拟用户文件，添加如下内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virtualuser #账号</span><br><span class="line">123456      #密码</span><br></pre></td></tr></table></figure><p>使用<code>vim /etc/vsftpd/chroot_list</code>命令来锁定用户目录的配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virtualuser</span><br><span class="line">virtual2</span><br></pre></td></tr></table></figure><h2 id="生成数据库"><a href="#生成数据库" class="headerlink" title="生成数据库"></a>生成数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_load -T -t hash -f /etc/vsftpd/vconf/vir_user /etc/vsftpd/vconf/vir_user.db</span><br></pre></td></tr></table></figure><h2 id="设置数据文件的访问权限"><a href="#设置数据文件的访问权限" class="headerlink" title="设置数据文件的访问权限"></a>设置数据文件的访问权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 /etc/vsftpd/vconf/vir_user</span><br><span class="line">chmod 600 /etc/vsftpd/vconf/vir_user.db</span><br></pre></td></tr></table></figure><h2 id="修改-etc-pam-d-vsftpd内容"><a href="#修改-etc-pam-d-vsftpd内容" class="headerlink" title="修改/etc/pam.d/vsftpd内容"></a>修改/etc/pam.d/vsftpd内容</h2><p>使用<code>vim /etc/pam.d/vsftpd</code>命令编辑文件，内容如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#%PAM-1.0</span><br><span class="line">auth sufficient pam_userdb.so db=/etc/vsftpd/vconf/vir_user</span><br><span class="line">account sufficient pam_userdb.so db=/etc/vsftpd/vconf/vir_user</span><br></pre></td></tr></table></figure><p><strong>备注</strong>：auth是对于用户的用户名口令进行验证，account是对于用户的账户有哪些权限、哪些限制进行验证，sufficent表示充分条件，pam_userdb.so表示该条审核将调用库函数pam_userdb.so进行。db=/etc/vsftpd/vconf/vir_user指定验证库函数将到这个指定的数据库中调用数据进行验证。</p><h2 id="创建用户的配置文件"><a href="#创建用户的配置文件" class="headerlink" title="创建用户的配置文件"></a>创建用户的配置文件</h2><p>使用<code>vim /etc/vsftpd/vconf/virtualuser</code>创建用户配置文件。输入如下所示内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">local_root=/home/share</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">write_enable=YES</span><br><span class="line">local_umask=0333</span><br><span class="line">anon_umask=0777</span><br><span class="line">file_open_mode=0777</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line">anon_other_write_enable=YES</span><br><span class="line">cmds_allowed=STOR,FEAT,REST,ABOR,CWD,LIST,MDTM,NLST,PASS,PASV,PORT,PWD,QUIT,RMD,RNFR,SIZE,TYPE,USER,ACCT,APPE,CDUP,HELP,MODE,NOOP,REIN,STAT,STOU,STRU,SYST,RETR</span><br><span class="line">idle_session_timeout=600</span><br><span class="line">data_connection_timeout=120</span><br><span class="line">max_clients=10</span><br><span class="line">max_per_ip=5</span><br><span class="line">local_max_rate=1048576</span><br></pre></td></tr></table></figure><h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><p>使用<code>service vsftpd restart</code>或者<code>/etc/init.d/vsftpd restart</code></p><h2 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h2><h1 id="任务四"><a href="#任务四" class="headerlink" title="任务四"></a>任务四</h1><p><code>部署专家级FTP服务器</code></p><h2 id="配置默认的vsftpd服务器"><a href="#配置默认的vsftpd服务器" class="headerlink" title="配置默认的vsftpd服务器"></a>配置默认的vsftpd服务器</h2><ol><li><p>挂载系统光盘</p><blockquote><p>mount /dev/cdrom /mnt</p></blockquote></li><li><p>安装vsftpd</p><p>在此，使用rpm的安装方式来安装，安装包放在系统光盘的Packages目录中</p><blockquote><p>rpm -ivh /mnt/Packages/vsftpd-2.2.2-11.el6_4.1.x86_64.rpm </p></blockquote></li><li><p>查看vsftpd配置文件</p><blockquote><p>grep -v “#” /etc/vsftpd/vsftpd.conf</p></blockquote><p> <img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/grep.png" alt=""></p></li><li><p>在系统中允许</p><blockquote><p>chkconfig –levels 235 vsftpd on<br>service vsftpd restart</p></blockquote></li></ol><h2 id="配置匿名用户访问和下载权限"><a href="#配置匿名用户访问和下载权限" class="headerlink" title="配置匿名用户访问和下载权限"></a>配置匿名用户访问和下载权限</h2><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><blockquote><p>service vsftpd start</p></blockquote><p>测试前关闭selinux和防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>在客户机中测试用文件夹方式访问<a href="ftp://192.168.131.129" target="_blank" rel="noopener">ftp://192.168.131.129</a>.</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/pub.png" alt=""></p><h3 id="测试匿名用户的上传和下载权限"><a href="#测试匿名用户的上传和下载权限" class="headerlink" title="测试匿名用户的上传和下载权限"></a>测试匿名用户的上传和下载权限</h3><p><code>注意:</code>使用匿名账户ftp登录(无密)，查看现在所有的工作目录为/，这个/并不是服务器的根目录，而是匿名用户自己的家目录，使用ls命令发现里面有一个pub文件。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/pub1.png" alt=""></p><p>匿名用户的家目录就是服务器上的/var/ftp目录。在服务器上建立一个可供下载的文件。使用<code>echo &quot;hello world&quot;&gt;/var/ftp/1.txt</code>新建一个内容为hello world的文件。回到客户机上使用<code>get 1.txt</code>命令下载文件。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/get.png" alt="">)可以在客户机上查看到一个1.txt的文件。在客户机上把下载的文件重命名一下，来测试上传。<img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/put.png" alt="">上传时被拒绝，因为匿名用户默认只能下载而不能上传。测试系统的用户的上传权限，这里可以使用<code>useradd upload</code>新建一个upload用户，使用<code>passwd upload</code>来设置用户的密码。再次用客户机进行测试，用upload登录并上传11.txt文件，文件上传成功。<img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/put1.png" alt="">使用<code>ls -l /home/upload</code>命令查看上传文件的权限为644(因为配置文件中local_umask=022)</p><h3 id="配置匿名用户拥有完全权限"><a href="#配置匿名用户拥有完全权限" class="headerlink" title="配置匿名用户拥有完全权限"></a>配置匿名用户拥有完全权限</h3><p>1.修改配置文件</p><p>可以在配置文件中加入<code>anon_mkdir_write_enable=YES</code>和<code>anon_upload_enable=YES</code>使匿名用户具有上传删除的权限。</p><p><span id="inline-purple">注意</span>当不知道如何配置要添加或者修改哪些选项时。可以使用man来找到答案<code>man vsftpd.conf</code>,查找与anon相关内容，找到anon_other_write_enable它的默认值是NO,所以设置为YES就可以允许上传、创建目录、并且删除、重命名等操作。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/a.png" alt=""></p><p>2.效果验证</p><p>使用<code>service vsftpd reload</code>命令重新加载配置，然后在客户机上再次用匿名用户进行测试。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/b.png" alt=""></p><p>发现还是无法上传和删除文件，回到服务器后查看ftp目录的权限后发现它没有写的权限，所以是无法上传和删除的。</p><p>3.修改权限</p><p>选择暴力方法使用<code>chmod 777 /var/ftp</code>将权限设为最大，然后回到客户机登录发现直接报错了。因为我们把/ftp这个目录权限设为最大，这样匿名用户就可以为所欲为了。为了避免类事情的发生为安全起见所以vsfptd设置了不允许登录。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/c.png" alt=""></p><p>4.正确配置文件夹的权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /var/ftp #把权限改为默认的755</span><br><span class="line">cd /var/ftp #进入ftp目录</span><br><span class="line">mkdir anon#在目录下新建目录</span><br><span class="line">chmod 777 anon  #修改目录权限</span><br><span class="line">cp 1.txt anon#复制文件到anon目录下</span><br><span class="line">cd anon#进入anon目录</span><br><span class="line">ls -l#查看1.txt的权限</span><br><span class="line">chmod 666 test.txt #修改文件权限为可写</span><br></pre></td></tr></table></figure><p>5.测试</p><p>回到客户机来测试能否删除1.txt文件和上传新的文件。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/d.png" alt=""></p><h2 id="配置登录用户禁锢在家目录"><a href="#配置登录用户禁锢在家目录" class="headerlink" title="配置登录用户禁锢在家目录"></a>配置登录用户禁锢在家目录</h2><p>vsftp用户登录系统后，当前目录一般为家目录，用户的各种操作均在此目录中实现，但是搭建的vsftpd服务器默认并不是我们想要的这样，用户是可以随意切换到系统中的其他目录中去的，这样就给系统的安全带来了很大的隐患。</p><h3 id="测试用户权限"><a href="#测试用户权限" class="headerlink" title="测试用户权限"></a>测试用户权限</h3><p>使用upload用户登录到服务器，测试是否可以切换目录。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/e.png" alt=""></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>修改配置文件去掉<code>&quot;chroot_local_user=YES&quot;</code>前的注释符号#</p><h3 id="重启服务-1"><a href="#重启服务-1" class="headerlink" title="重启服务"></a>重启服务</h3><p>可以使用<code>service vsftpd reload</code>命令重启服务器使刚才的配置生效。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>在客户机使用upload用户登录，切换到根目录然后使用ls命令来查看文件发现并不能看到根目录下的内容，只能看到自己家目录下的内容。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/f.png" alt=""></p><h2 id="配置实现现在某些用户访问"><a href="#配置实现现在某些用户访问" class="headerlink" title="配置实现现在某些用户访问"></a>配置实现现在某些用户访问</h2><blockquote><p>vsftp服务和samba服务不一样，在samba服务中系统和samba用户是分开的，而在vsftp服务中，只要是系统默认用户就是vsftp用户。也就是说只要能够登录系统就可以登录vsftp服务器，这样做显然是不太合理的。</p></blockquote><p>1.查看配置vsftpd配置的相关文件</p><p>在<code>/etc/vsftpd</code>目录下有一个user_list文件，使用cat命令来查看文件中的内容，发现都是拒绝登录vsftp服务器的用户。所以谁不可以登录就把账号写进这个文件中。</p><p>2.添加拒绝账户到文件中</p><p>使用<code>vim /etc/vsftpd/user_list</code>命令编辑文件在最后一行加入upload账户用以拒绝访问upload登录ftp服务器。然后重启服务</p><p>3.效果验证</p><p>回到客户机用upload登录，会显示失败。<img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/g.png" alt=""></p><p><span id="inlie-blue">备注</span>这里登录失败的原因是应为把upload写进了user_list这个文件中，这个拒绝用户登录之所以生效是因为<code>/etc/vsftpd/vsftpd.conf</code>配置文件中默认有“user_list_enalbe=YES”这行设置，如果把此配置改成“user_list_enable=YES”那么就只有写进user_list文件中的用户才可以登录。</p><h2 id="配置虚拟用户FTP访问"><a href="#配置虚拟用户FTP访问" class="headerlink" title="配置虚拟用户FTP访问"></a>配置虚拟用户FTP访问</h2><p>在vsftp服务器中，系统用户就是vsftp用户,那么vsftp账户也能够登录系统，为了系统安全考虑，运维人员往往需要只建立vsftp用户，而不希望登录系统，这时就需要用到vsftp服务器的虚拟账户功能。</p><h3 id="新建虚拟用户名文件"><a href="#新建虚拟用户名文件" class="headerlink" title="新建虚拟用户名文件"></a>新建虚拟用户名文件</h3><p>使用<code>vim /etc/vsftpd/vuser</code>命令创建用于存放虚拟用户的文件。文件中奇数行为用户名，偶数行为密码。先在创建两个名分别为Tom和Jack,密码为qwe123的虚拟用户。</p><h3 id="将文件转换成数据库文件"><a href="#将文件转换成数据库文件" class="headerlink" title="将文件转换成数据库文件"></a>将文件转换成数据库文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/vsftpd</span><br><span class="line">db_load -T -thash -f vuser vuser.db</span><br></pre></td></tr></table></figure><p>参数-T指定转换后的文件类型为hash，参数-f指定转换后的文件名为vuser.db。可以使用<code>file vuser.db</code>来查看文件的类型。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/h.png" alt=""></p><h3 id="修改用户文件权限"><a href="#修改用户文件权限" class="headerlink" title="修改用户文件权限"></a>修改用户文件权限</h3><p>为了安全，不能让其他用户拥有vuser和vuser.db文件的任何权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 /etc/vsftpd/vuser</span><br><span class="line">chmod 600 /etc/vsftpd/vuser.db</span><br></pre></td></tr></table></figure><h3 id="创建虚拟用户的映射账户"><a href="#创建虚拟用户的映射账户" class="headerlink" title="创建虚拟用户的映射账户"></a>创建虚拟用户的映射账户</h3><p>虚拟用户创建之后，要给虚拟用户映射到一个系统账号，使用<code>useradd -d /opt/vuser -s /sbin/nologin vuser</code>命令新建一个虚拟用户的映射账号vuser,指定宿主目录为<code>/opt/vuser</code>,并指定不能登录系统。</p><h3 id="配置用户认证信息"><a href="#配置用户认证信息" class="headerlink" title="配置用户认证信息"></a>配置用户认证信息</h3><p>使用<code>vim /etc/pam.d/vsftpd.vu</code>命令为虚拟用户创建pam认证模块，名字为vsftpd.vu。在认证文件中加入如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auth required pam_userdb.so db=/etc/vsftpd/vuser</span><br><span class="line">account required pam_userdb.so db=/etc/vsftpd/vuser</span><br></pre></td></tr></table></figure><p>这里的vuser其实是vuser.db,这里省略了.db，否则会报错。</p><h3 id="开启虚拟用户访问"><a href="#开启虚拟用户访问" class="headerlink" title="开启虚拟用户访问"></a>开启虚拟用户访问</h3><p>使用<code>vim /etc/vsftpd/vsftpd.conf</code>编辑配置文件，在文件的最后添加如下内容，注释掉<code>pam_service_name=vsftpd</code>。如下图所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">guest_enable=YES</span><br><span class="line">guest_username=vuser</span><br><span class="line">pam_service_name=vsftpd.vu</span><br></pre></td></tr></table></figure><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/i.png" alt=""></p><h3 id="效果验证"><a href="#效果验证" class="headerlink" title="效果验证"></a>效果验证</h3><p>使用<code>service vsftpd restart</code>命令重启服务，用客户机进行测试。分别使用Tom和Jack登录并上传文件</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/j.png" alt=""></p><p>使用<code>ls -l /opt/vuser</code>命令查看上传的文件的属主,发现属主均为vuser。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/k.png" alt=""></p><h2 id="配置虚拟用户拥有不同的文件权限"><a href="#配置虚拟用户拥有不同的文件权限" class="headerlink" title="配置虚拟用户拥有不同的文件权限"></a>配置虚拟用户拥有不同的文件权限</h2><h3 id="开启单独配置文件功能"><a href="#开启单独配置文件功能" class="headerlink" title="开启单独配置文件功能"></a>开启单独配置文件功能</h3><p>打开vsftpd.conf配置文件，加入以下一行内容，告诉配置文件在vu_dir目录下找用户的单独权限配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_config_dir=/etc/vsftpd/vu_dir</span><br></pre></td></tr></table></figure><h3 id="建立用户权限文件"><a href="#建立用户权限文件" class="headerlink" title="建立用户权限文件"></a>建立用户权限文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/vsftpd/vu_dir #新建vu_dir目录</span><br><span class="line">cd /etc/vsftpd/vu_dir #进入vu_dir目录</span><br><span class="line">touch Jack</span><br></pre></td></tr></table></figure><p>使用man命令发现anon_umask(匿名上传)的默认权限为600，如国要改变Jack的上传权限为644的话，就把这个值设置为022即可。使用<code>vim Jack</code>命令编辑文件在文件中写入<code>anon_umask=022</code></p><h3 id="效果验证-1"><a href="#效果验证-1" class="headerlink" title="效果验证"></a>效果验证</h3><p>重启服务后，用客户机登录Jack上传一个新的文件。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/FTP/l.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux搭建流媒体服务器</title>
      <link href="/media.html"/>
      <url>/media.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>流媒体指以流方式在网络中传送音频、视频和多媒体文件的媒体形式。相对于下载后观看的网络播放形式而言，流媒体的典型特征是把连续的音频和视频信息压缩后放到网络服务器上，用户边下载边观看，而不必等待整个文件下载完毕。由于流媒体技术的优越性，该技术广泛应用于视频点播、视频会议、远程教育、远程医疗和在线直播系统中。作为新一代互联网应用的标志，流媒体技术在近几年得到了飞速的发展。</p></blockquote><a id="more"></a><h1 id="搭建RTSP流媒体服务器（Darwin-Streaming-Server）"><a href="#搭建RTSP流媒体服务器（Darwin-Streaming-Server）" class="headerlink" title="搭建RTSP流媒体服务器（Darwin Streaming Server）"></a>搭建RTSP流媒体服务器（Darwin Streaming Server）</h1><p><code>注意:</code>上来首先关闭linux系统的防火墙以及selinux然后再进行下面的操作。使用命令<code>service iptables stop</code>和<code>setenforce 0</code>来关闭防火墙以及selinux。这里之所以选择关闭是为后面的测试做准备的。⚠仅限学习测试过程中使用，实际生产过程中是🈲不能这样的。</p><h2 id="安装依赖组件"><a href="#安装依赖组件" class="headerlink" title="安装依赖组件"></a>安装依赖组件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ perl ld-linux.so.2 libstdc++.so.6</span><br></pre></td></tr></table></figure><h2 id="下载并安装Darwin-Streaming-Server"><a href="#下载并安装Darwin-Streaming-Server" class="headerlink" title="下载并安装Darwin Streaming Server"></a>下载并安装Darwin Streaming Server</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://dss.macosforge.org/downloads/DarwinStreamingSrvr5.5.5-Linux.tar.gz</span><br><span class="line">tar -zxvf DarwinStreamingSrvr5.5.5-Linux.tar.gz</span><br><span class="line">cd DarwinStreamingSrvrlinux-Linux</span><br><span class="line">./Install</span><br></pre></td></tr></table></figure><p>上述过程均在root用户权限下进行操作。安装的过程中会让你建立一个用户并且设置密码。</p><h2 id="访问访问Darwin-Streaming-Server-WEB界面"><a href="#访问访问Darwin-Streaming-Server-WEB界面" class="headerlink" title="访问访问Darwin Streaming Server WEB界面"></a>访问访问Darwin Streaming Server WEB界面</h2><p>打开浏览器，在网址栏输入<code>http://192.168.131.129:1220/</code>我这里的服务器IP地址为192.168.131.129，你需要替换成为你自己的服务器IP地址。<br><span id="inline-blue">初始设置</span><br><em>1.</em>Setup Assistant MP3 Broadcast Password：这里重复输入你的密码，然后点Next下一步；<br><em>2、</em>Setup Assistant Secure Administration：不用勾选，直接点Next下一步；<br><em>3、</em>Setup Assistant Media Folder:默认为/usr/local/movies，不建议修改，直接点Next下一步；<br><em>4、</em>Setup Assistant Streaming on Port 80：不建议改端口，点Finish完成设置向导。<br>！<a href="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/wy.png" target="_blank" rel="noopener"></a><br>页面如图所示，可以对其进行一系列的操作和修改。<br>启动服务<code>sudo /usr/local/sbin/DarwinStreamingServer</code>开启WEB服务器<code>sudo /usr/local/sbin/streamingadminserver.pl</code>设置开机启动的话可以编辑<code>/etc/rc.local</code>文件在exit 0之前加入如下内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/sbin/DarwinStreamingServer</span><br><span class="line">/usr/local/sbin/streamingadminserver.pl</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>这里使用的是VLC播放器▶，若没有安装的话可以通过下面命令来安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum.repos.d/ </span><br><span class="line">wget http://pkgrepo.linuxtech.net/el6/release/linuxtech.repo </span><br><span class="line">yum  -y install vlc</span><br></pre></td></tr></table></figure><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/vnc.png" alt=""><br>打开vlc播放器点击上角的“媒体”然后点击打开网络串流然后输入网络地址URL,要想播放/usr/local/movies下的视频。那么输入的地址就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rtsp://192.168.131.128/sample_h264_1mbit.mp4</span><br></pre></td></tr></table></figure><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/test.png" alt=""></p><p>这里呢显示了绿屏，视频倒是可以播放。但是却看不到动画那么怎么解决呢❓</p><p>操作流程为：工具-&gt;首选项-&gt;视频-&gt;显示-&gt;输出-&gt;OpenGL GLX视频输出。如下所示：</p><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"screenshot":"yes","video":{"url":"https://b-l.oss-cn-hongkong.aliyuncs.com/viedo/vlc.mp4","pic":"https://b-l.oss-cn-hongkong.aliyuncs.com/picture/513116.png"},"danmaku":{"api":"https://api.prprpr.me/dplayer/","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><p>如果想要播放其他的文件夹下的视频的话，在网页端修改Media Directory<br><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/shezhi.png" alt=""></p><p>下面我们来测试一下，换了文件夹视频能否正常播放呢❓经过测试依旧以可播放。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/bofang.png" alt=""></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/q.png" alt=""></p><p>测试呢是直接把movies目录下的视频移动到media文件夹下，成功测试成功。但是使用media目录下原有的1.MP4媒体文件却报了如下错误。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/error.png" alt=""></p><p>结果呢出了上图所示的信息，换了目录后播放失败了😂。按道理是可以播放的呀但是为什么会这样呢❓</p><p>我的第一反应就是莫非是因为权限的缘故导致无法播放，第二反应则是文件必须得串流才能播放。</p><h3 id="想法一"><a href="#想法一" class="headerlink" title="想法一"></a>想法一</h3><p>所以首先就分别查看两个文件夹下文件的权限<img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/qx.png">这里发现1.MP4文件的属主和属组均为root，而其他的文件的属主和属组分别是qtss和root。所以我就选择修改1.MP4的权限来试着尝试能否正常播放。结果还是同样的问题😒，所以选择使用修改权限的方法是行不通的。</p><h3 id="想法二"><a href="#想法二" class="headerlink" title="想法二"></a>想法二</h3><p>既然第一条路走不通那就选择走另外一条路好了🤣实在不行的话，用谷歌上肯定可以找到答案的。那么怎么串流呢主要步骤如下</p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/liu.png"><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/liu1.png"><p>点击下一个选择RSTP然后点击添加端口选择默认的8554，改成自己的也可。路径改为1.mp4.同时不选择本地显示以及激活转码。然后点击下一个这个页面不需要做操作，直接选择串流就🆗。</p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/liu2.png"><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/liu3.png"><p>到此就貌似好像大概或许应该可能就大功告成了，屁话少说测试一下就知道了。</p><p>测试机为装有vlc播放器的windows 7，视频较短的话可以设置循环播放。因为很可能会有这种情况的发生，等你输完URL地址它就播放结束了，还是会提示之前的那种❌错误情况。测试和之前方法一样在这我输入的地址为<code>rstp://192.168.131.129:8554/1.mp4</code></p><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"theme":"#FADFA3","loop":true,"screenshot":"yes","video":{"url":"https://b-l.oss-cn-hongkong.aliyuncs.com/viedo/test.mp4","pic":"https://b-l.oss-cn-hongkong.aliyuncs.com/picture/513116.png"},"danmaku":{"api":"https://api.prprpr.me/dplayer/","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><center><p id="div-border-left-red">(⓿_⓿)到此终于大功告成</p></center><h1 id="nginx-ffmpeg搭建流媒体服务器"><a href="#nginx-ffmpeg搭建流媒体服务器" class="headerlink" title="nginx+ffmpeg搭建流媒体服务器"></a>nginx+ffmpeg搭建流媒体服务器</h1><p>前面介绍了如何使用Darwin Streaming Server搭建流媒体服务器,下面来介绍使用nginx+ffmpeg搭建流媒体服务器。</p><h2 id="安装yasm"><a href="#安装yasm" class="headerlink" title="安装yasm"></a>安装yasm</h2><p id="div-border-left-yellow">Yasm是一个完全重写的NASM汇编。目前，它支持x86和AMD64指令集。     接受NASM和GNU汇编器（gas）语法，产出二进制， ELF32 ， ELF64 ， COFF ， Mach - O的（ 32和64 ） ， RDOFF2 ，的Win32和Win64对象的格式，并生成STABS 调试信息的来源，DWARF 2 ，CodeView 8格式。</p><p>下载yasm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz</span><br></pre></td></tr></table></figure><p>解压和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf yasm-1.3.0.tar.gz</span><br><span class="line">cd yasm-1.3.0</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="安装lame"><a href="#安装lame" class="headerlink" title="安装lame"></a>安装lame</h2><p id="div-border-top-green" >用于mp3编码。由于专利版权问题，ffmpeg默认不带mp3格式编码器，但是有mp3格式解码器。</p><p>下载lame</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://sourceforge.net/projects/lame/files/lame/3.99/lame-3.99.5.tar.gz/download</span><br><span class="line">#下载下来的文件名是down重命名为实际的名字</span><br></pre></td></tr></table></figure><p>解压和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mv download lame-3.99.5.tar.gz</span><br><span class="line">tar -zxvf lame-3.99.5.tar.gz</span><br><span class="line">cd lame-3.99.5</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">#编译安装后并没有加入系统库中，添加如下软连接加入系统库</span><br><span class="line">ln -s /usr/local/lib/libmp3lame.so.0.0.0 /usr/lib64/libmp3lame.so.0</span><br></pre></td></tr></table></figure><h2 id="安装ffmpeg"><a href="#安装ffmpeg" class="headerlink" title="安装ffmpeg"></a>安装ffmpeg</h2><p>下载ffmpeg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.ffmpeg.org/releases/ffmpeg-3.1.tar.gz</span><br></pre></td></tr></table></figure><p>解压和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf ffmpeg-3.1.tar.gz</span><br><span class="line">cd ffmpeg-3.1</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装完成后可以通过<code>ffmpeg -version</code>查看安装的版本，可以通过<code>ffmpeg -codecs |grep 媒体格式</code>来查看对媒体格式的支持情况。</p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ffmpeg.png"><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc pcre-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><p>下载nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget  http://nginx.org/download/nginx-1.8.1.tar.gz</span><br></pre></td></tr></table></figure><p>解压和安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf nginx-1.8.1.tar.gz</span><br><span class="line">cd nginx-1.8.1</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>启动nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p>可以在浏览器中输入<code>http://localhost</code>来进行测试，看到<code>welcome to nginx</code>则说明安装成功。默认端口为80端口可以通过<code>vim /usr/local/nginx/conf/nginx.conf</code>命令来对nginx的配置文件进行修改。修改完成后重启即可生效</p><h3 id="安装rtmp模块"><a href="#安装rtmp模块" class="headerlink" title="安装rtmp模块"></a>安装<strong>rtmp模块</strong></h3><p>官方github地址：<code>https://github.com/arut/nginx-rtmp-module</code>,因此需要安装git。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br><span class="line">git clone https://github.com/arut/nginx-rtmp-module.git</span><br></pre></td></tr></table></figure><p> 重新安装nginx并拓展nginx-rtmp-module模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx  --add-module=../nginx-rtmp-module  --with-http_ssl_module</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="启动-nginx-的命令："><a href="#启动-nginx-的命令：" class="headerlink" title="启动 nginx 的命令："></a>启动 nginx 的命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /usr/local/nginx/sbin/nginx -s stop</span><br><span class="line">$ sudo /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><h2 id="配置推流地址以及播放页面"><a href="#配置推流地址以及播放页面" class="headerlink" title="配置推流地址以及播放页面"></a><strong>配置推流地址以及播放页面</strong></h2><p>使用<code>vi /usr/local/nginx/conf/nginx.conf</code>命令来编辑nginx配置文件，主要修改的地方如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">##切换自动推送(多 worker 直播流)模式。默认为 off</span><br><span class="line">rtmp_auto_push on;</span><br><span class="line">##当 worker 被干掉时设置自动推送连接超时时间。默认为 100 毫秒</span><br><span class="line">rtmp_auto_push_reconnect 1s;</span><br><span class="line">rtmp &#123;</span><br><span class="line">        server&#123;</span><br><span class="line">                listen 1935;</span><br><span class="line">                #直播流配置</span><br><span class="line">                application live &#123;</span><br><span class="line">                live on;</span><br><span class="line">                record off;</span><br><span class="line">                &#125;</span><br><span class="line">                application hls &#123;</span><br><span class="line">                live on;</span><br><span class="line">                hls on;</span><br><span class="line">                hls_path /tmp/hls;</span><br><span class="line">                hls_fragment 1s;</span><br><span class="line">                &#125;</span><br><span class="line">                # 视频点播</span><br><span class="line">                application vod &#123;</span><br><span class="line">                play /tmp/viedo;</span><br><span class="line">                &#125;</span><br><span class="line">                application vod_http&#123;</span><br><span class="line">                play http://youserverIp/vod;</span><br><span class="line">                &#125;</span><br><span class="line">        #rtmp日志设置</span><br><span class="line">        access_log logs/rtmp_access.log ;</span><br><span class="line">        &#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">    #                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">    #                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  6-07.club;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /wang/html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">         #rtmp状态页面</span><br><span class="line">         location /stat &#123;</span><br><span class="line">         rtmp_stat all;</span><br><span class="line">         rtmp_stat_stylesheet stat.xsl;</span><br><span class="line">         &#125;</span><br><span class="line">         location /stat.xsl &#123;</span><br><span class="line">         root /opt/software/nginx-rtmp-module/;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         location /hls &#123;</span><br><span class="line">         types &#123;</span><br><span class="line">         application/vnd.apple.mpegurl m3u8;</span><br><span class="line">  video/mp2t ts;</span><br><span class="line">         &#125;</span><br><span class="line">         root /tmp;</span><br><span class="line">         add_header Cache-Control no-cache;</span><br><span class="line">&#125;</span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">include vhosts/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面来解释一下里面各行代码的含义。对于视频直播服务，如果需要支持多路流输入的话，很简单，在 nginx 配置文件里多配几个 Application 就只可以了，像下面这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">application live &#123;</span><br><span class="line">live on;</span><br><span class="line">record off;</span><br><span class="line">&#125;</span><br><span class="line">application live2 &#123;</span><br><span class="line">live on;</span><br><span class="line">record off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就可以通过下面的地址来推送直播流，其它观众端也可以通过下面的地址来访问直播流：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rtmp://youserverIp/live/test</span><br><span class="line">rtmp://youserverIp/live2/test</span><br></pre></td></tr></table></figure><p>后面紧跟的 test 关键字，可以随便更换，只要你的推送流和访问流的地址一样就可以了。</p><p><a href="https://github.com/arut/nginx-rtmp-module/wiki/Directives#video-on-demand" target="_blank" rel="noopener">rtmp 模块也可以直接支持 VOD 这种视频点播服务</a> ，只需要在配置文件里添加如下内容即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># video on demand</span><br><span class="line">application vod &#123;</span><br><span class="line">    play /tmp/viedo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">application vod_http &#123;</span><br><span class="line">    play http://youserverIp/vod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后把一个 mp4 或是 flv 文件移动到 /tmp/viedo目录下，对于  /tmp/viedo/hello/test.mp4 这个视频文件，就可以通过下面的网址来访问了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmtp://youserverip/vod//hello/test.mp4</span><br></pre></td></tr></table></figure><p>hls直播流配置</p><p>如果需要使用 HLS 来视频直播，可以直接像配置文件那样，写上下面这一段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">application hls &#123;</span><br><span class="line">        live on;</span><br><span class="line">        hls on;</span><br><span class="line">        hls_path /tmp/hls;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在下面的http中加入如下信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#rtmp状态页面</span><br><span class="line">         location /stat &#123;</span><br><span class="line">         rtmp_stat all;</span><br><span class="line">         rtmp_stat_stylesheet stat.xsl;</span><br><span class="line">         &#125;</span><br><span class="line">         location /stat.xsl &#123;</span><br><span class="line">         root /opt/software/nginx-rtmp-module/;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         location /hls &#123;</span><br><span class="line">         types &#123;</span><br><span class="line">         application/vnd.apple.mpegurl m3u8;</span><br><span class="line">  video/mp2t ts;</span><br><span class="line">         &#125;</span><br><span class="line">         root /tmp;</span><br><span class="line">         add_header Cache-Control no-cache;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置好后若推流地址为<code>rtmp://193.112.247.63/hls/hello</code>则播放地址如下</p><ol><li><p>使用rtmp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rtmp://193.112.247.63/hls/hello</span><br></pre></td></tr></table></figure></li><li><p>使用hls</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://193.112.247.63/hls/hello.m3u8</span><br></pre></td></tr></table></figure><p>此链接是在ios以及mac系统的浏览器内可以直接正常播放直播流的。</p></li></ol><h2 id="使用ffmpeg推流直播"><a href="#使用ffmpeg推流直播" class="headerlink" title="使用ffmpeg推流直播"></a>使用ffmpeg推流直播</h2><ol><li><p>使用ffmpeg推流到nginx<br>使用rtmp协议推一个本地的mp4到上面配置的myapp上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -re -i /tmp/live/test.mp4 -vcodec copy -acodec copy -f flv &quot;rtmp://127.0.0.1:1935/live/test1&quot;</span><br></pre></td></tr></table></figure><p>流播放地址为：<code>rtmp://193.112.247.63:1935/live/test1</code>或者<code>rtmp://6-07.club:1935/live/test1</code></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/test1.png" alt=""></p><p>使用hls协议推一个本地的mp4到hls上（apple公司开发的，可在iPad、safari的中进行播放）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -re -i /tmp/live/test.mp4 -vcodec copy -acodec copy -f flv &quot;rtmp://127.0.0.1:1935/hls/test2&quot;</span><br></pre></td></tr></table></figure><p>流播放地址为:<code>http://193.112.247.63/hls/test2.m3u8</code>或者<code>http://6-07.club/hls/test2.m3u8</code></p><p>上面也讲过hls协议推流同样可以使用rmtp协议来进行拉流。地址为<code>rtmp://193.112.247.63/hls/test2</code>或者<code>rtmp://6-07.club/hls/test2</code></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/test2.png" alt=""></p><h2 id="使用OBS推流"><a href="#使用OBS推流" class="headerlink" title="使用OBS推流"></a>使用OBS推流</h2><p><a href="https://obsproject.com/" target="_blank" rel="noopener">🚀</a>这个是传送链接，主要有windows、Linux、macos三种版本，请根据自己的需求下载。</p><p>打开后点击左上角的文件–&gt;设置–&gt;串流。服务选择自定义，服务器选择输入自己的流媒体服务器地址。串流密钥可以随遍填。但是自己要记住，要不然等下播放时会出错。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/sbo.png" alt=""></p><p>播放地址为<code>rtmp://193.112.247.63/hls/obs</code></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/obs.png" alt=""></p><p>这里采用的是推送本地的媒体源，当然你自己也可以选择其他的。</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/obs1.png" alt=""></p><p>使用obs比ffmpeg有诸多的好处，懂得自然都懂这里就不在详细的介绍OBS的强大之处了。</p><h2 id="视频点播服务"><a href="#视频点播服务" class="headerlink" title="视频点播服务"></a>视频点播服务</h2><p>具体怎么实现上面已经介绍过，视频点播服务可以使观众根据自己的爱好来观看视频。点播地址<code>rtmp://193.112.247.63/vod//hello/test.mp4</code></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/dian.png" alt=""></p><p>这里可以选择快进进行视频的观看，并且可以显示视频的长短。</p><center>未完待续</center><h2 id="网页点播，网页直播。"><a href="#网页点播，网页直播。" class="headerlink" title="网页点播，网页直播。"></a>网页点播，网页直播。</h2></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由器OSPF动态路由配置</title>
      <link href="/ospf.html"/>
      <url>/ospf.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>假设校园网通过一台三层交换机连到校园网出口路由器上，路由器再和校园外的另一台路由器连接。现要做适当配置，实现校园网内部主机与校园网外部主机之间的相互通信。为了简化网管的管理维护工作，学校决定采用OSPF协议实现互通。</p></blockquote><a id="more"></a><h1 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a><strong>技术原理</strong></h1><p>🎈OSPF开放式最短路径优先协议，是目前网路中应用最广泛的路由协议之一。属于内部网管路由协议，能够适应各种规模的网络环境，是典型的链路状态协议。OSPF路由协议通过向全网扩散本设备的链路状态信息，使网络中每台设备最终同步一个具有全网链路状态的数据库，然后路由器采用SPF算法，以自己为根，计算到达其他网络的最短路径，最终形成全网路由信息。</p><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a><strong>实验步骤</strong></h1><p>🎈新建packet tracer拓扑图</p><p>（1）在本实验中的三层交换机上划分VLAN10和VLAN20，其中VLAN10用于连接校园网主机，VLAN20用于连接R1。</p><p>（2）路由器之间通过V35电缆通过串口连接，DCE端连接在R1上，配置其时钟频率64000。</p><p>（3）主机和交换机通过直连线，主机与路由器通过交叉线连接。</p><p>（4）在S3560上配置OSPF路由协议。</p><p>（5）在路由器R1、R2上配置OSPF路由协议。</p><p>（6）将PC1、PC2主机默认网关设置为与直连网路设备接口IP地址。</p><p>（7）验证PC1、PC2主机之间可以互相通信；</p><h1 id="实验设备"><a href="#实验设备" class="headerlink" title="实验设备"></a>实验设备</h1><p>PC 2台；Switch_3560 1台；Router-PT 2台；直连线；交叉线；DCE串口线</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/ospf.png" alt=""></p><p><code>PC1</code> </p><p>​       IP:                 192.168.1.2</p><p>​       Submask:        255.255.255.0</p><p>​       Gateway:        192.168.1.1</p><p><code>PC2</code></p><p>​       IP:                 192.168.2.2</p><p>​       Submask:        255.255.255.0</p><p>​       Gateway:        192.168.2.1 </p><p>🌈配置<code>S3560</code></p><p>Switch&gt;en</p><p>Switch#conf t</p><p>Switch(config)#vlan 10</p><p>Switch(config-vlan)#exit</p><p>Switch(config)#vlan 20</p><p>Switch(config-vlan)#exit</p><p>Switch(config)#int fa 0/1</p><p>Switch(config-if)#sw acc vlan 10</p><p>Switch(config-if)#exit</p><p>Switch(config)#int fa 0/2</p><p>Switch(config-if)#sw acc vlan 20</p><p>Switch(config-if)#exit</p><p>Switch(config)#int vlan 10</p><p>Switch(config-if)#ip add 192.168.1.1 255.255.255.0</p><p>Switch(config-if)#no shutdown</p><p>Switch(config-if)#exit</p><p>Switch(config)#int fa 0/2</p><p>Switch(config-if)#ip add 192.168.3.1 255.255.255.0</p><p>Switch(config-if)#no shutdown </p><p>Switch(config-if)#exit</p><p>Switch(config)#router ospf 1</p><p>Switch(config-router)#network 192.168.1.0 0.0.0.255 area 0</p><p>Switch(config-router)#network 192.168.3.0 0.0.0.255 area 0 </p><p>Switch(config-router)#end</p><p>🌈<code>R1</code>的配置</p><p>Router&gt;en</p><p>Router#conf t</p><p>Router(config)#int fa 0/0</p><p>Router(config-if)#ip add 192.168.3.2 255.255.255.0</p><p>Router(config-if)#no shutdown</p><p>Router(config-if)#exit</p><p>Router(config)#int serial 2/0</p><p>Router(config-if)#ip add 192.168.4.1 255.255.255.0</p><p>Router(config-if)#no shutdown</p><p>Router(config-if)#clock  rate 64000</p><p>Router(config-if)#exit</p><p>Router(config)#router ospf 1</p><p>Router(config-router)#network 192.168.3.0 0.0.0.255 area 0</p><p>Router(config-router)#network 192.168.4.0 0.0.0.255 area 0</p><p>Router(config-router)#end</p><p>🌈<code>R2</code>的配置</p><p>Router&gt;en</p><p>Router#conf t</p><p>Router(config)#int fa 0/0</p><p>Router(config-if)#ip add 192.168.2.2 255.255.255.0</p><p>Router(config-if)#no shutdown</p><p>Router(config-if)#exit</p><p>Router(config)#int serial 2/0</p><p>Router(config-if)#ip add 192.168.4.2 255.255.255.0</p><p>Router(config-if)#no shutdown</p><p>Router(config-if)#exit</p><p>Router(config)#router ospf 1</p><p>Router(config-router)#network 192.168.4.0 0.0.0.255 area 0</p><p>Router(config-router)#network 192.168.2.0 0.0.0.255 area 0</p><p>Router(config-router)#end</p><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>PC1、PC2主机之间可以互相通信</p><p><code>PC1</code> ping <code>PC2</code></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/1.png" alt=""></p><p><code>PC2</code> ping <code>PC1</code></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/2.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OSPF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决VMware虚拟机桥接无法上网问题</title>
      <link href="/%F0%9F%90%94.html"/>
      <url>/%F0%9F%90%94.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>在使用VMware虚拟机时，有些情况下我们使用桥接的方式来进行上网。但是大多数情况下选择桥接的方式在虚拟机中是无法正常上网的。自己之前也曾遇到过这样的问题。。。<a id="more"></a></p><ol><li><p><strong><em>查看本地网络是否安装VMware Bridge Protocol</em></strong></p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/wlan.png" alt=""></p><p>就像上图所示一样，我这里查看的是WLAN的属性。如果没有安装的话，选择安装即可。</p></li><li><p>查看本地IP地址</p><p><code>win +r</code>输入<code>cmd</code>打开命令行，输入<code>ipconfig /all</code>查看物理机局域网内的信息</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/china.png" alt=""></p><p>可以看到 </p><p>​    网卡: Intel(R) Dual Band Wireless-AC 3165</p><p>​    IPv4 地址 . . . . . . . . . . . . : 10.10.2.39(首选)<br>   子网掩码  . . . . . . . . . . . . : 255.255.252.0</p><p>​    默认网关. . . . . . . . . . . . . : 10.10.0.1<br>   DNS 服务器  . . . . . . . . . . . : 202.96.209.5</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/bkl.jpg" alt=""></p></li><li><p>使用虚拟机网络编辑器</p><p><code>需要使用管理员权限才可以进行操作</code>，还原默认设置然后设置桥接为如下图所示</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/xn.png" alt=""></p><p>修改为如上图所示桥接到物理机的无线网卡上。然后设置虚拟机的设置修改为如下所示</p><p><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/photos/bridge.png" alt=""></p></li><li><p>虚拟机开机测试</p><p>开机后打开命令行查看一下是否成功，查看IP地址发现虚拟机和物理机在同一个网段下。</p><p>虚拟机ping物理机,物理机ping虚拟机发现均可以ping通。同时也可以打开网页正常上网👾</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些无聊的尝试</title>
      <link href="/%F0%9F%99%83.html"/>
      <url>/%F0%9F%99%83.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>先放几个自己成功安装的截图,教程后面慢慢写。<a id="more"></a></p><h1 id="VMware虚拟机安装windows-1"><a href="#VMware虚拟机安装windows-1" class="headerlink" title="VMware虚拟机安装windows 1"></a>VMware虚拟机安装windows 1</h1><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/boring/win%201.png" ><h1 id="VMware虚拟机安装windows-3-1"><a href="#VMware虚拟机安装windows-3-1" class="headerlink" title="VMware虚拟机安装windows 3.1"></a>VMware虚拟机安装windows 3.1</h1><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/boring/win%203.1.png"><h1 id="VMware虚拟机安装windows-3-2"><a href="#VMware虚拟机安装windows-3-2" class="headerlink" title="VMware虚拟机安装windows 3.2"></a>VMware虚拟机安装windows 3.2</h1><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/boring/win%203.2.png"><h1 id="VMware虚拟机安装windows-95"><a href="#VMware虚拟机安装windows-95" class="headerlink" title="VMware虚拟机安装windows 95"></a>VMware虚拟机安装windows 95</h1><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/boring/win%2095.png"><h1 id="VMware虚拟机安装windows-98"><a href="#VMware虚拟机安装windows-98" class="headerlink" title="VMware虚拟机安装windows 98"></a>VMware虚拟机安装windows 98</h1><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/boring/win%2098.png"><h1 id="VMware虚拟机安装windows-me"><a href="#VMware虚拟机安装windows-me" class="headerlink" title="VMware虚拟机安装windows me"></a>VMware虚拟机安装windows me</h1><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/boring/win%20me.png"><h1 id="VMware虚拟机安装windows-2000"><a href="#VMware虚拟机安装windows-2000" class="headerlink" title="VMware虚拟机安装windows 2000"></a>VMware虚拟机安装windows 2000</h1><img src="https://b-l.oss-cn-hongkong.aliyuncs.com/boring/win%202000.png">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>动态路由实验RIP的配置</title>
      <link href="/%E2%98%BA.html"/>
      <url>/%E2%98%BA.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>假设校园网通过一台三层交换机连到校园网出口路由器上，路由器再和校园外的另一台路由器连接。现要做适当配置，实现校园网内部主机与校园网外部主机之间的相互通信。为了简化网管的管理维护工作，学校决定采用RIPV2协议实现互通。</p></blockquote><a id="more"></a><h1 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a><strong>技术原理</strong></h1><ol><li><strong>RIP(Routing Information Protocols,**</strong>路由信息协议)<strong>是应用较早、使用较普遍的IGP内部网管协议，使用于小型同类网络，是距离矢量协议；</strong></li><li>RIP<strong>协议跳数作为衡量路径开销的，</strong>RIP<strong>协议里规定最大跳数为15；</strong></li><li><strong>*RIP</strong>协议有两个版本：<strong>RIPv1</strong>和<strong>RIPv2</strong>，<strong>RIPv1</strong>属于有类路由协议，不支持<strong>VLSM</strong>，以广播形式进行路由信息的更新，更新周期为30秒；<strong>RIPv2</strong>属于无类路由协议，支持<strong>VLSM</strong>，以组播形式进行路由更细。</li></ol><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a><strong>实验步骤</strong></h1><p> 建立建立packet tracer拓扑图</p><p>（1）在本实验中的三层交换机上划分VLAN10和VLAN20，其中VLAN10用于连接校园网主机，VLAN20用于连接R1。</p><p>（2）路由器之间通过V.35电缆通过串口连接，DCE端连接在R1上，配置其时钟频率64000。</p><p>（3）主机和交换机通过直连线，主机与路由器通过交叉线连接。</p><p>（4）在S3560上配置RIPV2路由协议。</p><p>（5）在路由器R1、R2上配置RIPV2路由协议。</p><p>（6）将PC1、PC2主机默认网关设置为与直连网路设备接口IP地址。</p><p>（7）验证PC1、PC2主机之间可以互相同信；</p><h1 id="实验设备"><a href="#实验设备" class="headerlink" title="实验设备"></a><strong>实验设备</strong></h1><p>PC 2台；Switch_3560 1台；Router-PT 2台；直连线；交叉线；DCE 串口线</p><p><img src="/img/route/tuopu.png" alt=""></p><p><code>PC1</code></p><p>​    IP:                192.168.1.2    </p><p>​    Submask:    255.255.255.0</p><p>​    Gateway:    192.168.1.1</p><p><code>PC2</code></p><p>​    IP:                192.168.2.2</p><p>​    Submask:    255.255.255.0</p><p>​    Gateway:    192.168.2.1</p><p>配置三层交换机<code>S3560</code></p><blockquote><p>Switch&gt;en<br>Switch#conf t<br>Switch(config)#vlan 10<br>Switch(config-vlan)#exit<br>Switch(config)#vlan 20<br>Switch(config-vlan)#exit<br>Switch(config)#int fa 0/1<br>Switch(config-if)#sw acc vlan 10<br>Switch(config-if)#exit<br>Switch(config)#int fa 0/2<br>Switch(config-if)#sw acc vlan 20<br>Switch(config-if)#exit<br>Switch(config)#int vlan 10</p><p>Switch(config-if)#ip add 192.168.1.1 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#int vlan 20</p><p>Switch(config-if)#ip add 192.168.3.1 255.255.255.0<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit<br>Switch(config)#ip routing<br>Switch(config)#router rip<br>Switch(config-router)#network 192.168.1.0<br>Switch(config-router)#network 192.168.3.0<br>Switch(config-router)#version 2</p></blockquote><p>配置路由器<code>R1</code></p><blockquote><p>Router&gt;en<br>Router#conf t<br>Router(config)#int fa 0/0<br>Router(config-if)#ip add 192.168.3.2 255.255.255.0<br>Router(config-if)#no shutdown</p><p>Router(config-if)#exit<br>Router(config)#int serial 2/0<br>Router(config-if)#ip add 192.168.4.1 255.255.255.0<br>Router(config-if)#no shutdown<br>Router(config-if)#clock rate 64000</p><p>Router(config)#router rip<br>Router(config-router)#network 192.168.3.0<br>Router(config-router)#network 192.168.4.0<br>Router(config-router)#version 2</p></blockquote><p>配置路由器<code>R2</code></p><blockquote><p>Router&gt;en<br>Router#conf t<br>Router(config)#int serial 2/0<br>Router(config-if)#ip add 192.168.4.2 255.255.255.0<br>Router(config-if)#no shutdown<br>Router(config-if)#exit<br>Router(config)#int fa 0/0<br>Router(config-if)#ip add 192.168.2.1 255.255.255.0<br>Router(config-if)#no shutdown</p><p>Router(config-if)#exit<br>Router(config)#router rip<br>Router(config-router)#network 192.168.2.0<br>Router(config-router)#network 192.168.4.0<br>Router(config-router)#version 2</p></blockquote><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>验证之前先查看路由表是否正确,正确的如下所示。</p><p><img src="/img/route/s3560.png" alt=""></p><p><img src="/img/route/R0.png" alt=""></p><p><img src="/img/route/R1.png" alt=""></p><p><code>PC1</code>  ping  <code>PC2</code></p><p><img src="/img/route/%F0%9F%98%82.png" alt=""></p><p><strong><code>注意</code></strong>:开启动态路由应选择version2版本！</p>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由 </tag>
            
            <tag> RIP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>👹</title>
      <link href="/%F0%9F%91%B9.html"/>
      <url>/%F0%9F%91%B9.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>一段比较神奇的Code，世界编程大赛一等奖作品（👾1997年的……比自己年龄还要大不得不说tql Orz）</p><div id="dplayer2" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer2"),"theme":"#FADFA3","loop":true,"screenshot":"yes","video":{"url":"https://b-l.oss-cn-hongkong.aliyuncs.com/viedo/code.mp4","pic":"https://b-l.oss-cn-hongkong.aliyuncs.com/picture/513116.png"},"danmaku":{"api":"https://api.prprpr.me/dplayer/","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><a id="more"></a><p>把这段代码复制然后建立一个名叫1.txt的文本文件然后把代码复制进去打开cmd命令行输入<code>debug&lt;C:\1.txt</code>这里<code>C:\1.txt</code>是我文件存放的位置。使用的xp系统测试的，如果使用win10的话需要下载一个DosBox。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line">e100 33 f6 bf 0 20 b5 10 f3 a5 8c c8 5 0 2 50 68 13 1 cb e 1f be a1 1 bf 0 1 </span><br><span class="line">e11b 6 57 b8 11 1 bb 21 13 89 7 4b 4b 48 79 f9 ad 86 e0 8b c8 bd ff ff e8 20 </span><br><span class="line">e134 0 3d 0 1 74 1a 7f 3 aa eb f3 2d ff 0 50 e8 f 0 5a f7 d8 8b d8 26 8a 1 aa </span><br><span class="line">e14f 4a 75 f9 eb de cb 57 bb 21 13 8b c1 40 f7 27 f7 f5 8b fb ba 11 1 4f 4f 4a </span><br><span class="line">e168 39 5 7f f9 52 8b c5 f7 25 f7 37 2b c8 95 f7 65 2 f7 37 95 2b e8 fe e fe </span><br><span class="line">e181 10 79 6 c6 6 fe 10 7 46 d0 14 d1 d1 d1 e5 79 ec 5a b8 11 1 ff 7 4b 4b 48 </span><br><span class="line">e19b 3b d0 75 f7 5f c3 83 f7 83 a6 5d 59 82 cd b2 8 42 46 9 57 a9 c5 ca aa 1b </span><br><span class="line">e1b4 4f 52 b4 92 3f ab 6e 9e a8 1d c6 3 fc e 6a e7 ae bb 5f 7b 10 b8 b4 f7 8 </span><br><span class="line">e1cd e2 bf 36 4e 39 9d 79 29 3f a f9 36 52 16 fb 5 e8 e5 a6 c2 e9 b0 43 d3 a3 </span><br><span class="line">e1e6 cf d3 fd fd cb d1 4c 5e e0 63 58 86 bb 3e 9 c1 20 bc cc 91 a3 47 81 70 b3 </span><br><span class="line">e1ff d6 1a 9e c2 c9 12 e7 4e ad f4 5f e3 30 e9 9 39 d7 e8 f9 f4 d2 44 e8 d7 22 </span><br><span class="line">e218 be e2 ce 88 25 cf 30 4a a8 29 ae 3f 47 c6 2d 85 e9 73 54 13 b e6 e0 34 65 </span><br><span class="line">e231 e2 50 8a 89 18 5f ce 70 99 3 5f 42 bf eb 7 ae d0 ca 5 22 8d 22 a5 b7 f0 </span><br><span class="line">e24a 90 81 bc 7a bc dc 5 db c0 6a 2 e5 57 38 be 60 cb ac ba a5 3b 9d f1 77 38 </span><br><span class="line">e263 a6 84 d1 3c af 49 d8 6a 45 a2 76 60 21 12 c0 c2 44 f2 5e bb e5 37 a9 2b </span><br><span class="line">e27b ec 4a 8c 4c f2 f7 a9 58 71 2b ba 6d d6 6a e5 60 46 e0 da e5 b9 90 e5 a3 </span><br><span class="line">e293 f7 7f 31 60 58 f0 c4 88 10 4e 3c a3 ee 4e 11 55 8f a 92 eb db ad 7a 9c f </span><br><span class="line">e2ac db 5a 28 96 da 87 ae 91 91 2d e3 5e ea df 6 95 71 67 71 40 ce d1 2e 31 6d </span><br><span class="line">e2c5 c1 9c d8 6a 76 9b 4a e8 36 44 d6 76 d 30 5 ff d4 1b ac 1f 32 65 31 bf 55 </span><br><span class="line">e2de 26 b a4 55 e1 5d 5e 16 ed 97 48 6c 77 fb 81 86 e f9 18 bd d4 f4 8b de 1d </span><br><span class="line">e2f7 ba d 47 75 3 89 4b 3e dc 27 86 1c d0 17 89 48 d1 a6 8d d4 2b 54 4e 8f b0 </span><br><span class="line">e310 2 e1 6b 1a 75 78 ea 21 91 13 c0 cf 78 a0 ab f3 35 c6 b4 c8 90 8d d7 45 e7 </span><br><span class="line">e329 c 5b a4 ba 52 10 64 f5 4a 50 b7 ec 46 22 15 23 84 30 81 5c df 61 5a 8f 67 </span><br><span class="line">e342 c4 63 57 6d f7 26 92 a3 1f e5 3 a5 0 54 41 8 48 7c 26 90 33 82 9c 91 b0 </span><br><span class="line">e35b ab 78 5d df 99 e0 b9 fc 5 36 ac d9 49 91 ab 20 a2 63 48 89 ce 5c 60 64 f0 </span><br><span class="line">e374 63 d9 a8 38 3b d3 e6 4c 8c 23 34 4e 20 51 93 5e 6d b4 7a 22 9b 4c f2 d3 </span><br><span class="line">e38c c4 f8 3 6f 47 40 f4 f8 45 9b 83 f3 83 6 31 d0 0 17 82 83 dc 67 f9 62 77 </span><br><span class="line">e3a5 90 3b d9 ec f3 55 96 b8 d9 db 79 55 f1 e5 8c 5e f2 e5 2e b0 b 6e e2 81 25 </span><br><span class="line">e3be 93 8e b5 dd 5b 46 f9 af ed 6 12 cf c9 1d f0 f7 3b 16 2d c6 58 73 8d e9 5f </span><br><span class="line">e3d7 fd 5a b6 a1 94 4d 1a 8 ff eb b7 6 80 c7 86 83 b6 b9 fd 1c e0 c c3 2e a0 </span><br><span class="line">e3f0 2f b 3e 3 6b 29 e1 27 85 1c ea 6d df b3 a3 ed 65 4a 9a 59 3b 54 e 4b ae </span><br><span class="line">e409 9e 27 f0 4d 3b c 4c 46 b7 e5 57 1b 1f 1f bb 80 86 f5 b7 ef 73 52 bf 2c c7 </span><br><span class="line">e422 ed a b7 81 2 f3 90 3e ee cc 6c eb f 38 1 6c 68 b1 d 45 78 b2 f f6 83 b0 </span><br><span class="line">e43c c4 33 df b1 d1 91 98 1e 81 a5 e2 59 9f f4 8c b6 72 8 a7 8c f6 e a3 b2 1f </span><br><span class="line">e455 d9 d3 23 f0 7c 5e 5f 68 61 8b 45 da 1d 91 ec 8d 4e ea 1a 38 85 94 aa ac </span><br><span class="line">e46d f2 4 f6 c4 e5 92 8e 9a 4e 83 e1 73 e8 cf 2a 5c 2b 7e f1 30 2 8a e6 28 1a </span><br><span class="line">e486 3b ce bc 96 aa 7f eb 87 cd 8b 96 2d 9 59 7a a0 1a 43 62 9a 9e 4f ff 8e d9 </span><br><span class="line">e49f ce d6 a4 70 79 cd 65 fa 2e 92 14 29 f7 6c 74 4b 49 60 80 bb ff 41 bb 2d </span><br><span class="line">e4b7 60 33 3f 98 77 9a 1 ee a6 a3 da bc ba e9 f3 72 f4 7c c3 59 2 a6 44 a4 c8 </span><br><span class="line">e4d0 c8 54 93 ce bd 69 bb b9 43 21 2c c4 ea 4a 5c 3f 75 60 f2 b4 91 ca 9 82 e3 </span><br><span class="line">e4e9 a e9 a6 20 b9 76 50 ed 47 e9 fe 6d 41 34 13 2f 28 2f 4e f4 da e 3c 78 6c </span><br><span class="line">e502 b1 79 87 45 98 a4 d4 c3 b3 29 c2 4a 8b ed a6 54 e2 1b 31 62 60 ff 2c 1d </span><br><span class="line">e51a 21 0 15 b2 4e 5c c 2 d 83 fa a2 f3 8a 5 12 72 4a c7 44 7c 91 d4 be b a f2 </span><br><span class="line">e535 70 52 fb b4 a2 df 89 de ff c4 96 73 c9 c ed d3 c9 8e 5c dc 8e d1 3b de 8c </span><br><span class="line">e54e 53 a2 8b f9 e9 91 dd d6 df 6e 74 d1 dd 34 60 8f 9e 32 7f 3b ec 79 a3 83 </span><br><span class="line">e566 45 78 b4 2f 1c 50 7b 7a 97 b0 9d 2d c dd 8a 26 cd 7d 8c 4c 5a 8a 4c f9 a4 </span><br><span class="line">e57f 11 f9 2c 6c 92 e9 b5 cb 56 89 8c be f6 64 fa 25 43 fa 6f e2 c8 3a 18 a8 </span><br><span class="line">e597 f0 e9 f4 c2 86 e6 2b 44 67 4a b9 34 9 ed 5f 33 42 62 d4 8a 1e 5b 31 67 cd </span><br><span class="line">e5b0 3d 71 6d 83 fd 36 20 69 ea 1 c3 e6 e6 de 99 aa 7 11 5b 59 8a 1f 43 83 52 </span><br><span class="line">e5c9 ea 5d 8c 6a 69 c7 3 eb 4e 3b 88 a5 5f b1 6e 27 5f 3 5c 28 c 9b 6c c3 f8 </span><br><span class="line">e5e2 e5 b9 d6 11 d6 8b fa 5c 8 c7 1 eb 45 db f3 6c 9f 16 46 61 51 ed df f bb </span><br><span class="line">e5fb c0 c4 1e 64 68 98 4 79 30 94 72 df d4 cd 1f 7f 72 c6 82 2e 79 47 4e 8c 4b </span><br><span class="line">e614 a2 c7 e2 36 df 76 fd a4 b6 4e db 96 40 3b 8b b5 d4 85 64 c6 0 2c ad 9d 27 </span><br><span class="line">e62d 14 99 82 4b bc 9 fa 94 b5 db 7c 98 eb b 13 a7 b0 79 1d 7e c5 45 aa 20 49 </span><br><span class="line">e646 be ff 9d 64 0 5d c ec 6 5 ad f2 38 6b ed 7a d6 b2 c7 2e 6a a6 12 4b ff 55 </span><br><span class="line">e660 20 3b a 77 f b9 0 9d 57 4a ad ce a4 d3 ff 1 4f fb 53 54 88 f 1 ed 4b 56 </span><br><span class="line">e67a 15 c8 dc 28 bf f2 72 d4 10 1f 99 42 69 9e 78 e2 47 82 93 31 d0 2d be 9f </span><br><span class="line">e692 93 93 9a 1b 80 c0 10 c 53 78 a0 26 2a 96 4f 74 4b 16 c7 9c 8d ad ac fb 16 </span><br><span class="line">e6ab 15 c6 fd c9 a4 14 48 62 47 20 c9 41 ed 61 f8 9b f8 ff ba 39 50 65 87 ee </span><br><span class="line">e6c3 bd ce 95 c0 fb a5 7e d8 cd 27 fd 2c 74 3 c1 1b 89 b9 51 d5 e3 da ef 9e 6 </span><br><span class="line">e6dc f0 aa a9 a7 fb 87 4c 5d cd ff 65 36 8c 73 6f 9 c6 78 9a b6 77 db df 81 68 </span><br><span class="line">e6f5 3b b8 ae 5d e1 af d4 e6 66 8c d6 a4 83 9f 37 3c 1 dc a2 a6 57 c2 20 1b 90 </span><br><span class="line">e70e 75 df cd a5 62 a5 36 79 fb 35 8a 9b b0 a0 a5 c3 37 6f 80 72 bc 52 30 8d </span><br><span class="line">e726 9f 7a 64 d3 7 41 45 d8 68 97 f2 aa 1c a1 6c 7c 9d 32 7d ad 15 b1 53 e3 33 </span><br><span class="line">e73f 8a ed e9 49 d4 cf dc 96 22 37 36 11 9d 7f f0 4d e0 62 31 b1 c7 69 c4 79 </span><br><span class="line">e757 ac 20 1 e8 3c 6a 8c 32 cb 52 63 36 68 f4 10 2b 9c 21 4f df 5d 60 92 39 91 </span><br><span class="line">e770 e2 f9 c9 7d ca 48 3 3f 21 dd 6c f 23 2e 61 3a 9f ba c3 f9 4e 7 ea ed ef </span><br><span class="line">e789 71 4a 72 3a ed 23 3d 77 b5 ed d5 1d f6 a4 99 fa ef 98 dd 2 98 80 b6 7c a3 </span><br><span class="line">e7a2 62 96 7b 8e bf 7b 81 9f 9a ce 3f 12 40 2e 25 db 84 16 dd 2e 86 f f4 b2 7e </span><br><span class="line">e7bb 5e b4 14 6a f3 29 b1 a4 57 d5 a8 17 6f 87 a4 74 5b 9b 17 79 f1 ec 33 c8 </span><br><span class="line">e7d3 f0 1d b2 7e a8 4d 95 7f 5f 9 d5 1a 5a 45 f4 41 c6 d 3f eb 66 2a c0 e8 5b </span><br><span class="line">e7ec 3c bd 50 ad f1 53 9d 2e 45 9a d8 7d 2c 17 a8 6e 15 48 13 39 53 ed 3d 78 </span><br><span class="line">e804 ad f 3a 65 a3 3e 2e fa ca 7 94 4a 1f b4 d8 7e 47 8a 8e de e7 7e 34 c1 69 </span><br><span class="line">e81d 7f 6a aa 66 58 18 31 24 72 13 22 34 8a 56 36 87 df c2 d 8e 3f 71 a2 5f 25 </span><br><span class="line">e836 8b 8d 4 78 fd c9 45 d1 55 79 c1 9f 13 84 1b c8 5 db 95 d0 7c 64 96 20 51 </span><br><span class="line">e84f c4 e0 5e ee 47 8a 11 ac fb 9 e0 bb 40 db 86 84 12 93 b9 c9 f2 9c 63 47 c9 </span><br><span class="line">e868 eb ad 1 3e fa 6d 3f a 64 5b 58 56 27 f ca 5d e0 30 bc 3e 10 5d ec 17 28 </span><br><span class="line">e881 85 5 51 8e 95 a3 94 3a a8 f1 96 f2 f 29 5c 97 dc 47 db 9d 6c 63 e8 e7 f0 </span><br><span class="line">e89a e4 a 70 f8 f1 47 54 d3 2d 32 7c ef bb 9a b4 1b 0 2b d6 dd e7 30 b a2 75 </span><br><span class="line">e8b3 c7 f5 d0 31 d7 d2 8a b0 ac 1c 6d 60 3a f7 c2 db 1e 6d 7 f6 8f 35 88 e5 7f </span><br><span class="line">e8cc 3c 26 81 34 a0 32 a3 25 18 6e 73 b2 a0 f1 cb 86 61 e7 65 8b 76 98 19 6f </span><br><span class="line">e8e4 c0 62 9b a3 cc 18 5e 40 12 97 2b d0 15 79 de 19 ea df 7a 59 2f b5 d7 39 </span><br><span class="line">e8fc 52 e2 6 f1 3 a0 a5 d9 1b 88 93 4d 30 c8 2d f5 db 55 ea 85 6f a 3f dc bd </span><br><span class="line">e915 57 15 6a a3 a3 3e 8e ad 2d da a0 ca 75 7c 57 8b c5 cb b 1d 2c 8e c6 96 2e </span><br><span class="line">e92e 6d 59 83 7d 64 72 ca 80 2e 6 a4 ff f6 f2 d5 1e 7 4 ba 34 6e 9 86 25 aa 4e </span><br><span class="line">e948 e0 7f f5 32 47 3e 7c 43 d8 28 c4 1c 11 1d bd 33 3 b5 ca 13 43 34 2 b1 a0 </span><br><span class="line">e961 57 ed 9d 3c 23 d4 45 b2 6e 81 6e af 3e 67 90 be 59 a5 45 34 53 46 85 d1 </span><br><span class="line">e979 25 ee 7d cb a4 db 12 c3 aa 17 61 9a fb 66 40 76 fe 3a 69 96 c0 91 14 a7 </span><br><span class="line">e991 5d cc 9f f6 73 59 ee b8 55 97 20 26 ff 99 ec 72 41 b5 27 21 6e ae 8a d0 </span><br><span class="line">e9a9 e4 d3 da 6f c4 53 c5 f8 b3 a7 a1 5d 66 93 d8 b1 89 40 23 92 c0 90 fb cb </span><br><span class="line">e9c1 e7 6b 4e 51 0 5d 57 f7 cd 1 e2 88 bf 44 9f ef c4 33 ce fa 46 46 a1 86 b </span><br><span class="line">e9da 7a 84 66 66 b9 2 ec 10 c6 a1 d4 c1 18 33 b1 d1 2 18 ad 2f 53 e4 b9 33 59 </span><br><span class="line">e9f3 be 3c af 80 4c 8a d5 76 c 3b a7 e2 97 94 15 75 4d 17 d5 97 cf f9 4a d0 6e </span><br><span class="line">ea0c bb 27 20 fc f1 f5 9 a8 df 4d b6 5d f0 1d 69 3b 76 35 82 a4 f3 56 64 39 5b </span><br><span class="line">ea25 6b b3 7 e7 5 8e 82 11 22 a8 1a db c8 3e 67 4a 3 7e 72 51 d6 3d 1a 1c f6 </span><br><span class="line">ea3e b8 da 4b 18 8a 15 9d d0 a4 84 96 3e cd 3 f9 3a 30 f3 fb 8f 6e 2 73 eb 52 </span><br><span class="line">ea57 93 95 cf dc 6f 48 fb ab d2 a9 70 b4 e2 23 8d 72 86 a8 fa 78 98 1d c5 fe </span><br><span class="line">ea6f 8a 51 88 2b b7 58 b0 ca ae 40 8a 33 32 75 1 6 c0 d4 b7 da 2a a7 bb ad f7 </span><br><span class="line">ea88 48 98 5a bc d3 d1 e6 16 97 c3 80 ab 73 ac 32 11 41 1f d 5d aa 0 dc d9 6e </span><br><span class="line">eaa1 fc 30 6 ef 11 60 27 a2 5f eb 5f b9 35 8 23 4 be 10 c0 85 3e 55 b3 82 fd </span><br><span class="line">eaba f7 c3 24 9f 2d 83 94 32 36 de ff 7c 87 7f 4a 80 7 2 23 cf a4 52 eb 3e 19 </span><br><span class="line">ead3 a0 b4 a 94 1a 40 58 d9 16 6d c0 64 c4 69 ed 60 46 65 cb df 58 38 0 51 c3 </span><br><span class="line">eaec ad a0 37 e4 cf ab f7 6c 24 7d 9 48 65 4a 9f 91 ad 1c 79 a4 a1 78 55 c e8 </span><br><span class="line">eb05 44 5b d ef 51 bd ea 2d a7 42 57 ab 3a 4f 2 b 3 19 6a 4d 72 76 5c 97 0 6c </span><br><span class="line">eb1f c5 5d bc dd e7 81 cf 8d 34 38 50 3c 98 58 cc 41 aa 99 90 af fe 4e 96 77 </span><br><span class="line">eb37 ed 54 18 ce 2c d1 5d 34 cb 79 50 ff 28 96 44 e0 51 64 6 a8 b7 6e 8c 62 c4 </span><br><span class="line">eb50 66 95 81 4f 8c f6 26 ba ea 5d d2 79 b1 e4 e9 29 fc a fd b3 85 8c e6 52 dd </span><br><span class="line">eb69 33 bd 5d c7 39 ef 6 ef 9e a6 6a 61 9c 9f d5 54 b4 fa a1 d4 10 9b ff 7e 33 </span><br><span class="line">eb82 11 52 99 c7 26 6e a1 36 8a ad ee 48 7a 2c 7f d5 b7 27 8a 6b 37 c 71 39 85 </span><br><span class="line">eb9b 9c ba a8 a 17 b9 d0 51 56 95 c2 3b 5 a7 31 c5 8b 5c 95 6e 4c 89 6f 17 ef </span><br><span class="line">ebb4 d4 5a a 77 65 e1 49 b2 e8 72 ac 3c f0 6b 71 fa 3 c7 ca fc ad f9 55 22 ec </span><br><span class="line">ebcd 58 2f 1c fa 29 cf 73 b4 ad 51 5c f8 66 70 59 5d 70 3e d1 3f c4 eb ec f1 </span><br><span class="line">ebe5 7 78 6a 93 67 9f 44 fc cb 5b 95 ff 74 c0 b7 42 77 26 c9 aa 8c ed 39 a2 db </span><br><span class="line">ebfe 9c b3 eb 3d 4a 1e 9b 89 e4 d8 a8 27 74 ef a3 ed a5 24 5d bb ab d0 fe a1 </span><br><span class="line">ec16 29 ab df 75 a a6 23 0 cc f1 14 72 9b 1a 55 7e e5 d1 da 98 dc c4 cf ab 34 </span><br><span class="line">ec2f ba 8d de 4a 59 6 13 dd d8 44 3c e bb 56 95 ae 97 e2 3b 49 e5 9a 6b a2 53 </span><br><span class="line">ec48 c1 33 35 24 1b 33 17 c3 8a 8c 12 3d 3d 4e 5b 75 22 30 67 4f a0 5d 3a 78 </span><br><span class="line">ec60 88 a 11 35 7 b1 77 42 32 a8 c3 bb 20 fb 98 5 d6 ac e7 3a 63 35 90 93 9e </span><br><span class="line">ec79 44 24 2e 1b d7 8c aa 29 53 4d d9 ab eb e6 1 56 c4 fd 54 a3 bd 14 5b b0 8f </span><br><span class="line">ec92 ce be 23 24 93 c4 48 18 a3 e7 4 5 4b 78 cc 79 dd 3 56 a4 ed dd 5f 98 41 </span><br><span class="line">ecab 1b 68 4c c1 bb 41 c2 1e 3e 94 8e ef 28 1e b 76 e 4f 36 b1 c 6e e2 18 17 </span><br><span class="line">ecc4 20 fc 35 40 1f e4 6d a4 18 bb bc d5 9e ea 85 86 af af 63 d4 13 66 92 c4 </span><br><span class="line">ecdc 2b 69 84 ca 23 2b d3 66 81 6b 81 73 26 4 85 36 21 4c 49 44 75 64 39 16 3c </span><br><span class="line">ecf5 ed e0 6d 44 75 45 30 43 68 c0 78 fc d0 17 b eb 81 3e c3 ba 1b f 4d ae c5 </span><br><span class="line">ed0e 55 1f c 39 12 5d 8 65 f1 34 59 de dd 98 56 17 43 38 66 49 9a eb db c1 87 </span><br><span class="line">ed27 51 38 cc b7 5f 98 fd 43 be 2d bb 74 f3 f8 f2 36 3d a4 34 a5 7e d2 26 cc </span><br><span class="line">ed3f 84 1f ea 56 f0 80 18 69 4d 88 41 fc 56 fd 41 3b 1e e 9 27 4f f6 3b 62 4e </span><br><span class="line">ed58 5a 1b 2a 4e 85 8c b2 4f 79 ef 59 4e e 73 3d bd c4 ca 60 e7 4a 47 90 b5 8 </span><br><span class="line">ed71 2a f0 4e dc ba 66 ae 48 2b 31 73 a2 11 c 32 ff 54 14 77 6b d6 58 4b bf ee </span><br><span class="line">ed8a f6 6a bc dd 1 88 d da a9 f 81 24 c5 f8 72 9a db d5 c8 2a 80 a9 16 d7 c6 </span><br><span class="line">eda3 b1 91 c0 a9 95 40 b5 b3 a8 2a 28 c6 92 16 ab 54 7d f8 93 5f 3a 17 c8 45 </span><br><span class="line">edbb a9 f0 e0 71 23 76 53 38 a5 a1 cc d4 f1 f2 3c 2b 46 43 a1 d5 ba e d7 19 7a </span><br><span class="line">edd4 c2 e1 8f 67 1d d 98 9d a1 79 9d 1b 20 7f 4d e7 bf f9 ff fe aa 28 ab 8f c </span><br><span class="line">eded 4d 50 33 e3 26 fc 3c 3 3a 2b 26 12 f7 1 8f ee 97 4c e6 6 2b d9 1f a1 4a </span><br><span class="line">ee06 77 44 d4 8b b7 3e 5e 2d 18 c3 54 68 99 a8 8d 92 96 9e 9d ab 33 38 ff b8 </span><br><span class="line">ee1e ee 78 c6 7b b5 84 95 d3 6 27 ae 5d 27 38 a 38 8e f0 1 a5 96 4b d7 9b 42 </span><br><span class="line">ee37 e5 6f 57 75 4c e9 78 2d 5b ec b6 d2 29 e2 a8 92 95 9c 65 2a 3e bf 8d e0 </span><br><span class="line">ee4f bf b3 ac c8 e 7e 13 af 88 26 7d 48 5a c7 39 29 36 d2 90 e8 3b 3 d0 61 1a </span><br><span class="line">ee68 d2 e8 a8 f ba 8e a1 9f df 12 ab 54 7 23 98 de 62 af 4c 7e d4 fb 6b 2 6e </span><br><span class="line">ee81 40 40 37 b7 73 f2 d8 81 be 29 d2 99 c0 73 25 1a 3c 92 75 6e bd d7 79 79 </span><br><span class="line">ee99 4 14 c0 4e 99 57 66 93 74 ec b0 29 7c df 61 b0 3 3a d1 c3 fa a4 f7 f 9f </span><br><span class="line">eeb2 d3 f 0 b9 2a 5a 3a c5 88 25 b8 b9 cc 82 3 57 3a e1 7b 51 75 70 a6 74 1a </span><br><span class="line">eecb ca cb 3 18 68 ca 77 fe 1b ad cd 68 7f 36 85 fc b7 4f a0 11 da 69 fa 79 87 </span><br><span class="line">eee4 d6 b9 21 dd 3e 70 db dc 84 d4 6e d1 20 4 af f6 32 a2 8e d 54 25 fe 7 54 </span><br><span class="line">eefd e 7a 74 4b a0 4b f7 f4 e8 74 22 e9 98 70 fb 25 2e f4 64 57 75 28 85 45 53 </span><br><span class="line">ef16 3a 2e e2 3c 54 36 e9 29 6 67 59 43 10 7e c1 49 cd 5e f9 97 a 58 5f 8a 11 </span><br><span class="line">ef2f 4f 3d 9a e2 2b 22 58 fa be fc 69 91 7a 8c 3f 77 9f c9 3b 54 26 23 93 b3 </span><br><span class="line">ef47 85 de ae f5 bd c5 47 4c c4 cd 5e ad bc 8f ba 31 f6 e4 70 fb 6e a7 96 d5 </span><br><span class="line">ef5f ad 10 80 39 43 97 4f 10 cc 1b 8f 8d cd 4c 63 4 d8 1e 85 70 41 6c a8 eb df </span><br><span class="line">ef78 7f 36 c5 60 a7 12 9 16 73 fe 75 3a 2d 40 29 7d aa a 5c 2 29 23 0 a6 e5 6b </span><br><span class="line">ef92 24 6d 9b 20 e5 7 cb 40 b0 38 59 9c a7 69 6a 70 d3 38 ef e2 b2 11 3e ea 2a </span><br><span class="line">efab f9 2b 2e 43 1d 65 cf d6 1b ef 83 5a 5f e6 c5 62 16 ca 5e 4c a6 39 e4 53 </span><br><span class="line">efc3 2d 23 d2 5e 7e 15 54 8a 8 b7 3d bb 88 59 b9 9e a2 7c 42 1f a2 77 3c 5b 9 </span><br><span class="line">efdc 6d fa 8f 21 46 1a 3e ed ce 49 56 1d 29 2d 70 3 a7 6f 75 ac 1 87 ff 27 86 </span><br><span class="line">eff5 73 49 28 85 2d 97 7a 84 e 37 3d 86 10 21 4c e2 74 62 6b 51 70 8f 15 72 f3 </span><br><span class="line">e100e 81 b2 a9 9d 8a 63 ad 1b d5 aa 8a dc 96 3c e7 47 16 51 fc 87 50 9 b7 60 </span><br><span class="line">e1026 29 33 52 fb b0 df 70 c5 65 4a 60 3b c d7 a8 29 47 51 f7 8a 77 f3 99 3f </span><br><span class="line">e103e 38 16 60 de 68 27 b2 24 7 62 a2 fd 40 86 b2 75 c3 3c 2f 3d fa 9 d9 a9 9a </span><br><span class="line">e1057 71 3c ce 46 94 0 f9 bc 46 7f b8 2e 85 7f 7d d3 8d ea b4 63 81 59 10 bb </span><br><span class="line">e106f 57 d0 b6 ab e1 83 74 1e 25 d5 73 78 18 b1 60 62 c f4 76 8d 17 d5 ed 23 </span><br><span class="line">e1087 23 e4 f6 32 64 5a 61 9 63 f6 92 57 d5 29 40 d6 3b ba 63 72 18 0 25 1b 7 </span><br><span class="line">e10a0 ee 7f 25 4a fa 6 74 19 46 e3 e8 89 7a c6 56 54 a7 43 13 4e bf 97 a5 6f </span><br><span class="line">e10b8 99 2f ac 33 4d fa 58 3a 5a a a4 1a 74 62 c8 4f 3b 78 9 d7 ee 7e ee 2d 69 </span><br><span class="line">e10d1 30 40 ea 47 82 3b 85 8e 3 23 8f 74 4e 8 35 ab 74 4 1 57 d5 85 b1 6b 1e </span><br><span class="line">e10ea f4 7d 1e d2 1e b3 fe f3 12 10 32 39 51 48 2d 6f e5 d3 a3 8c 8 8 </span><br><span class="line"></span><br><span class="line">g </span><br><span class="line">rcx </span><br><span class="line">fff </span><br><span class="line">n1.com </span><br><span class="line">w </span><br><span class="line">q</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置与应用web服务</title>
      <link href="/%F0%9F%98%98.html"/>
      <url>/%F0%9F%98%98.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>web服务器采用浏览器/服务器(B/S)模型，浏览器用于解释和显示web页面，响应用户的输入请求，并通过HTTP协议讲用户请求的数据传递给web服务器。web服务器默认是使用80端口为客户机的浏览器提供浏览服务，浏览器使用HTTP发送请求，浏览器与服务器建立连接后，服务器查找到文档后将文档回传给客户机浏览器。</p></blockquote><a id="more"></a><h1 id="任务一"><a href="#任务一" class="headerlink" title="任务一"></a>任务一</h1><p><code>安装与配置完美的LAMP服务器</code></p><p><span id="inline-blue">任务说明</span>Web服务器又乘www服务器，是放置一般网站的服务器。一台web服务器上可以来建立多个网站，各个网站的拥有者只需要把做好的网页和相关文件放置在web服务器的网站中，其他用户就可以用浏览器访问网站中做好的网页了。LAMP是Linux、Apache、Mysql、PHP组合的简称，公司现因业务发展的需要，需要搭建一台自己的web服务器，用以存放公司的门户网站。要求服务器支持Mysql数据库以及PHP的动态网站，服务器IP地址为192.168.30.128</p><h2 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd -y</span><br></pre></td></tr></table></figure><h2 id="设置Apache开机自启"><a href="#设置Apache开机自启" class="headerlink" title="设置Apache开机自启"></a>设置Apache开机自启</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --levels 235 httpd on</span><br></pre></td></tr></table></figure><h2 id="启动Apache"><a href="#启动Apache" class="headerlink" title="启动Apache"></a>启动Apache</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service httpd start</span><br></pre></td></tr></table></figure><p>启动后在浏览器中输入ip地址会看到一个centos的Apache的测试界面。</p><p><code>注意:</code>若启动提示错误(🙅‍不影响访问)可以使用<code>vim /etc/httpd/conf/httpd.conf</code>命令修改配置文件，找到“ServerName”字样，在下面添加如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ServerName localhost:80</span><br></pre></td></tr></table></figure><h2 id="发布一个简单的网页"><a href="#发布一个简单的网页" class="headerlink" title="发布一个简单的网页"></a>发布一个简单的网页</h2><p>使用<code>mkdir -p /www/yhy</code>创建存放网站的文件夹，使用<code>echo &quot;Hello world&quot;&gt;/www/yhy/index.html</code>创建主页文件。当然准确的来说这样创建html文件不是很正规的，不过只是测试而已无伤大雅🤪。使用<code>vim /etc/httpd/conf/httpd.conf</code>编辑配置文件在最后加入如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost * :80&gt;</span><br><span class="line">DocumentRoot /www/yhy</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>在浏览器中输入IP地址访问测试主页，出现Hello world字样则说明成功。</p><p><span id="inline-blue">注意</span>我们需要要关闭防火墙以及SELinux</p><h2 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y php</span><br><span class="line">yum install -y php-mbstring</span><br></pre></td></tr></table></figure><p>使用<code>vim /etc/httpd/conf/http.conf</code>编辑配置文件在DirectoryIndex那一行添加index.php保存退出</p><p>修改网站文件夹下的index.html的名字，然后建立index.php文件中内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p>刷新浏览器可以看到php的支持界面。</p><h2 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-server mysql mysql-devel -y</span><br></pre></td></tr></table></figure><p>要想让PHP支持MySQL，还需要安装php-mysql的安装包可以直接通过<code>yum install -y php-mysql</code>来进行安装。</p><h3 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --levels 235 mysqld on</span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld start</span><br></pre></td></tr></table></figure><p>当页面显示 <strong>Starting mysqld   [OK]</strong> ，表示MySQL已启动。</p><h3 id="修改数据库root用户密码"><a href="#修改数据库root用户密码" class="headerlink" title="修改数据库root用户密码"></a>修改数据库root用户密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p>默认密码是为空的，所以所以提示 <strong>Enter current password for root (enter for none)</strong> 时，输入 <strong>回车（enter）</strong> 就可以。</p><p><strong>设置新密码</strong><br>这里设置新的root密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set root password? [Y/n] y</span><br><span class="line">New password:</span><br><span class="line">Re-enter new password:</span><br></pre></td></tr></table></figure><p><code>注意:</code></p><p>1.输入的密码不会显示出来。在真实的生产环境中一定要设置复杂度高的密码，以免被暴力破解。</p><p>2.设置 MySQL 根密码仅是保护数据库的最基本措施。在构建或安装数据库驱动的应用程序时，用户通常可以为该应用程序创建数据库服务用户，并避免使用根账户执行除数据库管理以外的操作。</p><p>其他设置<br>下面根据个人偏好来进行设置,没有绝对的要求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Remove anonymous users? [Y/n] Y                <span class="comment">#是否移除匿名用户</span></span><br><span class="line">Disallow root login remotely? [Y/n] n          <span class="comment">#是否不允许root远程登录</span></span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? [Y/n] n <span class="comment">#是否移除test数据库</span></span><br><span class="line">Reload privilege tables now? [Y/n] y           <span class="comment">#是否重新加载表的权限</span></span><br></pre></td></tr></table></figure><p><strong>登录数据库</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>可以通过<code>show databases;</code>命令查看系统中的数据库</p><h2 id="查看Mysql的主要配置文件"><a href="#查看Mysql的主要配置文件" class="headerlink" title="查看Mysql的主要配置文件"></a>查看Mysql的主要配置文件</h2><p>(1)Mysql的主配置文件为/etc/my.cnf</p><p>可以通过<code>cat /etc/my.cnf</code>来查看Mysql的主配置文件</p><p>(2)Mysql数据库文件的存放位置为<code>/var/lib/mysql</code></p><p>(3)创建数据库来验证一下存放的位置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create database yhy;</span><br><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>或者也可以通过<code>ll /var/lib/mysql</code>来查看Mysql数据库文件的存放位置。</p><p>(4)数据库的日志输出存放位置</p><p>Mysql数据库的一些日志输出存放位置都是在/var/log这个目录下。mysqld.log存放MySQL数据库的一些日志信息。</p><p>(5)MySQL数据库是可以通过网络来访问的，其实用的协议是TCP/IP协议，MySQL数据库绑定的端口号为3306。可以使用<code>netstat  -anp |grep mysqld</code>来查看。</p><p><img src="/img/web/1.png" alt=""></p><h2 id="安装PHPmyadmin"><a href="#安装PHPmyadmin" class="headerlink" title="安装PHPmyadmin"></a>安装PHPmyadmin</h2><p><span id="inline-yellow">介绍:</span>phpMyAdmin是一个以PHP为基础，以web-Base方式架构在网站主机上的MySQL数据库管理工具。他不仅可以管理整个MySQL服务器，而且也可以管理单个数据库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /www/yhy</span><br><span class="line">wget http://oss.aliyuncs.com/aliyunecs/onekey/phpMyAdmin-4.1.8-all-languages.zip</span><br><span class="line">unzip phpMyAdmin-4.1.8-all-languages.zip </span><br><span class="line">mv phpMyAdmin-4.1.8-all-languages phpmyadmin</span><br></pre></td></tr></table></figure><p>在浏览器中输入IP地址/phpmyadmin,然后会出现一个登录的界面。输入自己的数据库账号密码可以登录进去对数据库进行管理。具体如下图所示。</p><p><img src="/img/web/4.png" alt=""></p><p>(6)添加允许访问的端口<code>21:ftp ,80:http</code>命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -I RH -Firewall -1 -INPUT -m state -state NEW -m tcp -p tcp -dport 21 -j ACCEPT</span><br><span class="line">iptables -I RH -Firewall -l -INPUT -m state -state NEW -m tcp -p tcp</span><br></pre></td></tr></table></figure><p><span id="inline-purple">建议</span>初学者可以使用<code>service iptables stop</code>来关闭防火墙和<code>setenforce 0</code>关闭SELinux来避免出错。但是这样十分不安全，以后的开发中还是要严谨的来，切记不可这样做。</p><h1 id="任务二"><a href="#任务二" class="headerlink" title="任务二"></a>任务二</h1><p><code>配置多虚拟主机服务器</code></p><p><span id="inline-blue">要求</span>使用10.0.0.8和10.0.0.9两个IP地址创建基于IP地址的虚拟主机，其中IP地址为10.0.0.8的虚拟主机对应的主目录为/usr/www/web1,IP地址为10.0.0.9的虚拟主机对应的主目录为/usr/www/web2。在DNS服务器中建立web1.yhy.com和web2.yhy.com两个域名，使它们解析到同一个IP地址10.0.0.8上，然后创建基于域名的虚拟主机，其中：域名为web1.yhy.com的虚拟主机对应的主目录为/usr/www/web1，域名为web2.yhy.com的虚拟主机对应的主目录为/usr/www/web2。</p><h2 id="配置单网卡多IP地址"><a href="#配置单网卡多IP地址" class="headerlink" title="配置单网卡多IP地址"></a>配置单网卡多IP地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/sysconfig/network-scripts/</span><br><span class="line">cp ifcfg-eth0 ifcfg-eth0:1</span><br><span class="line">vim ifcfg-eth0  //配置eth0的IP地址</span><br><span class="line">vim ifcfg-eth0:1 //配置eth0:1的IP地址</span><br></pre></td></tr></table></figure><p>只需修改网卡eth0:1中的以下两项，修改为如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0:1</span><br><span class="line">IPADDR=10.0.0.9</span><br></pre></td></tr></table></figure><p>使用<code>service netwrok restart</code>命令重启网络</p><h2 id="建立网站主目录与主页文件"><a href="#建立网站主目录与主页文件" class="headerlink" title="建立网站主目录与主页文件"></a>建立网站主目录与主页文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/www/web1</span><br><span class="line">mkdir /usr/www/web2</span><br><span class="line">echo &quot;web1&quot;&gt;/usr/www/web1/index.html</span><br><span class="line">echo &quot;web2&quot;&gt;/usr/www/web1/index.html</span><br></pre></td></tr></table></figure><h2 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h2><p>使用<code>vim /etc/httpd/conf/http.conf</code>命令配置主配置文件，在最后几行添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost 10.0.0.8:80&gt;</span><br><span class="line">ServerAdmin webmaster@localhost.com</span><br><span class="line">DocumentRoot /usr/www/web1</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">&lt;VirtualHost 10.0.0.9:80&gt;</span><br><span class="line">ServerAdmin webmaster@localhost.com</span><br><span class="line">DocumentRoot /usr/www/web2</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>编辑完成后<code>:wq</code>保存退出然后重启Apache，使用<code>service httpd restart</code>来重启。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>打开浏览器先后输入<code>10.0.0.8</code>和<code>10.0.0.9</code>来进行测试。测试结果如下所示。</p><p><img src="/img/web/2.png" alt=""> <img src="/img/web/3.png" alt=""></p><p><code>注意</code>此处的http.conf配置文件其他的设置采用默认即可。如果这个两个IP的端口不同，要在Listen 80下面增加相应的监听端口。</p><p><span id="inline-purple">思考❓</span>如何通过web1.yhy.com和web2.yhy.com两个域名来访问相关服务呢？🌈</p><h2 id="配置DNS服务"><a href="#配置DNS服务" class="headerlink" title="配置DNS服务"></a>配置DNS服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/named.conf</span><br><span class="line">vim /etc/named.rfc1912.zones</span><br></pre></td></tr></table></figure><p>编辑配置文件如下所示<img src="/img/web/16.png" alt=""></p><p>在区域文件中添加如下所示内容<img src="/img/web/17.png" alt=""></p><p>建立正向查找域名文件</p><p>进入目录/var/named下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -p named.localhost yhy.zones</span><br><span class="line">vim yhy.zones</span><br></pre></td></tr></table></figure><p><img src="/img/web/18.png" alt=""></p><p>重启服务关闭防火墙以及selinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service named restart</span><br><span class="line">service httpd restart</span><br><span class="line">service iptables stop</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p><code>测试</code></p><p><img src="/img/web/19.png" alt="">)<img src="/img/web/20.png" alt=""></p><h2 id="httpd-conf配置文件的组成"><a href="#httpd-conf配置文件的组成" class="headerlink" title="httpd.conf配置文件的组成"></a>httpd.conf配置文件的组成</h2><p>httpd.conf的配置文件分为三大部分：</p><p>(1)全局变量(Global Enviornment)部分:</p><p>(2)主服务器配置(Main Server Configuration)部分:</p><p>(3)虚拟主机(Virtual Host)部分。</p><h1 id="任务三"><a href="#任务三" class="headerlink" title="任务三"></a>任务三</h1><p><code>配置基于域名的服务器</code></p><h2 id="网站搭建DNS服务器"><a href="#网站搭建DNS服务器" class="headerlink" title="网站搭建DNS服务器"></a>网站搭建DNS服务器</h2><p>在这里我们的测试域名为<code>www.yhy.com</code>。</p><h3 id="编辑配置文件-1"><a href="#编辑配置文件-1" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><p>首先修改配置文件使用<code>vim /etc/named.conf</code>命令来进行编辑，修改成如下所示</p><p><img src="/img/web/5.png" alt=""></p><h3 id="编辑区域文件"><a href="#编辑区域文件" class="headerlink" title="编辑区域文件"></a>编辑区域文件</h3><p>然后使用<code>vim /etc/named.rfc1912.zones</code>在里面添加如下所示信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zone &quot;yhy.com&quot; in&#123;</span><br><span class="line">type master;</span><br><span class="line">file &quot;yhy.z&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="建立正向查找域文件"><a href="#建立正向查找域文件" class="headerlink" title="建立正向查找域文件"></a>建立正向查找域文件</h3><p>进入目录/var/named下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -p named.localhost yhy.z</span><br><span class="line">vim yhy.z</span><br></pre></td></tr></table></figure><p><img src="/img/web/6.png" alt=""></p><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service named restart  #重启</span><br><span class="line">chkconfig named on     #开机启动</span><br></pre></td></tr></table></figure><h2 id="搭建网站"><a href="#搭建网站" class="headerlink" title="搭建网站"></a>搭建网站</h2><h3 id="创建网站主目录和主页文件"><a href="#创建网站主目录和主页文件" class="headerlink" title="创建网站主目录和主页文件"></a>创建网站主目录和主页文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /www/html/yhy</span><br><span class="line">echo &quot;&lt;h1&gt;yhy.com&lt;/h1&gt;&quot;&gt;/www/html/yhy/index.html</span><br></pre></td></tr></table></figure><h3 id="编辑配置文件-2"><a href="#编辑配置文件-2" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><p>使用<code>vim /etc/httpd/conf/http.conf</code>命令配置主配置文件，在最后几行添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NameVirtualHost 192.168.30.133</span><br><span class="line">&lt;VirtualHost 192.168.30.33:80&gt;</span><br><span class="line">DocumentRoot /www/html/yhy</span><br><span class="line">ServerName www.yhy.com</span><br><span class="line">ServerAlias www.dumy-host.yhy.com</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>还有其余一些地方做如下修改，主要是配置文件中的网站主目录。<code>这里采用的方法或许有些不妥</code>有一种为了目的不择手段的感觉😂。但是事实就是应该这样</p><p><img src="/img/web/7.png" alt=""></p><p>使用<code>service httpd restart</code>命令重启apache服务器。</p><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>在这里选择的是一台windows7作为客户端来进行测试，需要做如下配置。</p><p><img src="/img/web/10.png" alt=""></p><p>然后打开浏览器在地址栏中输入<code>www.yhy.com</code>和服务器的IP地址<code>192.168.30.133</code>来进行测试。结果如下所示</p><p><img src="/img/web/8.png" alt="">)<img src="/img/web/9.png" alt=""></p><p>根据结果所示我们可以看到谷歌浏览器提示了不安全，这是因为Web服务器在默认情况下，都是使用纯文本协议HTTP，纯文本协议并不会对于传输中的数据进行任何形式的加密，其在安全方面有着重大的缺陷。下面将会web服务器进行https协议进行安全加密。</p><h1 id="任务四"><a href="#任务四" class="headerlink" title="任务四"></a>任务四</h1><p><code>安装配置服务器安全证书</code></p><p>为了解决HTTP协议存在的安全隐患，需要在web服务器上部署SSL证书应用HTTPS加密协议。<strong>HTTPS加密协议</strong>是HTTP协议的安全版本，有SSL+HTTP协议构建，可进行加密传输和身份认证。提供至少以下两种保障</p><p>(1)确保所有经过服务器传输的数据包都是经过加密的。</p><p>(2)对网站服务器真实身份进行认证，避免假冒。</p><p>申请HTTPS加密协议首先要到合法的CA机构，申请一张SSL证书。个人站点或者不涉及敏感信息的站点，可以申请免费安全套接字层(SSL)证书；网上银行、购物网站、政府机构等的网站应该购买更高级别的EVSS证书。在保证站点安全数据安全的同时，还可以提高站点服务商的信誉。</p><p><span id="inline-yellow">HTTPS</span>实际上采用了Netscape的SSL作为HTTP应用层的子层(HTTPS使用端口443，而不是像HTTP那样使用端口80来进行和TCP/IP的通信)。SSL使用40位关键字作为RC4流加密算法，HTTPS和SSL支持使用X.509数字认证，如果需要的话用户可以确认发送者是谁。</p><h2 id="安装Apache-SSL支持模块"><a href="#安装Apache-SSL支持模块" class="headerlink" title="安装Apache  SSL支持模块"></a>安装Apache  SSL支持模块</h2><p>使用<code>yum install -y mod_ssl</code>来进行安装，安装后会自动生成<code>/etc/httpd/conf.d/ssl.conf</code>文件</p><h2 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h2><p>(1)生成一个自签名证书</p><p>下面的命令可以被用来产生一个自签名的证书。首先，生成2048位的加密私钥。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out ca.key 2048</span><br></pre></td></tr></table></figure><p>(2)生成证书签名请求(CSR)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key ca.key -out ca.csr</span><br></pre></td></tr></table></figure><p><img src="/img/web/11.png" alt=""></p><p>(3)生成X509自签名证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca.crt</span><br></pre></td></tr></table></figure><p><img src="/img/web/12.png" alt=""></p><p>(4)修改权限</p><p><code>chmod 400 ca.key ca.csr ca.crt</code>修改权限为400，只有拥有者有可读权限。</p><p>(5)把创建的证书文件复制到对应的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp ca.key /etc/pki/tls/private/</span><br><span class="line">cp ca.csr /etc/pki/tls/private/</span><br><span class="line">cp ca.crt /etc/pki/tls/certs/</span><br></pre></td></tr></table></figure><p>(6)设置SSL配置Apache支持HTTPS</p><p>使用<code>vim /etc/httpd/conf.d/ssl.conf</code>修改SSL的设置文件，制定<code>www.yhy.com</code>站点HTTPS访问相关信息。内容如下图所示。建议配置前使用<code>cp /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ssl.conf.bak</code>命令进行备份。因为如果不小心配置出错的话，如果头脑不太清晰的话。可能会导致一步错步步错的情况发生，所以进行备份还是上上策。修改后内容如下图所示</p><p><img src="/img/web/13.png" alt=""></p><p>通过<code>vim /etc/httpd/conf/httpd.conf</code>命令配置网站支持HTTPS，同样建议配置前进行备份。具体内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:443&gt;</span><br><span class="line">        SSLEngine on</span><br><span class="line">        SSLCertificateFile /etc/pki/tls/certs/ca.crt</span><br><span class="line">        SSLCertificateKeyFile /etc/pki/tls/private/ca.key</span><br><span class="line">        ServerAdmin admin@yhy.com</span><br><span class="line">        DocumentRoot /var/www/html</span><br><span class="line">        ServerName www.yhy.com</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>使用<code>service httpd restart</code>重启apache服务器。</p><h2 id="测试HTTPS访问结果"><a href="#测试HTTPS访问结果" class="headerlink" title="测试HTTPS访问结果"></a>测试HTTPS访问结果</h2><p>测试结果如下所示</p><p><img src="/img/web/14.png" alt=""></p><p>点击继续访问后，可以进到此界面，这里提示我们刚才的证书是不安全的,是因为这本来就已经有人再用了所以会出现这种情况。</p><p><img src="/img/web/15.png" alt=""></p><h2 id="强制apache-web服务器始终使用https"><a href="#强制apache-web服务器始终使用https" class="headerlink" title="强制apache web服务器始终使用https"></a>强制apache web服务器始终使用https</h2><p>我们需要做的是将所有的HTTP请求重定向到HTTPS</p><p>(1)强制网站使用HTTPS访问，使用<code>vim /etc/httpd/conf/http.conf</code>命令编辑主配置文件。添加如下语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ServerName www.yhy.com:80</span><br><span class="line">Redirect permanent / https://www.yhy.com</span><br></pre></td></tr></table></figure><p>(2)强制虚拟主机使用HTTPS，使用<code>vim /etc/httpd/conf/http.conf</code>命令编辑主配置文件。添加如下语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ServerName www.yhy.com</span><br><span class="line">Redirect permanent / https://www.yhy.com</span><br></pre></td></tr></table></figure><h1 id="任务五"><a href="#任务五" class="headerlink" title="任务五"></a>任务五</h1><p><code>配置服务别名与用户认证</code></p><p><span id="inline-blue">要求</span></p><blockquote><ol><li><strong>设置网站主目录的路径为/var/www/web</strong></li><li>添加index.jsp文件作为默认文档</li><li>设置Apache监听端口号为8888</li><li>设置默认字符集为GB2312</li><li>建立一个名为test的虚拟目录，其对应的物理路径是/usr/local/test，并配置Web服务器允许该虚拟目录浏览和允许内容协商的多重视图特性，仅允许来自网络10.0.0.0网段的客户机的访问</li><li>建立一个名为private的虚拟目录，其对应的物理路径为/usr/local/private,并配置Web服务器对该虚拟目录启用用户认证，只允许用户名为abc和xyz的用户访问。</li></ol></blockquote><h2 id="建立相关目录及文件"><a href="#建立相关目录及文件" class="headerlink" title="建立相关目录及文件"></a>建立相关目录及文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/www/web #建立网站目录</span><br><span class="line">cd /var/www/web</span><br><span class="line">mkdir test private #在网站主目录下建立虚拟目录</span><br><span class="line">mkdir -p /usr/local/test #建立别名目录</span><br><span class="line">mkdir -p /usr/local/private #建立认证目录</span><br><span class="line">echo &quot;www.yhy.com&quot;&gt;/var/www/web/index.jsp</span><br><span class="line">echo &quot;test&quot;&gt;/usr/local/test/index.jsp</span><br><span class="line">echo &quot;private&quot;&gt;/usr/local/private/index.jsp</span><br></pre></td></tr></table></figure><h2 id="建立允许访问认证网站的用户"><a href="#建立允许访问认证网站的用户" class="headerlink" title="建立允许访问认证网站的用户"></a>建立允许访问认证网站的用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">htpasswd -c /etc/httpd/mycreatpwd abc</span><br><span class="line">htpasswd -c /etc/httpd/mycreatpwd xyz</span><br><span class="line">chmod 755 /etc/httpd/mycreatpwd</span><br></pre></td></tr></table></figure><p><code>备注</code>:mycraetpwd文件的权限，设置成用户可以访问就可以，设置权限为755。尽可能不要放在网站的根目录下，防止被人下载。</p><p>通过cat命令查看mycraetpwd文件中的内容</p><p><img src="/img/web/my.png" alt=""></p><h2 id="配置http-conf文件"><a href="#配置http-conf文件" class="headerlink" title="配置http.conf文件"></a>配置http.conf文件</h2><p>使用<code>vim /etc/httpd/conf/httpd.conf</code>修改主配置文件，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Listen 8888#在136行，定义服务器端口号</span><br><span class="line">DocumentRoot &quot;/var/www/web&quot; #在292行，定义网站根目录路径</span><br><span class="line">DirectoryIndex index.jsp #在402行，添加默认主页的文件名</span><br><span class="line">AddDefaultCharest GB2312 #在759行，添加网站编码</span><br></pre></td></tr></table></figure><p><code>备注</code>:在vim编辑器中，打开文件后按<code>Esc</code>键后输入<code>:set nu</code>可以显示文件的行号。也可以输入<code>/+关键词</code>来快速查找需要修改的内容。</p><p>同时在文档中相应位置，增加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Alias /test/ &quot;/usr/local/test/&quot;</span><br><span class="line">&lt;Directory &quot;/usr/local/test/&quot;&gt;</span><br><span class="line">Options Indexes</span><br><span class="line">Order allow,deny</span><br><span class="line">Allow from 10.0.0.0/8</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">Alias /private &quot;/usr/local/private/&quot;</span><br><span class="line">&lt;Directory &quot;/usr/local/private/&quot;&gt;</span><br><span class="line">Authtype basic</span><br><span class="line">AuthName &quot;This is private directory,please login:&quot;</span><br><span class="line">AuthUserFile &quot;/etc/httpd/mycreatpwd&quot;</span><br><span class="line">Require user abc xyz </span><br><span class="line">AllowOverride all</span><br><span class="line">Order allow,deny</span><br><span class="line">Allow from 10.0.0.0/8</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;VirtualHost www.yhy.com:8888&gt;</span><br><span class="line">DocumentRoot /var/www/web</span><br><span class="line">ServerName www.yhy.com</span><br><span class="line">ErrorLog logs/dummy-host.example.com-error_log</span><br><span class="line">CustomLog logs/dummy-host.example.com-access_log common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p><code>备注</code>:使用<code>service iptables stop</code>和<code>setenforce 0</code>关闭防火墙以及SELINUX。然后使用<code>service httpd restart</code>重启服务<code>choconfig --levels 235 httpd on</code>设置开机启动</p><h2 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h2><p>在客户机的浏览器中输入<code>www.yhy.com:8888</code></p><p><img src="/img/web/24.png" alt=""></p><p>在客户机的浏览器中输入<code>www.yhy.com:8888/test</code></p><p><img src="/img/web/25.png" alt=""></p><p>在客户机的浏览器中输入<code>www.yhy.com:8888/private</code></p><p><img src="/img/web/21.png" alt="">)<img src="/img/web/23.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Dreamweaver制作网页</title>
      <link href="/dw.html"/>
      <url>/dw.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>Dreamweaver是一款集网页制作和管理网站于一身的所见即所得网页代码编辑器。利用对 HTML、CSS、JavaScript等内容的支持，设计师和程序员可以在几乎任何地方快速制作和进行网站建设。同时它为一些什么都不懂的小白提供了一个制作网页的平台，只需一些十分简单的操作便可以在短时间内制作出一个网页来。本文主要来介绍如何在短时间内制作一个简洁并且美观的网页。</p></blockquote><a id="more"></a><h1 id="网页主题🌈"><a href="#网页主题🌈" class="headerlink" title="网页主题🌈"></a>网页主题🌈</h1><p>在你网页制作之前首先要确定的就是网页的主题，确定一个主题显得尤为重要。因为只有当你确定好一个主题之后，任务才可以得到下一步的实施。没有主题盲目的去做最终做出来的东西必然是乱七八糟的，最后老师肯定页不会给你一个很高的分数。所以如果你想得到一个较高的分数，确定好一个明确的主题最终做出来一个像模像样的网页才是取得高分的关键。打个比方来说确定主题就像你盖房子🏠想要改一个什么样的房子。</p><p><code>Themes</code>关于主题有的老师已经规定过，例如：</p><ol><li><p><strong><em>我的家乡</em></strong></p></li><li><p><strong><em>祖国的优秀传统文化</em></strong></p></li><li><p><strong><em>中国现代杰出人物</em></strong></p></li><li><p><strong><em>家乡的人文历史</em></strong></p></li><li><p><strong><em>世界杯与消费调研</em></strong></p></li><li><p><strong><em>羽毛球技战术介绍</em></strong></p></li><li><p><strong><em>民乐队组成介绍</em></strong></p></li><li><p><strong><em>国产电影推介</em></strong></p></li><li><p><strong><em>中国航空航天发展记录</em></strong></p></li><li><p><strong><em>戏曲剧种介绍</em></strong></p></li><li><p><strong><em>二十四节气介绍</em></strong></p></li><li><p><strong><em>关于书法</em></strong></p></li><li><p><strong><em>名族品牌介绍</em></strong></p></li><li><p><strong><em>国宝会说话</em></strong></p></li></ol><p>还有的没有规定让自己自由发挥的，这里建议你制作一个类似于个人博客的网站。你可以记录一下自己日常学习的一些东西，以及自己平时娱乐的一些信息等等。例如这个网站<a href="https://wy.嘲弄.xyz" target="_blank" rel="noopener">🎈</a>。如果你是选题的话可以参考这个是上面关于国产电影推介的。<a href="https://dy.嘲弄.xyz" target="_blank" rel="noopener">🎦</a>这个是今年给别人做的😂，有很多欠缺不足的地方希望大家不喷🤣。</p><h1 id="网页布局🌈"><a href="#网页布局🌈" class="headerlink" title="网页布局🌈"></a>网页布局🌈</h1><p>网页虽然有了主题，但是仅凭这个是不够的。下一步你还要确定网页的布局，网页布局对改善网站的外观非常重要。选择了一个正确的布局方式，下面的工作也必定会是容易的。在网页中的各个部分该放什么东西，在一处该用表格还是该插入图片。制作之前要有一个大致的布局思路！大多数网站会把内容安排到多个列中（就像杂志或报纸那样）。大多数网站可以使用 <div> 或者 <table> 元素来创建多列。CSS 用于对元素进行定位，或者为页面创建背景以及色彩丰富的外观。</p><h2 id="两种网页布局"><a href="#两种网页布局" class="headerlink" title="两种网页布局"></a>两种网页布局</h2><h3 id="①使用div元素布局"><a href="#①使用div元素布局" class="headerlink" title="①使用div元素布局"></a>①使用div元素布局</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Div布局<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"width:100%"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span> <span class="attr">style</span>=<span class="string">"background-color:#ffcc99;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"margin-bottom:0;"</span>&gt;</span>网页标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"menu"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFF0F5;height:500px;width:10%;float:left;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>菜单<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">HTML<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">CSS<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">JavaScript<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">style</span>=<span class="string">"background-color:#EEEEEE;height:500px;width:90%;float:left;"</span>&gt;</span></span><br><span class="line">内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFA500;clear:both;text-align:center;"</span>&gt;</span></span><br><span class="line">版权 © xxx<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span id="inline-blue">效果</span></p><p><img src="/img/dw/div.png" alt="">看到一长串的代码和最终的截图，或许你是一脸懵逼的。看不懂不要紧，这里不需要你能看懂也不需要你能够理解学会这些代码是啥意思。有兴趣有能力的可以去稍微研究一下，由于Div布局牵扯到写代码🙅‍不建议大家使用。不用Div元素布局我们还有其他的方法，下面对其进行介绍。</p><h3 id="②使用表格元素布局"><a href="#②使用表格元素布局" class="headerlink" title="②使用表格元素布局"></a>②使用表格元素布局</h3><p>由于Div元素布局较难，大家短时间内也不容易掌握。想必大多数老师日常的教学中对于页的构建都是使用DW软件往里面插入表格，然后进行合并拆分等最终制作成了一个简单的页面。此类方法简单粗暴，易于掌握。是目前来说大家制作网页作业的最好的选择。但是table标签是不建议作为布局工具使用的，因为表格并不是布局工具。But这个可以用在你的作业中，来帮助你快速的完成作业。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>表格<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">border</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">style</span>=<span class="string">"background-color:#ffcc99;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>主要的网页标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"background-color:#FFD700;width:100px;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>菜单<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">HTML<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">CSS<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">JavaScript</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"background-color:#eeeeee;height:200px;width:400px;"</span>&gt;</span></span><br><span class="line">内容在这里<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFA500;text-align:center;"</span>&gt;</span></span><br><span class="line">版权 © xxx<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这串代码和刚才上面的那段代码的效果是完全相同的。既然能够达到同样的效果并且还可以十分简单的完成作业，那么目前来说就要抛弃Div布局来使用表格完成网页的制作。</p><h3 id="③一些其他的布局样式"><a href="#③一些其他的布局样式" class="headerlink" title="③一些其他的布局样式"></a>③一些其他的布局样式</h3><p>除了上面的的那种布局样式外，下面两种布局样式也是比较受欢迎的。</p><p><img src="/img/dw/buju.png" alt="两列左窄右宽型"></p><p><strong><center><span id="inline-purple">这种布局和<a href="https://www.mi.com/" target="_blank" rel="noopener">小米官网</a>的布局是类似的</span></center></strong></p><p><img src="/img/dw/buju1.png" alt="通栏平均分布型"></p><p><strong><center><span id="inline-green">这种布局和<a href="https://www.smartisan.com/" target="_blank" rel="noopener">🔨锤子官网</a>的布局是类似的</span></center></strong></p><p>除了这些还有好多其他的网页布局样式知乎上也有相关介绍<a href="https://www.zhihu.com/question/21775016" target="_blank" rel="noopener">传送门🚪</a>。如果这些你都觉得不好、不喜欢的话，🙆‍可以根据自己的喜好来用表格对网页进行布局。</p><h2 id="布局总结"><a href="#布局总结" class="headerlink" title="布局总结"></a>布局总结</h2><p><span id="inline-blue">建议</span></p><blockquote><p>若你想让自己做出的网页可以好看一点，可以这样在自己的网页中同时使用div元素和表格来构建自己的网页，为页面创建背景以及色彩丰富的外观。由于创建高级的布局非常耗时，并且没有接触过前端的人代码也写不出来。你完全不必担心，使用模板是一个快速的选项你可以使用DW软件内的模板直接创建并使用别人构建好的布局，自己对其进行优化美化就🆗了。(模板的使用在网页的制作时会讲到，这里不做详细说明)</p></blockquote><h1 id="网页制作🌈"><a href="#网页制作🌈" class="headerlink" title="网页制作🌈"></a>网页制作🌈</h1><p>上面说了那么多，终于要来到关键的部分了。确定好一系列东西之后，在制作网页之前你还需要做一手准备就是网页中要用的的图片的准备</p><p><code>花费几十块，甚至上百块找代做并不能够百分百让你取得高分，他们的网页我看过大多也都比较烂。跟你自己做差不了多少其实</code>对于网页前端，他们其实和你们一样都是一个小白。他们之所以能够做出一个网页来，是因为他们使用这个名叫Dreamweaver的软件的熟练度比你高一点罢了。我相信只要你看了这个教程多加联系也一定能够做出自己令自己满意的网页！</p><p>—————————————————未完待续———————————————————</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vlan与路由</title>
      <link href="/route1.html"/>
      <url>/route1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文主要介绍单臂路由，静态路由以及其配置和应用。<a id="more"></a></p><h1 id="普通路由"><a href="#普通路由" class="headerlink" title="普通路由"></a>普通路由</h1><p><span id="inline-blue">特点：</span>需要多个路由器物理接口，成本高灵活性与拓展性较差</p><p><span id="inline-blue">配置：</span>路由器上在多个物理接口配置不同VLAN缺省网关IP地址，交换机上的端口设置为access port，分别属于不同的VLAN。</p><blockquote><p>通常的路由方式中路由器必须有多个物理接口，每个物理接口对应一个vlan，接口上配置的地址为此vlan的缺省网关。交换机上与路由器上连接的端口为访问端口access port。当需要增加vlan时在交换机上很容易实现，但是路由器上需要为此vlan增加新的物理 接口，所以这种方式的最大缺点为不具备良好的可拓展性。其优点为路由器上普通的以太口既可用于VLAN间的路由。</p></blockquote><p><code>配置思路</code></p><p>1.各个vlan配置不同的网段</p><p>2.各个vlan对应不同的路由器端口</p><p>​    2.1不同vlan选取不同的路由端口作为GW</p><p>​    2.2交换机与路由器连接端口为A口，该端口所属vlan严格与连接的路由器端口对应。</p><h1 id="单臂路由"><a href="#单臂路由" class="headerlink" title="单臂路由"></a>单臂路由</h1><p>创建三个子接口1.1 1.2 1.3，做802.1Q封装，不同子接口配置不同vlan的缺省网关IP地址，交换机上端口设置为802.1Q  trunk找网关地址</p><p><span id="inline-pink">练习题</span></p><p>单臂路由实验要求：</p><p>1.按照拓扑图所示，搭建网络环境并对设备进行重命名</p><p>2.根据PC机给定IP地址信息，计算各自的网关地址，完成IP地址配置</p><p>3.RT采用单臂路由方式，实现不同网段互通</p><p>4.实验验证：</p><p>实现PC1和PC2互相PING</p><p><img src="/img/route/danbi.png" alt=""></p><center>由图我们可知    PC1</center><table><thead><tr><th align="center">IP</th><th align="center">192.168.0.1/28</th></tr></thead><tbody><tr><td align="center">NETWORK</td><td align="center">192.168.0.0/28</td></tr><tr><td align="center">Broadcast</td><td align="center">192.168.0.15/28</td></tr><tr><td align="center">Gateway</td><td align="center">192.168.0.2/28~192.168.0.14/28</td></tr></tbody></table><p>PC1的IP地址为<code>pc1:192.168.0.1/28</code>则其<code>network:192.168.0.0/28</code>我们可以通过IP地址✖子网掩码而得出。</p><p>32-28=4,那么2<sup>4</sup>=16,所以共有16个IP地址<code>br:192.168.0.15/28</code>,网关地址可用范围为<code>gw:192.168.0.2/28~192.168.0.14/28</code></p><center>PC2</center><table><thead><tr><th align="center">IP</th><th align="center">192.168.0.20/28</th></tr></thead><tbody><tr><td align="center">NETWORK</td><td align="center">192.168.0.16/28</td></tr><tr><td align="center">Broadcast</td><td align="center">192.168.0.31/28</td></tr><tr><td align="center">Gateway</td><td align="center">192.168.0.17/28~192.168.0.30/28</td></tr></tbody></table><p><code>pc2:192.168.0.20/28</code>则其<code>network:192.168.0.16/28</code> 我们可以通过IP地址✖子网掩码而得出。    </p><p>32-28=4,那么2<sup>4</sup>=16 ,所以共有16个IP地址<code>br:192.168.0.31/28</code>网关地址可用范围<code>gw:192.168.0.17/28~192.168.0.30/28</code></p><h2 id="配置相关机器"><a href="#配置相关机器" class="headerlink" title="配置相关机器"></a>配置相关机器</h2><h3 id="配置PC"><a href="#配置PC" class="headerlink" title="配置PC"></a>配置PC</h3><p><img src="/img/route/pc1.png" alt="">)<img src="/img/route/pc2.png" alt=""></p><h3 id="配置交换机"><a href="#配置交换机" class="headerlink" title="配置交换机"></a>配置交换机</h3><blockquote><p>Switch&gt;en</p><p>Switch#conf t</p><p>Switch(config)#vlan 10  //创建vlan10</p><p>Switch(config-vlan)#exit</p><p>Switch(config)#vlan 20    //创建vlan20</p><p>Switch(config-vlan)#exit</p><p>Switch(config)#int fa 0/1</p><p>Switch(config-if)#sw acc vlan 10</p><p>Switch(config-if)#exit</p><p>Switch(config)#int fa 0/2</p><p>Switch(config-if)#sw acc vlan 20</p><p>Switch(config-if)#exit</p><p>Switch(config)#int fa 0/3</p><p>Switch(config-if)#sw mode trunk </p><p>Switch(config-if)#exit</p></blockquote><h3 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h3><blockquote><p>Router&gt;en</p><p>Router#conf t</p><p>Router(config)#int fa 0/0.1</p><p>Router(config-subif)#encapsulation dot1Q 10</p><p>Router(config-subif)#ip add 192.168.0.2 255.255.255.240</p><p>Router(config-subif)#no shutdown </p><p>Router(config-subif)#exit</p><p>Router(config)#int fa 0/0.2</p><p>Router(config-subif)#encapsulation dot1Q 20</p><p>Router(config-subif)#ip add 192.168.0.17 255.255.255.240</p><p>Router(config-subif)#no shutdown </p><p>Router(config-subif)#exit</p><p>Router(config)#int fa 0/0</p><p>Router(config-if)#no shutdown </p></blockquote><p><code>show run</code>命令可查看接口是否启用</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p><code>PC1 ping PC2</code></p><p><img src="/img/route/1.png" alt=""></p><p><code>PC2 ping PC1</code></p><p><img src="/img/route/2.png" alt=""></p><h1 id="VLAN间路由、静态路由"><a href="#VLAN间路由、静态路由" class="headerlink" title="VLAN间路由、静态路由"></a>VLAN间路由、静态路由</h1><p>单臂路由实验要求：(RS为三层交换机、R为路由器)</p><p>1.按照拓扑图所示，搭建网络环境，进行设备重命名</p><p>2.根据PC机给定的IP地址信息，计算各自的网关地址，完成IP地址配置</p><p>3.RS1、R2采用静态路由配置实现网络互通</p><p>4.实验验证</p><p>实现PC1与PC2、PC3互PING</p><p><img src="/img/route/tu2.png" alt=""></p><center>由图我们可知    PC1</center><table><thead><tr><th align="center">IP</th><th align="center">192.168.0.1/28</th></tr></thead><tbody><tr><td align="center">NETWORK</td><td align="center">192.168.0.0/28</td></tr><tr><td align="center">Broadcast</td><td align="center">192.168.0.15/28</td></tr><tr><td align="center">Gateway</td><td align="center">192.168.0.2/28~192.168.0.14/28</td></tr></tbody></table><p>PC1的IP地址为<code>pc1:192.168.0.1/28</code>则其<code>network:192.168.0.0/28</code>我们可以通过IP地址✖子网掩码而得出。</p><p>32-28=4,那么2<sup>4</sup>=16,所以共有16个IP地址<code>br:192.168.0.15/28</code>,网关地址可用范围为<code>gw:192.168.0.2/28~192.168.0.14/28</code></p><center>PC2</center><table><thead><tr><th align="center">IP</th><th align="center">192.168.0.20/28</th></tr></thead><tbody><tr><td align="center">NETWORK</td><td align="center">192.168.0.16/28</td></tr><tr><td align="center">Broadcast</td><td align="center">192.168.0.31/28</td></tr><tr><td align="center">Gateway</td><td align="center">192.168.0.17/28~192.168.0.30/28</td></tr></tbody></table><p><code>pc2:192.168.0.20/28</code>则其<code>network:192.168.0.16/28</code> 我们可以通过IP地址✖子网掩码而得出。    </p><p>32-28=4，那么2<sup>4</sup>=16,所以共有16个IP地址<code>br:192.168.0.31/28</code>网关地址可用范围<code>gw:192.168.0.17/28~192.168.0.30/28</code></p><p>`</p><center>PC3</center><table><thead><tr><th align="center">IP</th><th align="center">192.168.0.33/28</th></tr></thead><tbody><tr><td align="center">NETWORK</td><td align="center">192.168.0.32/28</td></tr><tr><td align="center">Broadcast</td><td align="center">192.168.0.47/28</td></tr><tr><td align="center">Gateway</td><td align="center">192.168.0.34/28~192.168.0.46/28</td></tr></tbody></table><p><code>pc2:192.168.0.33/28</code>则其<code>network:192.168.0.32/28</code> 我们可以通过IP地址✖子网掩码而得出。    </p><p>32-28=4，那么2<sup>4</sup>=16,所以共有16个IP地址,<code>br:192.168.0.47/28</code>那么网关地址可用范围<code>gw:192.168.0.34/28~192.168.0.46/28</code></p><h2 id="配置相关机器-1"><a href="#配置相关机器-1" class="headerlink" title="配置相关机器"></a>配置相关机器</h2><h3 id="配置PC-1"><a href="#配置PC-1" class="headerlink" title="配置PC"></a>配置PC</h3><p><img src="/img/route/pc1-1.png" alt="">)<img src="/img/route/pc1-2.png" alt="">)<img src="/img/route/pc1-3.png" alt=""></p><h3 id="配置三层交换机RS2"><a href="#配置三层交换机RS2" class="headerlink" title="配置三层交换机RS2"></a>配置三层交换机<code>RS2</code></h3><blockquote><p>Switch&gt;en<br>Switch#conf t</p><p>Switch(config)#vlan 10<br>Switch(config-vlan)#exit<br>Switch(config)#vlan 20<br>Switch(config-vlan)#exit</p><p>Switch(config)#vlan 30<br>Switch(config-vlan)#exit</p><p>Switch(config)#int fa 0/1<br>Switch(config-if)#sw acc vlan 10<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit</p><p>Switch(config)#int fa 0/2<br>Switch(config-if)#sw acc vlan 20<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit</p><p>Switch(config)#int fa 0/3<br>Switch(config-if)#sw acc vlan 30<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit</p><p>Switch(config)#int vlan 10<br>Switch(config-if)#ip add 192.168.0.2 255.255.255.240<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit</p><p>Switch(config)#int vlan 20<br>Switch(config-if)#ip add 192.168.0.17 255.255.255.240<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit</p><p>Switch(config)#int vlan 30<br>Switch(config-if)#ip add 172.16.1.1 255.255.255.252<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit</p><p>Switch(config)#ip route 192.168.0.32 255.255.255.240 172.16.1.2<br>Switch(config)#ip routing</p></blockquote><h2 id="配置路由器R2"><a href="#配置路由器R2" class="headerlink" title="配置路由器R2"></a>配置路由器<code>R2</code></h2><blockquote><p>Router&gt;en<br>Router#conf t</p><p>Router(config)#int fa 0/0<br>Router(config-if)#ip add 172.16.1.2 255.255.255.252<br>Router(config-if)#no shutdown<br>Router(config-if)#exit</p><p>Router(config)#int fa 0/1<br>Router(config-if)#ip add 192.168.0.34 255.255.255.240<br>Router(config-if)#no shutdown<br>Router(config-if)#exit</p><p>Router(config)#ip route 192.168.0.0 255.255.255.240 172.16.1.1<br>Router(config)#ip route 192.168.0.16 255.255.255.240 172.16.1.1</p></blockquote><h2 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h2><p><code>PC1 ping PC2与PC3</code><img src="/img/route/ping23.png" alt=""><code>PC2 ping PC1与PC3</code><img src="/img/route/ping13.png" alt=""><code>PC3 ping PC1与PC2</code><img src="/img/route/ping12.png" alt=""></p><h1 id="单臂路由、静态路由"><a href="#单臂路由、静态路由" class="headerlink" title="单臂路由、静态路由"></a>单臂路由、静态路由</h1><p>路由实验要求：(SW为交换机，R为路由器)</p><p>1.按照拓扑所示，搭建网络环境，进行设备的重命名</p><p>2.根据PC机给定的网关地址信息，完成各自主机IP地址计算及配置</p><p>3.实现PC1与PC2、PC3互通，PC2与PC3不通</p><p><img src="/img/route/tu3.png" alt=""></p><center>由图我们可知    PC1</center><table><thead><tr><th align="center">IP</th><th align="center">192.168.0.1/27~192.168.0.29/27</th></tr></thead><tbody><tr><td align="center">NETWORK</td><td align="center">192.168.0.0/27</td></tr><tr><td align="center">Broadcast</td><td align="center">192.168.0.31/27</td></tr><tr><td align="center">Gateway</td><td align="center">192.168.0.30/27</td></tr></tbody></table><p>PC1的网关地址为<code>GW:192.168.0.30/27</code>则其<code>network:192.168.0.0/27</code>我们可以通过网关地址✖子网掩码而得出。</p><p>32-27=5,那么2<sup>5</sup>=32，则有32个IP，广播地址<code>br:192.168.0.31/27</code>,IP地址可用范围为<code>IP:192.168.0.1/27~192.168.0.29/27</code>。<span id="inline-blue">注意</span>IP地址不能和网关地址一样</p><center>PC2</center><table><thead><tr><th align="center">IP</th><th align="center">192.168.0.33/27~192.168.0.62/27</th></tr></thead><tbody><tr><td align="center">NETWORK</td><td align="center">192.168.0.32/27</td></tr><tr><td align="center">Broadcast</td><td align="center">192.168.0.63/27</td></tr><tr><td align="center">Gateway</td><td align="center">192.168.0.40/27</td></tr></tbody></table><p>PC2的网关地址为<code>GW:192.168.0.40/27</code>则其<code>network:192.168.0.32/27</code> 我们可以通过网关地址✖子网掩码而得出。</p><p>32-27=5    ,2<sup>5</sup>=32 ,所以有32个IP地址，广播地址<code>br:192.168.0.63/27</code>，IP地址可用范围为<code>IP:192.168.0.33/27~192.168.0.62/27</code>。<span id="inline-yellow">注意</span>IP地址不能和网关地址一样</p><center>PC3</center><table><thead><tr><th align="center">IP</th><th align="center">10.10.10.1/29~10.10.10.30/29</th></tr></thead><tbody><tr><td align="center">NETWORK</td><td align="center">10.10.10.0/29</td></tr><tr><td align="center">Broadcast</td><td align="center">10.10.10.7/29</td></tr><tr><td align="center">Gateway</td><td align="center">10.10.10.6/29</td></tr></tbody></table><p>PC3的网关地址为<code>GW:10.10.10.6/29</code>则其网络地址为<code>network:10.10.10.0/29</code> 我们可以通过网关地址✖子网掩码而得出。</p><p>32-29=3    ,2<sup>3</sup>=8 ,所以有8个IP地址，广播地址<code>br:10.10.10.7/29</code>，IP地址可用范围为<code>IP:10.10.10.1/29~10.10.10.5/29</code>。</p><h2 id="配置相关机器-2"><a href="#配置相关机器-2" class="headerlink" title="配置相关机器"></a>配置相关机器</h2><h3 id="配置PC-2"><a href="#配置PC-2" class="headerlink" title="配置PC"></a>配置PC</h3><p><img src="/img/route/pc11.png" alt="">)<img src="/img/route/pc22.png" alt="">)<img src="/img/route/pc33.png" alt=""></p><h3 id="配置交换机SW"><a href="#配置交换机SW" class="headerlink" title="配置交换机SW"></a>配置交换机SW</h3><blockquote><p>Switch&gt;en<br>Switch#conf t</p><p>Switch(config)#vlan 10<br>Switch(config-vlan)#exit<br>Switch(config)#vlan 20<br>Switch(config-vlan)#exit<br>Switch(config)#int fa 0/1<br>Switch(config-if)#sw acc vlan 10<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit</p><p>Switch(config)#int fa 0/2<br>Switch(config-if)#sw acc vlan 20<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit</p><p>Switch(config)#int fa 0/3<br>Switch(config-if)#sw mode trunk<br>Switch(config-if)#no shutdown<br>Switch(config-if)#exit</p></blockquote><h3 id="配置路由器R1"><a href="#配置路由器R1" class="headerlink" title="配置路由器R1"></a>配置路由器R1</h3><blockquote><p>Router&gt;en<br>Router#conf t</p><p>Router(config)#int fa 0/0.1</p><p>Router(config-subif)#encapsulation dot1Q 10<br>Router(config-subif)#ip add 192.168.0.30 255.255.255.224<br>Router(config-subif)#no shutdown<br>Router(config-subif)#exit</p><p>Router(config)#int fa 0/0.2<br>Router(config-subif)#encapsulation dot1Q 20<br>Router(config-subif)#ip add 192.168.0.40 255.255.255.224<br>Router(config-subif)#no shutdown<br>Router(config-subif)#exit</p><p>Router(config)#int fa 0/0<br>Router(config-if)#no shutdown</p><p>Router(config-if)#exit</p><p>Router(config)#int fa 0/1<br>Router(config-if)#ip add 172.0.0.1 255.255.255.252<br>Router(config-if)#no shutdown</p><p>Router(config-if)#exit</p><p>Router(config-if)#ip route 10.0.0.0 255.255.255.248 172.0.0.2</p></blockquote><h3 id="配置路由器R2-1"><a href="#配置路由器R2-1" class="headerlink" title="配置路由器R2"></a>配置路由器R2</h3><blockquote><p>Router&gt;en<br>Router#conf t<br>Router(config)#int fa 0/0<br>Router(config-if)#ip add 172.0.0.2 255.255.255.252<br>Router(config-if)#no shutdown</p><p>Router(config-if)#exit</p><p>Router(config)#int fa 0/1<br>Router(config-if)#ip add 10.10.10.6 255.255.255.248<br>Router(config-if)#no shutdown</p><p>Router(config-if)#exit</p><p>Router(config)#ip route 192.168.0.0 255.255.255.224 172.0.0.1    //配置静态路由</p></blockquote><h2 id="验证-2"><a href="#验证-2" class="headerlink" title="验证"></a>验证</h2><p><code>PC1 ping PC2与PC3</code></p><p><img src="/img/route/ping2-3.png" alt=""></p><p><code>PC2 ping PC1与PC3</code></p><p><img src="/img/route/ping1-3.png" alt=""></p><p><code>PC3 ping PC1与PC2</code></p><p><img src="/img/route/ping1-2.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vlan </tag>
            
            <tag> 路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置磁盘配额与管理RAID卷</title>
      <link href="/raid.html"/>
      <url>/raid.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>当Linux根分区的磁盘空间耗尽时，系统将无法在建立新的文件，从而出现服务程序崩溃，系统无法启动等故障现象，为了避免在服务器中出现类似磁盘空间不足的问题，可以设置启用磁盘的配额的功能。对用户在指定文件系统中使用的磁盘空间、文件数量进行限制，以防止个别用户恶意或者无意间占用大量磁盘空间，保持系统存储空间的稳定性和持续可用性。</p></blockquote><a id="more"></a><h1 id="任务一"><a href="#任务一" class="headerlink" title="任务一"></a>任务一</h1><p><code>配置用户基本磁盘配额限制</code></p><p><span id="inline-blue">背景</span>一公司现有用户名为yhy的邮件用户，经常上传大量的邮件附件，占用服务器的硬盘资源，他的邮件存放路径为/mail目录，挂载分区为/dev/sdb1,现在需要限制yhy用户磁盘的最大使用量为10MB，超过7MB发出警告，超过10MB就不能再在/mail中存储数据。</p><h2 id="确认quota软件包的安装情况"><a href="#确认quota软件包的安装情况" class="headerlink" title="确认quota软件包的安装情况"></a>确认quota软件包的安装情况</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa |grep quota</span><br><span class="line">rpm -ql quota | grep sbin</span><br></pre></td></tr></table></figure><p>(づ￣3￣)づ╭❤～有信息返回则说明已安装，centos系统一般安装系统时已经默认安装。</p><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd yhy</span><br><span class="line">passwd yhy</span><br></pre></td></tr></table></figure><h2 id="创建文件夹，并设置权限"><a href="#创建文件夹，并设置权限" class="headerlink" title="创建文件夹，并设置权限"></a>创建文件夹，并设置权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mail</span><br><span class="line">chmod 777 /mail</span><br></pre></td></tr></table></figure><h2 id="磁盘分区，格式化"><a href="#磁盘分区，格式化" class="headerlink" title="磁盘分区，格式化"></a>磁盘分区，格式化</h2><p>添加一块磁盘进行测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fdisk  -l /dev/sdb    //查看磁盘使用情况</span><br><span class="line">fdisk /dev/sdb//磁盘分区</span><br><span class="line">mkfs.ext4 /dev/sdb1 //创建文件系统并格式化</span><br></pre></td></tr></table></figure><p><code>磁盘分区具体步骤，由于十分简单在这里省略</code></p><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount -o usrquota /dev/sdb1 /mail //挂载</span><br><span class="line">tail /etc/mtab//查看系统挂载的分区</span><br></pre></td></tr></table></figure><p><code>- o usrquota</code>为用户的配额属性</p><p><span id="inline-yellow">开机自动挂载</span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><p>在文件最后一行添加如下图所示内容</p><p><img src="/img/raid/1.png" alt=""></p><p>参数<code>grpquota</code>表示增加组的配额属性。</p><p>重新挂载/dev/sdb1到/mail目录ლ(′◉❥◉｀ლ)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount /dev/sdb1</span><br><span class="line">mount  //查看挂载分区情况</span><br></pre></td></tr></table></figure><h2 id="检测配额并生成配额文件"><a href="#检测配额并生成配额文件" class="headerlink" title="检测配额并生成配额文件"></a>检测配额并生成配额文件</h2><p>此处要关闭selinux，关闭selinux的命令是<code>setenforce 0</code>,不然可能无法创建aquota.user和aquota.group文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">quotacheck -ugcv /dev/sdb1   //检测配额文件并生成配额文件</span><br><span class="line">ls -l /mail/</span><br></pre></td></tr></table></figure><p><img src="/img/raid/2.png" alt=""></p><p>可以看到在/mail目录下自动生成aquota.group和aquota.user两个配置文件。</p><p><code>备注</code>:上面参数具体含义如下</p><blockquote><p>-u,检测用户的配额信息；</p><p>-g,检测组配额信息；</p><p>-c，创建新的配额文件；</p><p>-v，显示命令执行过程中的细节信息</p></blockquote><h2 id="编辑用户yhy的配额"><a href="#编辑用户yhy的配额" class="headerlink" title="编辑用户yhy的配额"></a>编辑用户yhy的配额</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setquota -u yhy 7000 10000 0 0 /dev/sdb1 //配置yhy用户的磁盘配额</span><br><span class="line">edquota -u yhy</span><br></pre></td></tr></table></figure><p><img src="/img/raid/3.png" alt=""></p><h2 id="激活配额"><a href="#激活配额" class="headerlink" title="激活配额"></a>激活配额</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quotaon /dev/sdb1</span><br></pre></td></tr></table></figure><h2 id="验证配额"><a href="#验证配额" class="headerlink" title="验证配额"></a>验证配额</h2><p>(1)创建文件，把文件所有权给用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mail/quotayhy</span><br><span class="line">chown yhy /mail/quotayhy</span><br></pre></td></tr></table></figure><p><code>使用vim创建一个文件，写入任意内容</code>。(只是后面测试用的)</p><p>(2)切换用户，查看结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su - yhy</span><br><span class="line">cd /mail/quotayhy</span><br><span class="line">quota</span><br></pre></td></tr></table></figure><p><img src="/img/raid/4.png" alt=""></p><p>(3)新建文件，查看具体情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=fileyhy bs=100K count=200</span><br></pre></td></tr></table></figure><p>建立一个文件名为fileyhy、每块大小为100K、块数为200的20MB的文件</p><p><img src="/img/raid/5.png" alt=""></p><p>由上图可知，提示超出磁盘配额限制，只能建立10MB大小的文件，并且已经满了。</p><p><img src="/img/raid/6.png" alt=""></p><p>(4)再建立一个1K*200的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=fileyhy1 bs=1K count=200</span><br></pre></td></tr></table></figure><p><img src="/img/raid/7.png" alt=""></p><p>使用<code>ll</code>命令查看文件大小</p><p><img src="/img/raid/8.png" alt=""></p><h2 id="关闭磁盘配额"><a href="#关闭磁盘配额" class="headerlink" title="关闭磁盘配额"></a>关闭磁盘配额</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">quotaoff /dev/sdb1//关闭磁盘配额</span><br><span class="line">rm /etc/mtab//删除配置文件</span><br></pre></td></tr></table></figure><p><span id="inline-blue">删除<code>/ect/fstab</code>里面最后一行</span></p><h1 id="任务二"><a href="#任务二" class="headerlink" title="任务二"></a>任务二</h1><p><code>配置配额Samba服务器</code></p><p><span id="inline-yellow">背景</span>公司有多个部门，有时候同一个部门要占用同一个共享硬盘空间，而文件服务器的空间是有限的，为了限制一个部门过多地占用共享空间而让其他部门的文件无法存放，就要给共享硬盘做一个配额，规定某一个部门最多占用一定的空间。现企业需要限制市场部的用户使用服务器的磁盘空间大小，设置用户yhy的最大使用量为100MB，超过70MB时警告。</p><h2 id="重新设置挂载"><a href="#重新设置挂载" class="headerlink" title="重新设置挂载"></a>重新设置挂载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><p>修改开机自动挂载文件，并设置配额<code>usrquota</code>,<code>groupquota</code></p><p><img src="/img/raid/9.png" alt=""></p><p>然后重启系统来完成上述设置的开机自动挂载，开机后使用<code>mount</code>命令来查看磁盘的挂载情况。</p><p><img src="/img/raid/10.png" alt=""></p><h2 id="对用户和用户组建立配额文件"><a href="#对用户和用户组建立配额文件" class="headerlink" title="对用户和用户组建立配额文件"></a>对用户和用户组建立配额文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quotacheck -cumg /</span><br></pre></td></tr></table></figure><p>系统会在根目录下自动生成两个文件’aquota.group’和’aquota.user’.</p><h2 id="给用户配额"><a href="#给用户配额" class="headerlink" title="给用户配额"></a>给用户配额</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">edquota -u yhy</span><br></pre></td></tr></table></figure><p>参数<code>-u</code>表示为用户配置，若为用户组配置的话则加参数<code>-g</code>即可。具体配置内容如下</p><p><img src="/img/raid/11.png" alt=""></p><p>软限制为70MB，硬限制为100MB</p><h2 id="启动配额项"><a href="#启动配额项" class="headerlink" title="启动配额项"></a>启动配额项</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quotaon -avug</span><br></pre></td></tr></table></figure><h2 id="修改配额"><a href="#修改配额" class="headerlink" title="修改配额"></a>修改配额</h2><p>若想要修改磁盘的配额项必须先使用<code>quotaoff -a</code>命令来停止配额功能，然后才可以修改配置文件，配置完成后再使用<code>quotaon -avug</code>启动配额功能，使修改生效。</p><h2 id="配额测试"><a href="#配额测试" class="headerlink" title="配额测试"></a>配额测试</h2><p>首先使用<code>su - yhy</code>切换到yhy用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=yhy1 bs=1M count=20 //建立大小为20MB的yhy1文件</span><br><span class="line">dd if=/dev/zero of=yhy2 bs=1M count=20 //建立大小为20MB的yhy1文件</span><br><span class="line">dd if=/dev/zero of=yhy3 bs=1M count=20 //建立大小为20MB的yhy1文件</span><br><span class="line">dd if=/dev/zero of=yhy4 bs=1M count=20 //建立大小为20MB的yhy1文件</span><br></pre></td></tr></table></figure><p>当创建第四个文件时候，文件达到80MB，超过了所要求的70MB。系统给出提示警告<code>dm-0: warning, user block quota exceeded.</code></p><p>继续使用命令创建文件，创建一个大小为66MB的文件yhy5,系统会提示超过磁盘配额限制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=yhy5 bs=1M count=66</span><br></pre></td></tr></table></figure><p><img src="/img/raid/12.png" alt=""></p><p>使用<code>du -sh</code>可以查看到用户使用的磁盘空间为98M.</p><h2 id="配置Samba文件"><a href="#配置Samba文件" class="headerlink" title="配置Samba文件"></a>配置Samba文件</h2><p>使用<code>vim /etc/samba/smb.conf</code>命令编辑配置文件，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">workgroup=MYGROUP</span><br><span class="line">security=user</span><br><span class="line">passdb backend=tdbsam</span><br><span class="line">load printers=yes</span><br><span class="line">cups options= raw</span><br><span class="line">[disk]</span><br><span class="line">path= /disk</span><br><span class="line">browseable=yes</span><br><span class="line">writable=yes</span><br><span class="line">guest ok=no</span><br><span class="line">valid users= yhy</span><br></pre></td></tr></table></figure><h2 id="创建-disk目录，并设置相关权限"><a href="#创建-disk目录，并设置相关权限" class="headerlink" title="创建/disk目录，并设置相关权限"></a>创建/disk目录，并设置相关权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /disk</span><br><span class="line">chown yhy.yhy /disk</span><br><span class="line">chmod 700 /disk</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>在windows上使用<code>\\serverIP\disk</code></p><p><img src="/img/raid/13.png" alt=""></p><p>找个大于100MB的文件来测试下，就拿b站后端源码好了，由于超过100MB所以文件并不能全部复制进去。</p><p><img src="/img/raid/14.png" alt=""></p><h2 id="配置企业quota的组限定"><a href="#配置企业quota的组限定" class="headerlink" title="配置企业quota的组限定"></a>配置企业quota的组限定</h2><p>因为在日常的实际工作之中并不会对于单独的某一个用户进行限定，而是给一个组。例如一个部门，每人都有自己的用户名，同时能访问到属于这个部门的共享空间。只要把这些用户名同属于一个组，然后对于组进行限定即可。</p><p>(1)建立用户组以及用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">groupadd markets//建立市场部所在组</span><br><span class="line">useradd -g markets mk1</span><br><span class="line">useradd -g markets mk2</span><br><span class="line">useradd -g markets mk3  //建立所属markets组下的用户mk3</span><br><span class="line">useradd Tom</span><br><span class="line">useradd Jane</span><br><span class="line">useradd John</span><br></pre></td></tr></table></figure><p>(2)设定配额</p><p>使用<code>edquota -g markets</code>命令来编辑用户组markets以及用户Tom、Jane、John的配额文件，设置为跟上面的一样。均为超过70MB警告，最大使用量为100MB。配置好后<code>quotaoff -a</code>关闭磁盘配额功能，再使用<code>quotaon -avug</code>命令开启磁盘的配额功能。</p><p>(3)设定Samba用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">smbpasswd -a mk1</span><br><span class="line">smbpasswd -a mk2</span><br><span class="line">smbpasswd -a mk3</span><br><span class="line">smbpasswd -a Tom</span><br><span class="line">smbpasswd -a Jane</span><br><span class="line">smbpasswd -a John</span><br></pre></td></tr></table></figure><p>(4)配置smb.conf文件</p><p>使用<code>vim /etc/samba/smb.conf</code>命令编辑配置文件，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">workgroup= MYGROUP</span><br><span class="line">security= user</span><br><span class="line">passdb backend= tdbsam</span><br><span class="line">load printers= yes</span><br><span class="line">cups options= raw</span><br><span class="line"></span><br><span class="line">[disk]</span><br><span class="line">path= /disk</span><br><span class="line">browseable=yes</span><br><span class="line">writable=yes</span><br><span class="line">guest ok=no</span><br><span class="line">valid users= Tom,Jane,John，mk1，mk2，mk3</span><br></pre></td></tr></table></figure><p>(5)改变共享目录所属组与权限</p><p>使用<code>chown .markets /disk</code>把共享目录的属组设置为markets,然后使用<code>chmod 770 /disk</code>命令给目录的属组加上完全控制的权限。</p><p>(6)重启服务<code>service smb restart</code></p><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>经过测试发现mk1,mk2,mk3三个用户共享的相同的空间，大小为100MB。Tom,Jane,John三个用户的空间为100MB。</p><p><img src="/img/raid/15.png" alt="">在这里只是为了说明三个用户的空间为100MB，当然你也可以让1个用户使用100MB的空间，只不过其余两个用户无法再往里面写入数据。</p><p><img src="/img/raid/16.png" alt=""></p><p><code>思考</code>在上面我们对markets组进行了配额，那么如果我们同时对属于markets组的用户mk1也进行配额那么会怎么样？</p><h3 id="测试一"><a href="#测试一" class="headerlink" title="测试一"></a>测试一</h3><p><code>设定quota</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">edquota -u mk1</span><br><span class="line">quotaoff -a </span><br><span class="line">quotaon -avug</span><br></pre></td></tr></table></figure><p><img src="/img/raid/17.png" alt="">在这设为30MB警告，最大可用空间为60MB。</p><p><img src="/img/raid/18.png" alt="">)<img src="/img/raid/19.png" alt=""></p><p>在mk1用户使用60M以后mk2只能使用40MB。</p><p><img src="/img/raid/20.png" alt=""></p><h3 id="测试二"><a href="#测试二" class="headerlink" title="测试二"></a>测试二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">edquota -u mk1</span><br><span class="line">quotaoff -a </span><br><span class="line">quotaon -avug</span><br></pre></td></tr></table></figure><p><img src="/img/raid/21.png" alt="">在这设为80MB警告，最大可用空间为110MB。</p><p><img src="/img/raid/22.png" alt="">)<img src="/img/raid/23.png" alt=""></p><p>mk1用户存储文件达到70MB时，系统警告。mk1用户最大的使用空间为100MB。</p><p>可见在对于组以及属于这个组的某个用户做了不同限定以后，系统采用最小化原则，让最小的生效。</p><h1 id="任务三"><a href="#任务三" class="headerlink" title="任务三"></a>任务三</h1><p><code>配置系统用户的磁盘空间限制</code></p><blockquote><p>Linux是一个多任务、多用户的操作系统，一般情况下每个用户都有一个自己的家目录，每个用户对自己的家目录都具有读写的权限，如果管理员不对用户的家目录进行磁盘限制，用户就可能会把磁盘塞满，这是任何一个管理员都不希望看到的，下面我们将采用quota来实现对系统用户使用磁盘空间的限制。</p></blockquote><p>在一台Linux服务器上主要有以下几个用户，分别为wang、user1、user2、user3、user4五个用户。下面对其进行配置修改。</p><h2 id="文件与权限"><a href="#文件与权限" class="headerlink" title="文件与权限"></a>文件与权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home</span><br><span class="line">touch quota.user</span><br><span class="line">touch quota.group</span><br><span class="line">chmod 600 quota.user quota.group</span><br></pre></td></tr></table></figure><h2 id="修改-etc-fstab"><a href="#修改-etc-fstab" class="headerlink" title="修改/etc/fstab"></a>修改/etc/fstab</h2><p>把文件内容中的<code>/dev/sdb1</code>修改为挂载到<code>/home</code>下并且在后面加上quota.user,quota.group.具体内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/sdb /home ext3 defaults,usrquota,grpquota 1 2</span><br></pre></td></tr></table></figure><h2 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h2><p>使用`inin 6’和’reboot‘均可以重启电脑。然后以root身份登录系统</p><h2 id="生成配额文件"><a href="#生成配额文件" class="headerlink" title="生成配额文件"></a>生成配额文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">quotacheck  -ugcv /dev/sdb1  //生成配额文件</span><br><span class="line">edquota -u wang   //为用户配置</span><br></pre></td></tr></table></figure><p>在这里-u表示为用户配置，若想为组配置的话参数改为-g即可。</p><p><img src="/img/raid/24.png" alt=""></p><p>在这里限制用户的使用空间为5MB，最大不可超过10MB，文件总数为2000个，最多不能超过2500个。切换到wang用户，经过测试发现配额成功。</p><h2 id="其余用户配置"><a href="#其余用户配置" class="headerlink" title="其余用户配置"></a>其余用户配置</h2><p>可以使用<code>edquota -p wang -u user1 user2 user3 user4</code>复制wang用户的配置至user1 user2 user3 user4用户。经过测试同样可以发现空间限制是和wang用户一样的。</p><p><span id="inline-blue">quota -u usrname</span>可以用来查看某个用户当前的磁盘使用情况</p><p><span id="inline-yellow">repquota -a</span>显示所有用户当前磁盘使用情况。</p><h1 id="任务四"><a href="#任务四" class="headerlink" title="任务四"></a>任务四</h1><p><code>RAID 5卷的配置与应用</code></p><p>RAID全称Redundant Arrays of Independent Drives,即磁盘冗余阵列。RAID可分为RAID和硬RAID，软RAID是通过软件实现多块硬盘冗余，而硬RAID一般是通过RAID卡来实现RAID。软RAID配置简单，管理也比较灵活，对于中小企业来说是最佳选择。硬RAID往往比较贵，但是性能上有十分大的优势。</p><center>RAID种类与释义对照表</center><table><thead><tr><th align="center">种类</th><th align="center">释义</th></tr></thead><tbody><tr><td align="center">RAID 0</td><td align="center">存取速度最快，没有容错功能（带区卷）</td></tr><tr><td align="center">RAID 1</td><td align="center">完全容错，成本高，硬盘使用率低（镜像卷）</td></tr><tr><td align="center">RAID 3</td><td align="center">写入性能好，没有多任务功能</td></tr><tr><td align="center">RAID 4</td><td align="center">具备多任务及容错功能，但是奇偶校验磁盘驱动器会造成性能瓶颈</td></tr><tr><td align="center">RAID5</td><td align="center">具备多任务及容错功能，写入时有额外开销</td></tr><tr><td align="center">RAID 0+1</td><td align="center">速度快，完全容错，成本高</td></tr></tbody></table><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>使用fdisk /dev/sdc命令给磁盘分区，<code>n</code>代表新建分区,<code>p</code>代表主分区,<code>t</code>表示转换磁盘分区格式,<code>fd</code>表示转换为RAID卷格式。</p><h2 id="创建RAID卷"><a href="#创建RAID卷" class="headerlink" title="创建RAID卷"></a>创建RAID卷</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm --create --auto=yes /dev/md0 --level=5 --raid-devices=4 --spare-devices=1 /dev/sd[b-f]</span><br></pre></td></tr></table></figure><center>mdadm命令参数对照表</center><table><thead><tr><th align="center">参数</th><th align="center">释义</th></tr></thead><tbody><tr><td align="center">–create</td><td align="center">创建RAID</td></tr><tr><td align="center">–auto=/yes /dev/md0</td><td align="center">新建立的软件磁盘陈列设备为md0，md序列号可以为0~9</td></tr><tr><td align="center">–level=5</td><td align="center">磁盘阵列的等级，这里是RAID5</td></tr><tr><td align="center">–raid-devices</td><td align="center">添加作为预备磁盘的块数</td></tr><tr><td align="center">/dev/sd[b-f]</td><td align="center">磁盘阵列所用的设备，还可以写成“/dev/sdb /dev/sdd /dev/sde /dev/sdf”</td></tr></tbody></table><p>上述命令还可缩写为<code>mdadm -C /dev/md0 -l5 -n4 -x1 /dev/sd[b-f]</code></p><h2 id="查看RAID卷"><a href="#查看RAID卷" class="headerlink" title="查看RAID卷"></a>查看RAID卷</h2><p>查看RAID是否创建成功，是否运行正常，有两种方法。</p><p>(1)查看详细信息，使用<code>mdadm --detial /dev/md0</code>来查看raid的详细信息</p><p><img src="/img/raid/25.png" alt=""></p><p>(2)查看简单信息，使用<code>cat /proc/mdstat</code>命令可以较为简单的查看到RAID运行的情况</p><p><img src="/img/raid/26.png" alt=""></p><h2 id="格式化并且挂载和使用创建的RAID"><a href="#格式化并且挂载和使用创建的RAID" class="headerlink" title="格式化并且挂载和使用创建的RAID"></a>格式化并且挂载和使用创建的RAID</h2><p>使用如下命令格式化并且挂载和使用创建的RAID</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext3 /dev/md0 //格式化为ext3</span><br><span class="line">mkdir /mnt/raid5//创建挂载文件夹</span><br><span class="line">mount /dev/md0/ /mnt/raid5//挂载</span><br><span class="line">df -Th</span><br></pre></td></tr></table></figure><p><img src="/img/raid/27.png" alt=""></p><h2 id="开机启动RAID"><a href="#开机启动RAID" class="headerlink" title="开机启动RAID"></a>开机启动RAID</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mdadm --detail --scan&gt; /etc/mdadm.conf </span><br><span class="line">vim /etc/mdadm.conf</span><br></pre></td></tr></table></figure><p>mdadm.conf文件默认是不存在的,需要自己手动创建，其主要作用是系统启动时能够自动加载软RAID，同时方便自己日后管理。创建完成后删除文件中<code>spares=1</code></p><p><span id="inlie-purple">备注</span>:mdadm.conf文件主要由devices和array组成。devices选项指定组成raid的所有设备，array选项指定阵列的设备名、raid级别、阵列中活动设备的数目以及设备的UUID号。</p><h2 id="设置开机自动挂载"><a href="#设置开机自动挂载" class="headerlink" title="设置开机自动挂载"></a>设置开机自动挂载</h2><p>修改/etc下的fstab文件在最后加上如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/md0/mnt/raid5ext3   detaults 0 0</span><br></pre></td></tr></table></figure><h2 id="验证sapre磁盘的功能"><a href="#验证sapre磁盘的功能" class="headerlink" title="验证sapre磁盘的功能"></a>验证sapre磁盘的功能</h2><p>在raid中一块磁盘损坏后，设置的spare盘会立即替换坏掉的磁盘进行raid的重建，以保障数据的安全性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mdadm --manage /dev/md0 --fail /dev/sdd //设置出错状态</span><br><span class="line">mdadm --detial /dev/md0</span><br><span class="line">cat /proc/mdstat</span><br></pre></td></tr></table></figure><p>最终结果如下图所示</p><p><img src="/img/raid/28.png" alt=""></p><p>现在磁盘sdd显示为损坏的，开始设置的预备盘已经激活对其进行替换。下面查看raid5是否可用，向里面写入数据发现可以正常写入。<code>后续步骤</code>移除出错的磁盘，加入一块新的磁盘做备用的spare磁盘。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mdadm --manage /dev/md0 --remove /dev/sdd</span><br><span class="line">mdadm -manage /dev/md0 --add /dev/sdd</span><br><span class="line">mdadm --detail /dev/md0</span><br></pre></td></tr></table></figure><h2 id="关闭RAID"><a href="#关闭RAID" class="headerlink" title="关闭RAID"></a>关闭RAID</h2><p>注释掉刚刚在/dev/fstab中做的配置，使用<code>umount /dev/md0</code>解除挂载。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由器静态路由配置</title>
      <link href="/route.html"/>
      <url>/route.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>学校有新旧两个校区，每个校区是一个独立的局域网，为了使新旧校区能够正常相互通讯，共享资源。每个校区出口利用一台路由器进行连接，两台路由器间学校申请了一条专线进行相连，要求做适当配置实现两个校区的正常相互访问。</p></blockquote><a id="more"></a><h1 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a>技术原理</h1><p>①路由器属于网络层设备，能够根据IP包头的信息，选择一条最佳路径，将数据包转发出去。实现不同网段的主机之间的互相访问。路由器是根据路由表进行选路和转发的。而路由表里就是由一条条路由信息组成。</p><p>②生成路由表主要有两种方法：手工配置和动态配置，即静态路由协议配置和动态路由协议配置。</p><p>③静态路由是指有网络管理员手工配置的路由信息。</p><p>④静态路由除了具有简单、高效、可靠的优点外，它的另一个好处是网络安全保密性高。</p><p>⑤缺省路由可以看做是静态路由的一种特殊情况。当数据在查找路由表时，没有找到和目标相匹配的路由表项时，为数据指定路由。</p><h1 id="实验设备"><a href="#实验设备" class="headerlink" title="实验设备"></a>实验设备</h1><p>pc 2台；Router-PT可扩展路由 2台；Switch_2960 2台；DCE 串口线；直连线；交叉线。</p><img src="/img/route/tu.png"><h1 id="实验设备配置"><a href="#实验设备配置" class="headerlink" title="实验设备配置"></a>实验设备配置</h1><h2 id="配置PC的IP地址"><a href="#配置PC的IP地址" class="headerlink" title="配置PC的IP地址"></a>配置PC的IP地址</h2><p><code>PC1</code> </p><p>   IP:                 192.168.1.2</p><p>   Submask:        255.255.255.0</p><p>   Gateway:        192.168.1.1</p><p><code>PC2</code></p><p>​       IP:                 192.168.2.2</p><p>​       Submask:        255.255.255.0</p><p>​       Gateway:        192.168.2.1</p><p><span id="inline-blue">测试网络连通状态</span></p><p><code>PC1 ping PC2</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 192.168.2.2</span><br></pre></td></tr></table></figure><p>由于没有配置路由器的缘故所以ping不通，下面我们对路由器进行配置</p><h2 id="配置路由器"><a href="#配置路由器" class="headerlink" title="配置路由器"></a>配置路由器</h2><p><code>R1接口地址的配置</code></p><p>进入接口fa 1/0，配置ip地址并开启接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">en   //进入特权模式</span><br><span class="line">conf t//进入配置模式</span><br><span class="line">int fa 1/0//进入 fa 1/0接口</span><br><span class="line">ip add 192.168.1.1 255.255.255.0 //配置IP地址</span><br><span class="line">no shutdown //开启接口</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>进入接口serial 2/0 ，配置ip地址并开启接口，同时设置时钟</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int serial 2/0</span><br><span class="line">ip add 192.168.3.1 255.255.255.0 //此IP为下一跳的地址</span><br><span class="line">no shutdown //开启接口</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>设置时钟的指令：<code>clock rate 64000</code>（必须配置时钟才可通信）</p><p><code>R2接口地址的配置</code></p><p>进入接口fa 1/0，配置ip地址并开启接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">en   //进入特权模式</span><br><span class="line">conf t//进入配置模式</span><br><span class="line">int fa 1/0//进入 fa 1/0接口</span><br><span class="line">ip add 192.168.2.1 255.255.255.0 //配置IP地址</span><br><span class="line">no shutdown //开启接口</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>进入接口serial 2/0 ，配置ip地址并开启接口，同时设置时钟</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int serial 2/0</span><br><span class="line">ip add 192.168.3.2 255.255.255.0 //此IP为下一跳的地址</span><br><span class="line">no shutdown //开启接口</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p><code>配置静态路由：</code></p><p>R1静态路由的配置，并查看路由是否出现在路由表条目中；</p><p>​      <code>Router(config)#ip route 192.168.2.0 255.255.255.0 192.168.3.2</code></p><p>R2静态路由的配置，并查看路由是否出现在路由表条目中；     </p><p><code>Router(config)#ip route 192.168.1.0 255.255.255.0 192.168.3.1</code></p><h1 id="结果验证"><a href="#结果验证" class="headerlink" title="结果验证"></a>结果验证</h1><p><code>PC1 Ping  PC2</code> ping 192.168.2.2 </p><img src="/img/route/ping.png"><p><code>PC1 tracert  PC2</code>  Tracert  192.168.2.2 </p><img src="/img/route/tractert.png"><p>到此配置并验证完毕</p>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这个世界会好的</title>
      <link href="/world.html"/>
      <url>/world.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><iframe width="916" height="515" src="https://www.youtube.com/embed/qrRXW6vjiIk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><center>总之天空还是睛郎的，阳光还是温暖的，世界还是很美好的，这就够了，不是吗?</center>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dream</title>
      <link href="/viedo.html"/>
      <url>/viedo.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><iframe width="916" height="515" src="https://www.youtube.com/embed/g-jwWYX7Jlo" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>利用三层交换机实现VLAN间路由</title>
      <link href="/VLAN-1.html"/>
      <url>/VLAN-1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>某企业有两个主要部门，技术部和销售部，分处于不同的办公室，为了安全和便于管理对两个部门的主机进行了VLAN的划分，技术部和销售部分处于不同的VLAN，先由于业务的需求需要销售部和技术部的主机能够相互访问，获得相应的资源，两个部门的交换机通过一台三层交换机进行了连接。</p></blockquote><a id="more"></a><h1 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a>技术原理</h1><p>三层交换机具备网络层的功能，实现VLAN相互访问的原理是：利用三层交换机的路由功能，通过识别数据包的IP地址，查找路由表进行选路转发，三层交换机利用直连路由可以实现不同VLAN之间的相互访问。三层交换机给接口配置IP地址。采用SVI（交换虚拟接口）的方式实现VLAN间互连。SVI是指为交换机中的VLAN创建虚拟接口，并且配置IP地址。</p><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><p>（1）在二层交换机上配置VLAN2、VLAN3，分别将端口2、端口3划分给VLAN2、VLAN3。</p><p>（2）将二层交换机与三层交换机相连的端口fa 0/1都定义为tag Vlan模式。</p><p>（3）在三层交换机上配置VLAN2、VLAN3，此时验证二层交换机VLAN2、VLAN3下的主机之间不能相互通信。</p><p>（4）设置三层交换机VLAN间的通信，创建VLAN2,VLAN3的虚接口，并配置虚接口VLAN2、VLAN3的IP地址。</p><p>（5）查看三层交换机路由表。</p><p>（6）将二层交换机VLAN2、VLAN3下的主机默认网关分别设置为相应虚拟接口的IP地址。</p><p>（7）验证二层交换机VLAN2,VALN3下的主机之间可以相互通信。</p><blockquote><p>首先在三层交换机上分别设置各VLAN的接口IP地址。三层交换机将vlan做为一种接口对待，就像路由器上的一样，再在各接入VLAN的计算机上设置与所属VLAN的网络地址一致的IP地址，并且把默认网关设置为该VLAN的接口地址。这样，所有的VLAN也可以互访了。</p></blockquote><h2 id="建立拓扑图"><a href="#建立拓扑图" class="headerlink" title="建立拓扑图"></a>建立拓扑图</h2><p><img src="/img/st/6.png" alt=""></p><h2 id="设置IP地址"><a href="#设置IP地址" class="headerlink" title="设置IP地址"></a>设置IP地址</h2><p>PC1 </p><p>​       IP:                 192.168.1.2</p><p>​       Submark:        255.255.255.0</p><p>​       Gateway:        192.168.1.1</p><p>PC2</p><p>​       IP:                 192.168.2.2</p><p>​       Submark:        255.255.255.0</p><p>​       Gateway:        192.168.2.1    </p><p>PC3</p><p>​       IP:                 192.168.1.3</p><p>​       Submark:        255.255.255.0</p><p>​       Gateway:        192.168.1.1</p><h2 id="配置两层交换机"><a href="#配置两层交换机" class="headerlink" title="配置两层交换机"></a>配置两层交换机</h2><p><span id="inline-blue">s2960</span></p><p>Switch&gt;en</p><p>​       Switch#conf t</p><p>​       Switch(config )#  vlan2        //新建vlan2</p><p>​       Switch(config-vlan)#exit</p><p>​       Switch(config )#   vlan3       //新建vlan3</p><p>​       Switch(config-vlan)#exit      </p><p>​       Switch(config )#    interf fa 0/2        //进入端口 fa 0/2</p><p>​       Switch(config-if)#   switch access vlan 2       //将端口设置为access端口，并划分到vlan 2下</p><p>​       Switch(config-if)#exit</p><p>​       Switch(config )# int fa  0/3          //进入端口 fa 0/3</p><p>​       Switch(config-if)#  switch access vlan 3               //定义接口工作模式为access，并划分到vlan 3下</p><p>​       Switch(config-if)#exit</p><p>​       Switch(config )#      int fa 0/1      //进入端口 fa 0/1</p><p>​       Switch(config-if)#   switch mode trunk         //定义这个接口的工作模式为trunk</p><p>​       Switch(config-if)#end</p><p>​       Switch#show vlan</p><p><span id="inline-purple">S3560</span></p><p>Switch&gt;en</p><p>​       Switch#conf t</p><p>​       Switch(config )#  vlan 2     //新建vlan 2</p><p>​       Switch(config-vlan)#exit</p><p>​       Switch(config )#    vlan 3  //新建vlan 3</p><p>​       Switch(config-vlan)#exit</p><p>​       Switch(config )#  int fa 0/1入0模块第1端口</p><p>​       Switch(config-if)#switchport trunk encapsulation dot1q //给这个接口的trunk封装为802.1Q的帧格式</p><p>​       Switch(config-if)#  switch mode trunk作模式为trunk</p><p>​       Switch(config-if)#exit</p><p>​       Switch(config )#   int fa 0/2入0模块第2端口</p><p>​       Switch(config-if)#   sw acc vlan 2   进入vlan 2</p><p>​       Switch(config-if)#exit   </p><p><code>此时验证二层交换机下的不同vlan间主机不能通信</code></p><p><code>PC1 Ping PC2</code></p><p><img src="/img/st/7.png" alt=""></p><p><code>验证同一vlan下可以通信</code></p><p><code>PC1 Ping PC3</code></p><p><img src="/img/st/8.png" alt=""></p><p>Switch(config )#  int vlan 2   //进入vlan2 </p><p>​       Switch(config-if)#  ip add 192.168.1.1 255.255.255.0       //配置IP地址</p><p>​       Switch(config-if)#   no shutdown   //开启该端口</p><p>​       Switch(config-if)#exit</p><p>​       Switch(config )#     int vlan 3      //进入vlan3</p><p>​       Switch(config-if)#      ip add 192.168.2.1  255.255.255.0//配置IP地址</p><p>​       Switch(config-if)#no shtudown      //开启该端口</p><p>​       Switch(config-if)#end</p><p>​       Switch#show ip route  //显示路由表</p><p>​       Switch#show vlan   //显示vlan信息</p><p>​      Switch#conf t   //进入配置模式</p><p>​      Switch(config)# ip  routing //开启路由功能</p><h1 id="验证结果"><a href="#验证结果" class="headerlink" title="验证结果"></a>验证结果</h1><p><code>PC1 Ping PC3</code></p><p><img src="/img/st/9.png" alt=""></p><p><code>PC1 Ping PC2</code></p><p><img src="/img/st/10.png" alt=""></p><p>到此已经配置并验证完毕！！！</p>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vlan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置与应用DNS服务</title>
      <link href="/DNS.html"/>
      <url>/DNS.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>DNS(Domain Name System,域名系统)用于命名组织到域层次结构中的计算机和网络服务。在Internet上域名与IP地址之间是一对一(或者多对一)的，域名虽然便于人们记以，但是机器之间只能互相认识IP地址，他们之间的转换工作称为域名解析，域名解析需要由专门的服务器来完成，DNS就是进行域名解析的服务器。</p></blockquote><a id="more"></a><h1 id="任务一"><a href="#任务一" class="headerlink" title="任务一"></a>任务一</h1><p><code>安装与配置基本的DNS服务器</code></p><p><span id="inline-blue">背景</span></p><p>为公司配置一台DNS服务器，其IP地址为192.168.136.156，具体要求如下。</p><p>设置该区域的SOA记录，主域名服务器为ns.yhy.com。维护该域的管理员邮箱地址为<a href="mailto:admin@yhy.com" target="_blank" rel="noopener">admin@yhy.com</a>,当前区域信息的版本号、刷新时间等为默认值。</p><p>该区域的ns记录：ns.yhy.com</p><p>该区域的A记录：主机名为ns，对应的解析IP为192.168.136.100</p><p>该区域的A记录：主机名为web1，对应的解析IP为192.168.136.100</p><p>该区域的A记录：主机名为web2，对应的解析IP为192.168.136.100</p><p>该区域的nx记录：对应的解析IP为mail.yhy.com,优先级为5</p><p>该区域的别名记录：别名为mail，对应的主机为ns</p><p>该区域的别名记录：别名为www，对应的主机为ns</p><p>该区域的别名记录：别名为ftp，对应的主机为ns</p><p>并对应作反向解析。</p><h2 id="设置服务器IP地址"><a href="#设置服务器IP地址" class="headerlink" title="设置服务器IP地址"></a>设置服务器IP地址</h2><p>使用setup命令或者<code>vim /etc/sysconfig/network-scripts/ifcfg-eth0</code>配置完成后，<code>service network restart</code>重启网络</p><h2 id="安装DNS软件"><a href="#安装DNS软件" class="headerlink" title="安装DNS软件"></a>安装DNS软件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install bind -y</span><br><span class="line">yum install bind-chroot -y</span><br></pre></td></tr></table></figure><h2 id="备份配置文件"><a href="#备份配置文件" class="headerlink" title="备份配置文件"></a>备份配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -p /etc/named.conf /etc/named.conf.bak   #加参数p表示权限不变</span><br><span class="line">vim /etc/named.conf</span><br></pre></td></tr></table></figure><p><img src="/img/dns/named.png" alt=""></p><h2 id="备份编辑区域文件"><a href="#备份编辑区域文件" class="headerlink" title="备份编辑区域文件"></a>备份编辑区域文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -p /etc/named.rfc1912.zones /etc/named.rfc1912.zones.bak</span><br><span class="line">vim /etc/named.rfc1912.zones</span><br></pre></td></tr></table></figure><p><img src="/img/dns/rfc.png" alt=""></p><h2 id="建立正向查找域文件"><a href="#建立正向查找域文件" class="headerlink" title="建立正向查找域文件"></a>建立正向查找域文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /var/named/</span><br><span class="line">cp -p named.localhost yhy.z</span><br><span class="line">vim yhy.z</span><br></pre></td></tr></table></figure><p><img src="/img/dns/z.png" alt=""></p><h2 id="建立反向查找域文件"><a href="#建立反向查找域文件" class="headerlink" title="建立反向查找域文件"></a>建立反向查找域文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -p yhy.z yhy.f</span><br><span class="line">vim yhy.f</span><br></pre></td></tr></table></figure><p><img src="/img/dns/f.png" alt=""></p><h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service named restart  #重启</span><br><span class="line">chkconfig named on     #开机启动</span><br></pre></td></tr></table></figure><p><span id="inline-blue">注意</span>此处需要关闭防火墙<code>service iptables stop</code></p><h2 id="客户机验证"><a href="#客户机验证" class="headerlink" title="客户机验证"></a>客户机验证</h2><p>在客户机中配置DNS指向DNS服务器，配置客户机DNS。使用<code>vim /etc/resolv.conf</code>在文档尾部加入如下内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nameserver 192.168.136.156</span><br></pre></td></tr></table></figure><p><span id="inline-purple">正向查找域验证结果</span></p><p><img src="/img/dns/zheng.png" alt=""></p><p>反向查找域验证结果</p><p><img src="/img/dns/fan.png" alt=""></p><p><code>至此，DNS服务器搭建测试完毕。</code></p><h1 id="任务二"><a href="#任务二" class="headerlink" title="任务二"></a>任务二</h1><p><code>搭建辅助作用域DNS服务器</code></p><p>DNS辅助服务器（slave)是一种容错设计，考虑的是一旦DNS主服务器出现故障或因负载太重无法及时响应客户机请求，辅助服务器将挺身而出为主服务器排忧解难。辅助服务器的区域数据都是从主服务器复制而来的，因此辅助服务器的数据都是只读的。当然，如果有必要，可以直接将辅助服务器升级为主服务器。</p><p><code>搭建辅助服务器的好处</code></p><p>(1)辅助DNS服务器提供区域冗余，能够在这个区域的主服务器停止响应的情况下为客户端解析这个区域的DNS名称。</p><p>(2)辅助DNS服务器可以减少DNS网络通信量，采用分布式结构，在低速广域网链路中添加辅助DNS服务器能有效地管理和减少网络通信量</p><p>(3)辅助DNS服务器可以用于减少区域的主服务器的负载。</p><p><span id="inline-pink">要求</span>搭建一台辅助DNS服务器，其具体的参数配置如下：域名为yhy.com;主区域服务器IP为192.168.30.128；辅助区域IP为192.168.30.129.</p><h2 id="设置服务器IP地址-1"><a href="#设置服务器IP地址-1" class="headerlink" title="设置服务器IP地址"></a>设置服务器IP地址</h2><p>使用setup命令或者<code>vim /etc/sysconfig/network-scripts/ifcfg-eth0</code>配置完成后，<code>service network restart</code>重启网络</p><h2 id="备份配置文件-1"><a href="#备份配置文件-1" class="headerlink" title="备份配置文件"></a>备份配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -p /etc/named.conf /etc/named.conf.bak   #加参数p表示权限不变</span><br><span class="line">vim /etc/named.conf</span><br></pre></td></tr></table></figure><p><img src="/img/dns/name.png" alt=""></p><h2 id="备份编辑区域文件-1"><a href="#备份编辑区域文件-1" class="headerlink" title="备份编辑区域文件"></a>备份编辑区域文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -p /etc/named.rfc1912.zones /etc/named.rfc1912.zones.bak</span><br><span class="line">vim /etc/named.rfc1912.zones</span><br></pre></td></tr></table></figure><p><img src="/img/dns/rfc1.png" alt=""></p><h2 id="建立正向查找域文件-1"><a href="#建立正向查找域文件-1" class="headerlink" title="建立正向查找域文件"></a>建立正向查找域文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /var/named/</span><br><span class="line">cp -p named.localhost yhy.z</span><br><span class="line">vim yhy.z</span><br></pre></td></tr></table></figure><p><img src="/img/dns/42.png" alt=""></p><h2 id="重启主服务器"><a href="#重启主服务器" class="headerlink" title="重启主服务器"></a>重启主服务器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service named restart</span><br></pre></td></tr></table></figure><h2 id="配置辅助服务器配置文件"><a href="#配置辅助服务器配置文件" class="headerlink" title="配置辅助服务器配置文件"></a>配置辅助服务器配置文件</h2><p>辅助服务器与主服务器配置一样，区别就是不需要再options中加allow-transfer{}</p><p><img src="/img/dns/43.png" alt=""></p><h2 id="备份编辑区域文件-2"><a href="#备份编辑区域文件-2" class="headerlink" title="备份编辑区域文件"></a>备份编辑区域文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -p /etc/named.rfc1912.zones /etc/named.rfc1912.zones.bak</span><br><span class="line">vim /etc/named.rfc1912.zones</span><br></pre></td></tr></table></figure><p><img src="/img/dns/44.png" alt=""></p><blockquote><p>此处要将默认的allow-update{none；}；删除文件的位置默认在slave下，也可在其他目录下。但是必须保证目录所有者和所属组是<code>named</code>，否则无法从主区域传输DNS信息。</p></blockquote><h2 id="查看辅助服务器的复制结果"><a href="#查看辅助服务器的复制结果" class="headerlink" title="查看辅助服务器的复制结果"></a>查看辅助服务器的复制结果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service named restart</span><br><span class="line">cd /var/named/slaves</span><br><span class="line">ls -l</span><br><span class="line">cat yhy.z</span><br></pre></td></tr></table></figure><p>当重启服务器后，等待几分钟。</p><p><img src="/img/dns/45.png" alt=""></p><p>此时我们可以使用<code>nslookup</code>进行验证，这里我在Linux以及win7下均做了验证截图如下</p><p><span id="inline-blue">Windows7</span></p><p><img src="/img/dns/47.png" alt=""></p><p><span id="inline-pink">Linux</span></p><p><img src="/img/dns/48.png" alt=""></p><p>至此已经验证完成(๑′ᴗ‵๑)Ｉ Lᵒᵛᵉᵧₒᵤ❤，继续进行下一步操作。</p><h2 id="修改主服务器配置文件"><a href="#修改主服务器配置文件" class="headerlink" title="修改主服务器配置文件"></a>修改主服务器配置文件</h2><p>修改主服务器配置文件，以做更新测试。将SOA记录中的序列号增大，否则辅助服务器无法得知主区域记录发生了改变。</p><p><img src="/img/dns/49.png" alt=""></p><h2 id="客户机测试"><a href="#客户机测试" class="headerlink" title="客户机测试"></a>客户机测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service named restart</span><br><span class="line">cd /var/named/slaves</span><br><span class="line">ls -l</span><br><span class="line">cat yhy.z</span><br></pre></td></tr></table></figure><p>当重启服务器后，等待几分钟。发现文件大小发生了变化，内容也发生了变化。</p><p><img src="/img/dns/46.png" alt=""></p><p>使用<code>nslookup</code>测试新增加的记录。</p><p><span id="inline-blue">Windows7</span></p><p><img src="/img/dns/50.png" alt=""></p><p><span id="inline-pink">Linux</span></p><p><img src="/img/dns/51.png" alt=""></p><h1 id="任务三"><a href="#任务三" class="headerlink" title="任务三"></a>任务三</h1><p><code>搭建转发与委派DNS服务器</code></p><p><span id="inline-blue">背景</span>某公司总部在北京，主域名为yhy.com,北京的子域bj.yhy.com也建在主域的DNS服务器上,而要想远在上海的子域sh.yhy.com也能够正常解析主区域的域名，则需要通过转发来实现，而在北京的主机想通过主DNS查询到子域的域名则需要通过委派来实现，具体工程拓扑图如下所示。</p><p><code>备注</code>:</p><p>(1)转发:可以分为完全转发和条件转发</p><p>①完全转发:将客户端所有DNS查询以递归的方式转发到指定的DNS服务器。</p><p>②条件转发：将指定的DNS拓展名的查询转发到指定的DNS服务器。</p><p>(2)委派：在Bind中可以将某个子域的查询工作委派给另一个DNS服务器完成。</p><h2 id="修改主配置文件"><a href="#修改主配置文件" class="headerlink" title="修改主配置文件"></a>修改主配置文件</h2><p>这里如任务一中的一样，修改DNS配置文件<code>/etc/named.conf</code>，使其能够对外提供DNS查询服务。</p><p><img src="/img/dns/named3.png" alt=""></p><h2 id="定义正向查找区域文件"><a href="#定义正向查找区域文件" class="headerlink" title="定义正向查找区域文件"></a>定义正向查找区域文件</h2><p>编辑<code>/etc/named.rfc1912.zones</code>文件，添加如下图所示内容</p><p><img src="/img/dns/rfc3.png" alt=""></p><h2 id="新建区域文件"><a href="#新建区域文件" class="headerlink" title="新建区域文件"></a>新建区域文件</h2><p>使用如下命令创建北京主域yhy.com的正向查找区域文件,具体内容如图所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/named/yhy.z</span><br></pre></td></tr></table></figure><p><img src="/img/dns/yhy.png" alt=""></p><p>使用如下命令创建北京子域bj.yhy.com的正向查找区域文件,具体内容如图所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/named/bj.yhy.z</span><br></pre></td></tr></table></figure><p><img src="/img/dns/bjyhy.png" alt=""></p><h2 id="重启服务-1"><a href="#重启服务-1" class="headerlink" title="重启服务"></a>重启服务</h2><p>使用<code>service named restart</code>命令重启DNS服务，使修改的配置生效。</p><h2 id="为子域名设置转发"><a href="#为子域名设置转发" class="headerlink" title="为子域名设置转发"></a>为子域名设置转发</h2><h3 id="修改主配置文件-1"><a href="#修改主配置文件-1" class="headerlink" title="修改主配置文件"></a>修改主配置文件</h3><p>为子域名设置转发，修改DNS配置文件<code>/etc/named.conf</code>。</p><p><img src="/img/dns/named4.png" alt=""></p><p><span id="inline-pink">完全转发</span></p><h3 id="定义正向查找区域文件-1"><a href="#定义正向查找区域文件-1" class="headerlink" title="定义正向查找区域文件"></a>定义正向查找区域文件</h3><p>编辑<code>/etc/named.rfc1912.zones</code>文件，添加如下图所示内容</p><p><img src="/img/dns/rfc4.png" alt=""></p><p><span id="inline-blue">条件转发</span></p><h3 id="新建区域文件-1"><a href="#新建区域文件-1" class="headerlink" title="新建区域文件"></a>新建区域文件</h3><p>使用如下命令创建上海子域sh.yhy.com的正向查找区域文件,具体内容如图所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/named/sh.yhy.z</span><br></pre></td></tr></table></figure><p><img src="/img/dns/shyhy.png" alt=""></p><h3 id="重启服务-2"><a href="#重启服务-2" class="headerlink" title="重启服务"></a>重启服务</h3><p>使用<code>service named restart</code>命令重启DNS服务，使修改的配置生效。</p><h2 id="子域的测试配置"><a href="#子域的测试配置" class="headerlink" title="子域的测试配置"></a>子域的测试配置</h2><p>修改测试机的IP地址为<code>192.168.30.130</code>,DNS改为<code>192.168.30.129</code>，即子域名的DNS服务器的IP地址。</p><p><img src="/img/dns/pei.png" alt=""></p><h2 id="子域的查询测试"><a href="#子域的查询测试" class="headerlink" title="子域的查询测试"></a>子域的查询测试</h2><p><span id="inline-yellow">注意</span>在测试之前关掉服务器上的防火墙以及selinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">serveice iptables stop</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p><img src="/img/dns/ce.png" alt=""></p><h2 id="委派设置"><a href="#委派设置" class="headerlink" title="委派设置"></a>委派设置</h2><p>在主区域的正向查找域文件内添加如下图所示的内容，即对sh.yhy.com域的查询委派为上海子域192.168.30.129</p><p><img src="/img/dns/wei.png" alt=""></p><p>在这里还需给主域以及子域的named.conf中的两行内容做如下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnssec-enable no;</span><br><span class="line">dnssec-validation no;</span><br></pre></td></tr></table></figure><p>之前为yes，这里把它改为no。</p><p>然后<code>service named restart</code>重启DNS服务</p><h2 id="委派测试设置"><a href="#委派测试设置" class="headerlink" title="委派测试设置"></a>委派测试设置</h2><p><img src="/img/dns/jie.png" alt=""></p><h2 id="测试机测试"><a href="#测试机测试" class="headerlink" title="测试机测试"></a>测试机测试</h2><p>在cmd下用nslookup来进行测试，最终结果如下图所示。</p><p><img src="/img/dns/ces.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于遗传算法和非线性规划的函数寻优问题</title>
      <link href="/matlab.html"/>
      <url>/matlab.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本篇文章介绍基于遗传算法和非线性规划的函数寻优算法，目前对于此算法还没有完全的理解掌握，或许有的地方讲的并不是十分正确十分清除，欢迎指正(●’◡’●)<a id="more"></a></p><h1 id="非线性规划"><a href="#非线性规划" class="headerlink" title="非线性规划"></a>非线性规划</h1><p><span id="inline-blue">起源</span>非线性规划是20世纪50年代形成的一门新兴学科。1951年库恩和塔克发表的关于最优线性条件（库恩.塔克条件）的论文是非线性规划诞生的标志。</p><h1 id="非线性规划函数"><a href="#非线性规划函数" class="headerlink" title="非线性规划函数"></a>非线性规划函数</h1><p>函数fmincon是MATLAB最优化工具箱中求解非线性规划问题的函数。从一个预估值出发，搜素约束条件下非线性多元函数的最小值。</p><p>函数fmincon的约束条件为</p><p><img src="/img/matlab/gongshi.png" alt=""></p><p>其中，x、b、beq、lb、和ub是矢量；A和Aeq为矩阵；c(x)和ceq(x)返回矢量的函数；f(x)、e(x)和ceq(x)是非线性函数</p><p>函数fmincon的基本用法为</p><p>x=fmincon(fun,x0,A,b)</p><p>x=fmincon(fun,x0,A,b,Aeq,beq)</p><p>x=fmincon(fun,x0,A,b,Aeq,beq,lb,ub)</p><p>x=fmincon(fun,x0,A,b,Aeq,beq,lb,ub,nonlcon)</p><p>x=fmincon(fun,x0,A,b,Aeq,beq,lb,ub,nonlcon,options)</p><p>其中，nonlcon为非线性约束条件；lb和ub分别为x的下界和上界。当函数输入参数不包括A,b,Aeq,beq时，默认A=0，b=0,Aeq=[],beq=[].x0为x的初值。</p><h1 id="案例背景"><a href="#案例背景" class="headerlink" title="案例背景"></a>案例背景</h1><p>采用遗传算法和非线性规划的方法求解如下函数的最小值：<br>$$<br>f(x)=-5sinx1.sinx2.sinx3.sinx4.sinx5-sin5x1.5x2.5x3.5x4.5x5+8<br>$$<br>其中，x1、x2、x3、x4、x5是0~9π之间的实数。其函数最小值为-2，最小值的位置为（π/2，π/2，π/2，π/2）</p><p>非线性规划遗传算法的算法流程图如下所示</p><p><img src="/img/matlab/lc.png" alt=""></p><h1 id="遗传算法实现"><a href="#遗传算法实现" class="headerlink" title="遗传算法实现"></a>遗传算法实现</h1><h2 id="种群初始化"><a href="#种群初始化" class="headerlink" title="种群初始化"></a>种群初始化</h2><p>由于遗传算法不能直接除了问题空间的参数，因此必须通过编码把可行解表示成遗传空间或者染色体个体。常用的编码方法有位串编码、Grey编码、实数编码(浮点法编码)、多级参数编码、有序串编码、结构式编码等。</p><h2 id="适应度函数"><a href="#适应度函数" class="headerlink" title="适应度函数"></a>适应度函数</h2><p>适应度函数是用来区分群体中个体好坏的标准，是进行自然选择的唯一依据，一般是由目标函数加以变换得到的。本案例是求函数的最小值，把函数值的倒数作为个体的适应度值。函数值越小的个体，适应度值越大，个体越优。适应度计算函数为<br>$$<br>F=f(x)<br>$$</p><h2 id="选择操作"><a href="#选择操作" class="headerlink" title="选择操作"></a>选择操作</h2><p>选择操作从就旧的群体中以一定的概率选择优良的个体组成新的种群，以繁殖下一代个体。个体被选中的概率跟适应度值有关，个体适应度值越高，被选中的概率越大。遗传算法选择操作有轮盘赌法、锦标赛法等多种方法，此处选择轮盘赌法，即基于适应度比例的选择策略，个体i被选中的概率为<br>$$<br>p_i= \frac{F_i}{\sum_{j=1}^N F_j }<br>$$</p><p>$$<br>其中F_i为个体i的适应度值；N为种群个体数目。<br>$$</p><h2 id="交叉操作"><a href="#交叉操作" class="headerlink" title="交叉操作"></a>交叉操作</h2><p>交叉操作是指从种群中随机选择两个个体，通过染色体的交换组合，把父串的优秀特征遗传给子串，从而产生新的优秀个体。由于个体采用实数编码，所以交叉操作采用实数交叉操作法，第k个染色体a<sub>k</sub>和第l个染色体a<sub>l</sub>在j位的交叉操作方法为：</p><p>a<sub>kj</sub>=a<sub>ij</sub>(1-b)+a<sub>lj</sub>b </p><p>a<sub>lj</sub>=a<sub>lj</sub>(1-b)+a<sub>kj</sub>b</p><p>其中b是[0,1]之间的随机数。</p><h2 id="变异操作"><a href="#变异操作" class="headerlink" title="变异操作"></a>变异操作</h2><p>变异操作的主要目的是维持种群的多样性。变异操作从种群中随机选取一个个体，选择个体中的一点进行变异以产生更优秀的个体。第i个个体的第j个基因a<sub>ij</sub>进行的变异操作方法为：<br>$$<br>\begin{aligned}<br>f_Y(y) &amp; = f_X[h(y)]|h’(y)| \[2ex]<br>&amp; = f_X[h(y)]h’(y) \[2ex]<br>&amp; = \frac{1}{\theta}e^{-\frac{x}{\theta}}[\frac{dx}{dy}(-\frac{\theta}{ln(1-y)})] \[2ex]<br>&amp; = \frac{1}{\theta}e^{-\frac{-\frac{\theta}{ln(1-y)}}{\theta}}\frac{\theta}{1-y} \[2ex]<br>&amp; = \frac{1}{\theta}e^{ln(1-y)}\frac{\theta}{1-y} \[2ex]<br>&amp; = \frac{1-y}{\theta}\frac{\theta}{1-y} \[2ex]<br>&amp; = 1<br>\end{aligned}<br>$$</p><h1 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h1><p>适应度函数：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">fun</span><span class="params">(x)</span></span></span><br><span class="line"></span><br><span class="line">y=<span class="number">-5</span>*<span class="built_in">sin</span>(x(<span class="number">1</span>))*<span class="built_in">sin</span>(x(<span class="number">2</span>))*<span class="built_in">sin</span>(x(<span class="number">3</span>))*<span class="built_in">sin</span>(x(<span class="number">4</span>))*<span class="built_in">sin</span>(x(<span class="number">5</span>))-<span class="built_in">sin</span>(<span class="number">5</span>*x(<span class="number">1</span>))*<span class="built_in">sin</span>(<span class="number">5</span>*x(<span class="number">2</span>))*<span class="built_in">sin</span>(<span class="number">5</span>*x(<span class="number">3</span>))*<span class="built_in">sin</span>(<span class="number">5</span>*x(<span class="number">4</span>))*<span class="built_in">sin</span>(<span class="number">5</span>*x(<span class="number">5</span>))+<span class="number">8</span>;</span><br></pre></td></tr></table></figure><p>选择操作</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ret</span>=<span class="title">Select</span><span class="params">(individuals,sizepop)</span></span></span><br><span class="line"><span class="comment">% 本函数对每一代种群中的染色体进行选择，以进行后面的交叉和变异</span></span><br><span class="line"><span class="comment">% individuals input : 种群结构体信息</span></span><br><span class="line"><span class="comment">% sizepop input : 种群规模100个种群</span></span><br><span class="line"><span class="comment">% opts input : 选择方法的选择</span></span><br><span class="line"><span class="comment">% ret output : 经过选择后的种群</span></span><br><span class="line">individuals.fitness= <span class="number">1.</span>/(individuals.fitness);<span class="comment">%%根据适应度值归一</span></span><br><span class="line">sumfitness=sum(individuals.fitness);</span><br><span class="line">sumf=individuals.fitness./sumfitness;</span><br><span class="line">index=[];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:sizepop <span class="comment">%转sizepop次轮盘</span></span><br><span class="line">    pick=<span class="built_in">rand</span>;<span class="comment">%%防止初始化为0    </span></span><br><span class="line">    <span class="keyword">while</span> pick==<span class="number">0</span></span><br><span class="line">        pick=<span class="built_in">rand</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:sizepop</span><br><span class="line">        pick=pick-sumf(<span class="built_in">j</span>);</span><br><span class="line">        <span class="keyword">if</span> pick&lt;<span class="number">0</span></span><br><span class="line">            index=[index <span class="built_in">j</span>];</span><br><span class="line">            <span class="keyword">break</span>; <span class="comment">%寻找落入的区间，此次转轮盘选中了染色体i，注意：在转sizepop次轮盘的过程中，有可能会重复选择某些染色体</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">individuals.chrom=individuals.chrom(index,:);</span><br><span class="line">individuals.fitness=individuals.fitness(index);</span><br><span class="line">ret=individuals;</span><br></pre></td></tr></table></figure><p>交叉操作</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ret</span>=<span class="title">Cross</span><span class="params">(pcross,lenchrom,chrom,sizepop,bound)</span></span></span><br><span class="line"><span class="comment">%本函数完成交叉操作</span></span><br><span class="line"><span class="comment">% pcorss                input  : 交叉概率</span></span><br><span class="line"><span class="comment">% lenchrom              input  : 染色体的长度</span></span><br><span class="line"><span class="comment">% chrom                 input  : 染色体群</span></span><br><span class="line"><span class="comment">% sizepop               input  : 种群规模</span></span><br><span class="line"><span class="comment">% ret                   output : 交叉后的染色体</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:sizepop </span><br><span class="line">    </span><br><span class="line">    <span class="comment">% 随机选择两个染色体进行交叉</span></span><br><span class="line">    pick=<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">while</span> prod(pick)==<span class="number">0</span></span><br><span class="line">        pick=<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    index=<span class="built_in">ceil</span>(pick.*sizepop);</span><br><span class="line">    <span class="comment">% 交叉概率决定是否进行交叉</span></span><br><span class="line">    pick=<span class="built_in">rand</span>;</span><br><span class="line">    <span class="keyword">while</span> pick==<span class="number">0</span></span><br><span class="line">        pick=<span class="built_in">rand</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> pick&gt;pcross</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> flag==<span class="number">0</span></span><br><span class="line">        <span class="comment">% 随机选择交叉位置</span></span><br><span class="line">        pick=<span class="built_in">rand</span>;</span><br><span class="line">        <span class="keyword">while</span> pick==<span class="number">0</span></span><br><span class="line">            pick=<span class="built_in">rand</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        pos=<span class="built_in">ceil</span>(pick.*sum(lenchrom)); <span class="comment">%随机选择进行交叉的位置，即选择第几个变量进行交叉，注意：两个染色体交叉的位置相同</span></span><br><span class="line">        pick=<span class="built_in">rand</span>; <span class="comment">%交叉开始</span></span><br><span class="line">        v1=chrom(index(<span class="number">1</span>),pos);</span><br><span class="line">        v2=chrom(index(<span class="number">2</span>),pos);</span><br><span class="line">        chrom(index(<span class="number">1</span>),pos)=pick*v2+(<span class="number">1</span>-pick)*v1;</span><br><span class="line">        chrom(index(<span class="number">2</span>),pos)=pick*v1+(<span class="number">1</span>-pick)*v2; <span class="comment">%交叉结束</span></span><br><span class="line">        flag1=test(lenchrom,bound,chrom(index(<span class="number">1</span>),:));  <span class="comment">%检验染色体1的可行性</span></span><br><span class="line">        flag2=test(lenchrom,bound,chrom(index(<span class="number">2</span>),:));  <span class="comment">%检验染色体2的可行性</span></span><br><span class="line">        <span class="keyword">if</span>   flag1*flag2==<span class="number">0</span></span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span>    <span class="comment">%如果两个染色体不是都可行，则重新交叉</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ret=chrom;</span><br></pre></td></tr></table></figure><p>变异操作</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ret</span>=<span class="title">Mutation</span><span class="params">(pmutation,lenchrom,chrom,sizepop,pop,bound)</span></span></span><br><span class="line"><span class="comment">% 本函数完成变异操作</span></span><br><span class="line"><span class="comment">% pcorss                input  : 变异概率</span></span><br><span class="line"><span class="comment">% lenchrom              input  : 染色体长度</span></span><br><span class="line"><span class="comment">% chrom                 input  : 染色体群</span></span><br><span class="line"><span class="comment">% sizepop               input  : 种群规模</span></span><br><span class="line"><span class="comment">% pop                   input  : 当前种群的进化代数和最大的进化代数信息</span></span><br><span class="line"><span class="comment">% ret                   output : 变异后的染色体</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:sizepop  </span><br><span class="line">    <span class="comment">% 随机选择一个染色体进行变异</span></span><br><span class="line">    pick=<span class="built_in">rand</span>;</span><br><span class="line">    <span class="keyword">while</span> pick==<span class="number">0</span></span><br><span class="line">        pick=<span class="built_in">rand</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    index=<span class="built_in">ceil</span>(pick*sizepop);</span><br><span class="line">    <span class="comment">% 变异概率决定该轮循环是否进行变异</span></span><br><span class="line">    pick=<span class="built_in">rand</span>;</span><br><span class="line">    <span class="keyword">if</span> pick&gt;pmutation</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> flag==<span class="number">0</span></span><br><span class="line">        <span class="comment">% 变异位置</span></span><br><span class="line">        pick=<span class="built_in">rand</span>;</span><br><span class="line">        <span class="keyword">while</span> pick==<span class="number">0</span></span><br><span class="line">            pick=<span class="built_in">rand</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        pos=<span class="built_in">ceil</span>(pick*sum(lenchrom));  <span class="comment">%随机选择了染色体变异的位置，即选择了第pos个变量进行变异</span></span><br><span class="line">        v=chrom(<span class="built_in">i</span>,pos);</span><br><span class="line">        v1=v-bound(pos,<span class="number">1</span>);</span><br><span class="line">        v2=bound(pos,<span class="number">2</span>)-v;</span><br><span class="line">        pick=<span class="built_in">rand</span>; <span class="comment">%变异开始</span></span><br><span class="line">        <span class="keyword">if</span> pick&gt;<span class="number">0.5</span></span><br><span class="line">            delta=v2*(<span class="number">1</span>-pick^((<span class="number">1</span>-pop(<span class="number">1</span>)/pop(<span class="number">2</span>))^<span class="number">2</span>));</span><br><span class="line">            chrom(<span class="built_in">i</span>,pos)=v+delta;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            delta=v1*(<span class="number">1</span>-pick^((<span class="number">1</span>-pop(<span class="number">1</span>)/pop(<span class="number">2</span>))^<span class="number">2</span>));</span><br><span class="line">            chrom(<span class="built_in">i</span>,pos)=v-delta;</span><br><span class="line">        <span class="keyword">end</span>   <span class="comment">%变异结束</span></span><br><span class="line">        flag=test(lenchrom,bound,chrom(<span class="built_in">i</span>,:));     <span class="comment">%检验染色体的可行性</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ret=chrom;</span><br></pre></td></tr></table></figure><p>Code函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ret</span>=<span class="title">Code</span><span class="params">(lenchrom,bound)</span></span></span><br><span class="line"><span class="comment">%本函数将变量编码成染色体，用于随机初始化一个种群</span></span><br><span class="line"><span class="comment">% lenchrom   input : 染色体长度</span></span><br><span class="line"><span class="comment">% bound      input : 变量的取值范围</span></span><br><span class="line"><span class="comment">% ret        output: 染色体的编码值</span></span><br><span class="line"></span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> flag==<span class="number">0</span></span><br><span class="line">    pick=<span class="built_in">rand</span>(<span class="number">1</span>,<span class="built_in">length</span>(lenchrom));</span><br><span class="line">    ret=bound(:,<span class="number">1</span>)'+(bound(:,<span class="number">2</span>)-bound(:,<span class="number">1</span>))'.*pick; <span class="comment">%线性插值</span></span><br><span class="line">    flag=test(lenchrom,bound,ret);             <span class="comment">%检验染色体的可行性</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>test函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flag</span>=<span class="title">test</span><span class="params">(lenchrom,bound,code)</span></span></span><br><span class="line"><span class="comment">% lenchrom input : 染色体长度</span></span><br><span class="line"><span class="comment">% bound input : 变量的取值范围</span></span><br><span class="line"><span class="comment">% code output: 染色体的编码值</span></span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">[n,m]=<span class="built_in">size</span>(code);<span class="comment">%%n=1 m=5</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    <span class="keyword">if</span> code(<span class="built_in">i</span>)&lt;bound(<span class="built_in">i</span>,<span class="number">1</span>) || code(<span class="built_in">i</span>)&gt;bound(<span class="built_in">i</span>,<span class="number">2</span>)<span class="comment">%%如果编码后的值在取值范围之内，则flag标记为0</span></span><br><span class="line">    flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>非线性寻优</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ret</span> = <span class="title">nonlinear</span><span class="params">(chrom,sizepop)</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:sizepop</span><br><span class="line">    x=fmincon(inline(<span class="string">'-5*sin(x(1))*sin(x(2))*sin(x(3))*sin(x(4))*sin(x(5))-sin(5*x(1))*sin(5*x(2))*sin(5*x(3))*sin(5*x(4))*sin(5*x(5))'</span>),chrom(<span class="built_in">i</span>,:)',[],[],[],[],[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>],[<span class="number">2.8274</span> <span class="number">2.8274</span> <span class="number">2.8274</span> <span class="number">2.8274</span> <span class="number">2.8274</span>]);</span><br><span class="line">    ret(<span class="built_in">i</span>,:)=x';</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>算法主函数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 清空环境</span></span><br><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">warning off</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 遗传算法参数</span></span><br><span class="line">maxgen=<span class="number">30</span>;                         <span class="comment">%进化代数</span></span><br><span class="line">sizepop=<span class="number">100</span>;                       <span class="comment">%种群规模</span></span><br><span class="line">pcross=[<span class="number">0.6</span>];                      <span class="comment">%交叉概率</span></span><br><span class="line">pmutation=[<span class="number">0.01</span>];                  <span class="comment">%变异概率</span></span><br><span class="line">lenchrom=[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>];              <span class="comment">%变量字串长度</span></span><br><span class="line">bound=[<span class="number">0</span> <span class="number">0.9</span>*<span class="built_in">pi</span>;<span class="number">0</span> <span class="number">0.9</span>*<span class="built_in">pi</span>;<span class="number">0</span> <span class="number">0.9</span>*<span class="built_in">pi</span>;<span class="number">0</span> <span class="number">0.9</span>*<span class="built_in">pi</span>;<span class="number">0</span> <span class="number">0.9</span>*<span class="built_in">pi</span>];  <span class="comment">%变量范围</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 个体初始化</span></span><br><span class="line">individuals=struct(<span class="string">'fitness'</span>,<span class="built_in">zeros</span>(<span class="number">1</span>,sizepop), <span class="string">'chrom'</span>,[]);  <span class="comment">%种群结构体</span></span><br><span class="line">avgfitness=[];                                               <span class="comment">%种群平均适应度</span></span><br><span class="line">bestfitness=[];                                              <span class="comment">%种群最佳适应度</span></span><br><span class="line">bestchrom=[];                                                <span class="comment">%适应度最好染色体</span></span><br><span class="line"><span class="comment">% 初始化种群</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:sizepop</span><br><span class="line">    individuals.chrom(<span class="built_in">i</span>,:)=Code(lenchrom,bound);       <span class="comment">%随机产生个体</span></span><br><span class="line">    x=individuals.chrom(<span class="built_in">i</span>,:);</span><br><span class="line">    individuals.fitness(<span class="built_in">i</span>)=fun(x);                     <span class="comment">%个体适应度</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%找最好的染色体</span></span><br><span class="line">[bestfitness bestindex]=<span class="built_in">min</span>(individuals.fitness);</span><br><span class="line">bestchrom=individuals.chrom(bestindex,:);  <span class="comment">%最好的染色体</span></span><br><span class="line">avgfitness=sum(individuals.fitness)/sizepop; <span class="comment">%染色体的平均适应度</span></span><br><span class="line"><span class="comment">% 记录每一代进化中最好的适应度和平均适应度</span></span><br><span class="line">trace=[];</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 进化开始</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:maxgen</span><br><span class="line">    </span><br><span class="line">    <span class="comment">% 选择操作</span></span><br><span class="line">    individuals=Select(individuals,sizepop);</span><br><span class="line">    avgfitness=sum(individuals.fitness)/sizepop;</span><br><span class="line">    <span class="comment">% 交叉操作</span></span><br><span class="line">    individuals.chrom=Cross(pcross,lenchrom,individuals.chrom,sizepop,bound);</span><br><span class="line">    <span class="comment">% 变异操作</span></span><br><span class="line">    individuals.chrom=Mutation(pmutation,lenchrom,individuals.chrom,sizepop,[<span class="built_in">i</span> maxgen],bound);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">mod</span>(<span class="built_in">i</span>,<span class="number">10</span>)==<span class="number">0</span></span><br><span class="line">        individuals.chrom=nonlinear(individuals.chrom,sizepop);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">% 计算适应度</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:sizepop</span><br><span class="line">        x=individuals.chrom(<span class="built_in">j</span>,:);</span><br><span class="line">        individuals.fitness(<span class="built_in">j</span>)=fun(x);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">%找到最小和最大适应度的染色体及它们在种群中的位置</span></span><br><span class="line">    [newbestfitness,newbestindex]=<span class="built_in">min</span>(individuals.fitness);</span><br><span class="line">    [worestfitness,worestindex]=<span class="built_in">max</span>(individuals.fitness);</span><br><span class="line">    <span class="comment">% 代替上一次进化中最好的染色体</span></span><br><span class="line">    <span class="keyword">if</span> bestfitness&gt;newbestfitness</span><br><span class="line">        bestfitness=newbestfitness;</span><br><span class="line">        bestchrom=individuals.chrom(newbestindex,:);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    individuals.chrom(worestindex,:)=bestchrom;</span><br><span class="line">    individuals.fitness(worestindex)=bestfitness;</span><br><span class="line">    </span><br><span class="line">    avgfitness=sum(individuals.fitness)/sizepop;</span><br><span class="line">    </span><br><span class="line">    trace=[trace;avgfitness bestfitness]; <span class="comment">%记录每一代进化中最好的适应度和平均适应度</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%进化结束</span></span><br></pre></td></tr></table></figure><p>结果显示</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 结果显示</span></span><br><span class="line"></span><br><span class="line">[r c]=<span class="built_in">size</span>(trace);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>([<span class="number">1</span>:r]',trace(:,<span class="number">1</span>),<span class="string">'r-'</span>,[<span class="number">1</span>:r]',trace(:,<span class="number">2</span>),<span class="string">'b--'</span>);</span><br><span class="line"></span><br><span class="line">title([<span class="string">'函数值曲线 '</span> <span class="string">'终止代数＝'</span> num2str(maxgen)],<span class="string">'fontsize'</span>,<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">xlabel(<span class="string">'进化代数'</span>,<span class="string">'fontsize'</span>,<span class="number">12</span>);ylabel(<span class="string">'函数值'</span>,<span class="string">'fontsize'</span>,<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">legend</span>(<span class="string">'各代平均值'</span>,<span class="string">'各代最佳值'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">'函数值 变量'</span>);</span><br><span class="line"></span><br><span class="line">ylim([<span class="number">1.5</span> <span class="number">8</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">%xlim([1,size(trace,1)])</span></span><br><span class="line"></span><br><span class="line">grid on</span><br><span class="line"></span><br><span class="line"><span class="comment">% 窗口显示</span></span><br><span class="line"><span class="built_in">disp</span>([bestfitness x]);</span><br></pre></td></tr></table></figure><p><img src="/img/matlab/1.png" alt=""></p><p>函数值 变量<br>    2.0000    1.5708    1.5708    1.5708    1.5708    1.5708</p><p>可知当种群进化到30代时，函数值收敛到2.0000，在x<sub>1</sub>、x<sub>2</sub>、x<sub>2</sub>、x<sub>3</sub>、x<sub>4</sub>、x<sub>5</sub>分别取1.5708、1.5708、1.5708、1.5708、1.5708   时达到该值。 </p>]]></content>
      
      
      <categories>
          
          <category> matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交换机划分Vlan配置</title>
      <link href="/VLAN.html"/>
      <url>/VLAN.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>某一公司内财务部、销售部的PC通过2台交换机实现通信；要求财务部和销售部的PC可以互通，但为了数据安全起见，销售部和财务部需要进行互相隔离，现要在交换机上做适当配置来实现这一目标。</p></blockquote><a id="more"></a><h1 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a>技术原理</h1><ol><li>VLAN是指在一个物理网段内。进行逻辑的划分，划分成若干个虚拟局域网，VLAN做大的特性是不受物理位置的限制，可以进行灵活的划分。VLAN具备了一个物理网段所具备的特性。相同VLAN内的主机可以相互直接通信，不同VLAN间的主机之间互相访问必须经路由设备进行转发，广播数据包只可以在本VLAN内进行广播，不能传输到其他VLAN中。</li><li>Port VLAN是实现VLAN的方式之一，它利用交换机的端口进行VALN的划分，一个端口只能属于一个VLAN。</li><li>Tag VLAN是基于交换机端口的另一种类型，主要用于是交换机的相同Vlan内的主机之间可以直接访问，同时对不同Vlan的主机进行隔离。Tag<br>VLAN遵循IEEE802.1Q协议的标准，在使用配置了Tag VLAN的端口进行数据传输时，需要在数据帧内添加4个字节的8021.Q标签信息，用于标示该数据帧属于哪个VLAN,便于对端交换机接收到数据帧后进行准确的过滤。</li></ol><p><code>实验设备</code>Switch_2960 2台；PC 4台；直连线</p><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><h2 id="建拓扑图"><a href="#建拓扑图" class="headerlink" title="建拓扑图"></a>建拓扑图</h2><img src="/img/st/1.png"><h2 id="配置交换机的IP地址"><a href="#配置交换机的IP地址" class="headerlink" title="配置交换机的IP地址"></a>配置交换机的IP地址</h2><p>（使用交换机命令行配置或使用PC桌面上的终端配置）</p><p>Switch1&gt;    enable  //进入特权模式</p><p>Switch1#    conf t   //进入全局配置模式</p><p>Switch1(config)#   interfance vlan 1      (默认交换机的所有端口都在VLAN1中)// 进入VLAN 1的接口</p><p>Switch1(config-if)#      ip address 192.168.1.10 255.255.255.0     //在VLAN 1 接口上配置交换机远程管理的IP地址为192.168.1.10  255.255.255.0</p><p>Switch1(config-if)#     no shutdown    //开启接口</p><p>Switch1(config-if)#       end   //退到特权模式</p><p>Switch1# show run           //查看IP地址是否配置成功</p><p>​</p><p><code>同理设置Switch2下的vlan1 1 的IP地址。（注意：两台局域网内部的交换机IP地址不能相同）</code></p><h2 id="交换机划分VLAN"><a href="#交换机划分VLAN" class="headerlink" title="交换机划分VLAN"></a>交换机划分VLAN</h2><p>Switch1&gt;en</p><p>Switch1#conf  t</p><p>Switch1(config)#vlan 2</p><p>Switch1(config-vlan)#exit</p><p>Switch1(config)#vlan 3</p><p>Switch1(config-vlan)#exit</p><p><code>同理对Switch2划分VLAN。</code></p><h2 id="将端口划分到相应VLAN中；"><a href="#将端口划分到相应VLAN中；" class="headerlink" title="将端口划分到相应VLAN中；"></a>将端口划分到相应VLAN中；</h2><p>Switch1(config)#  interface fa 0/1    //进入交换机的fa0/1端口</p><p>Switch1(config-if)#switch access vlan 2 //将该端口配置为access端口,划分到vlan2</p><p>Switch1(config-if)#exit</p><p>Switch1(config)#     interface fa 0/2    //进入交换机的fa0/2端口</p><p> Switch1(config-if)#  switch access vlan 3     //将该端口配置为access端口,划分到vlan3</p><p>Switch1(config-if)#end</p><p>Switch1# show vlan //查看VLAN配置（找到所划分的vlan是否存在 并检查vlan所对应的交换机端口状态是否为active）</p><p><code>同理将Switch2端口划分到相应VLAN中。</code></p><h2 id="设置Tag-VLAN-Trunk属性；"><a href="#设置Tag-VLAN-Trunk属性；" class="headerlink" title="设置Tag VLAN Trunk属性；"></a>设置Tag VLAN Trunk属性；</h2><p>Switch(config)# int fa0/24 //进入交换机的fa0/24端口  </p><p>Switch(config-if)#switch mode trunk</p><p>Switch(config-if)#end</p><p>Switch#show vlan</p><p><code>同理设置Switch2的Tag VLAN Trunk属性</code></p><h2 id="配置主机IP地址。"><a href="#配置主机IP地址。" class="headerlink" title="配置主机IP地址。"></a>配置主机IP地址。</h2><p>PC1</p><p>​              IP: 192.168.1.2</p><p>​              Submark: 255.255.255.0</p><p>​              Gateway: 192.168.1.1</p><p>PC2</p><p>​              IP: 192.168.1.3</p><p>​              Submark: 255.255.255.0</p><p>​              Gateway: 192.168.1.1</p><p>PC3</p><p>​              IP: 192.168.1.4</p><p>​              Submark: 255.255.255.0</p><p>​              Gateway: 192.168.1.1</p><p>PC4</p><p>​              IP: 192.168.1.5</p><p>​              Submark: 255.255.255.0</p><p>​              Gateway: 192.168.1.1</p><h1 id="结果验证"><a href="#结果验证" class="headerlink" title="结果验证"></a>结果验证</h1><p>①PC1 ping PC2 timeout</p><img src="/img/st/2.png"><p>②PC1 ping PC3 Reply</p><p><img src="/img/st/3.png" alt=""></p><p>③PC2 ping PC3 timeout</p><p><img src="/img/st/4.png" alt=""></p><p>④PC2 ping PC4 Reply</p><p><img src="/img/st/5.png" alt=""></p><p><strong>思考题</strong></p><p> 1.怎么取消一个vlan和vlan中的某些端口？如何同时配置多个端口到同一个vlan下？</p><p><span id="inline-blue">1) 删除vlan 10：</span></p><p>int vlan 10    </p><p>no vlan 10</p><p><span id="inline-yellow">2)  删除vlan中的某些端口</span></p><p>int f0/19<br> no sw acc vlan 10</p><p><span id="inline-purple">3) 同时配置多个端口到同一个vlan</span></p><p>int ran f0/1 - 5 , f0/19 - 24<br> sw <a href="">mo</a> acc<br> sw acc vlan 10 </p><p>2.vlan-id的范围是多少？</p><p>0-4094</p>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vlan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置与应用NFS服务</title>
      <link href="/NFS.html"/>
      <url>/NFS.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>NFS是SUN开发的，用于在不同的UNIX/Linux机器间进行资源共享，其设置相当容易，主要是配置<code>/etc/exports</code>文件，然后运行exportfs -a 命令来共享。现在NFS已经成为了UNIX/Linux上的标配。<a id="more"></a><br><code>从实际经验来看，NFS的效率要比samba稍微高一些，只是差别不大。从配置上来看samba比较复杂，NFS较为简单</code></p></blockquote><h1 id="项目实施"><a href="#项目实施" class="headerlink" title="项目实施"></a>项目实施</h1><h2 id="任务一配置简单的NFS服务器"><a href="#任务一配置简单的NFS服务器" class="headerlink" title="任务一配置简单的NFS服务器"></a><code>任务一</code>配置简单的NFS服务器</h2><p>NFS协议本身并没有提供数据传输的功能。它借助于远程过程调用（RPC)协议来实现数据的传输。可以将NFS服务器看作是一个RPC服务，而将NFS客户端看成是一个RPC客户端，这样NFS服务器和NFS客户端之间就可以通过RPC协议进行数据传输。</p><p><span id="inline-green">背景</span>现企业内部有一台Linux服务器（centos)，其IP地址为192.168.136.156，另有一台Linux客户机(ubuntu)其IP地址为192.168.136.152.现根据企业实际生产需要，配置服务器实现如下需求。</p><p>（1）将/root共享给客户机，客户机对共享可写，并采用同步方式传输数据，允许客户机以root权限访问。</p><p>（2）将/usr/src共享给192.168.136.0网段，客户端对共享可写，并采用异步方式传输数据。</p><p>（3）在上一个要求的基础上实施客户端上面所有用户身份都映射成nfsnobody</p><h3 id="查看NFS程序是否安装"><a href="#查看NFS程序是否安装" class="headerlink" title="查看NFS程序是否安装"></a>查看NFS程序是否安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#centos</span><br><span class="line">rpm -qa |grep nfs#查看NFS是否安装</span><br><span class="line">rpm -qa |grep rpcbind#查看RPC是否安装</span><br><span class="line">#Ubuntu</span><br><span class="line">dpkg-query -l nfs-common#查看NFS是否安装</span><br><span class="line">dpkg-query -l rpcbind#查看RPC是否安装</span><br></pre></td></tr></table></figure><p><img src="/img/nfs/centos.png" alt="">)<img src="/img/nfs/ubuntu.png" alt=""></p><p>目前几乎所有的Linux发行版本都默认安装了NFS服务，如果没有的话输入命令自行安装即可。</p><h3 id="备份NFS配置文件"><a href="#备份NFS配置文件" class="headerlink" title="备份NFS配置文件"></a>备份NFS配置文件</h3><p><code>cp /etc/exports /etc/exports.bak</code></p><h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/exports</span><br></pre></td></tr></table></figure><img src="/img/nfs/exports.png"><p><code>备注</code>：上面配置文件括号中的参数详细释义如下：</p><p>rw:读写权限，只读权限的参数为ro</p><p>sync：数据同步写入内存和磁盘</p><p>no_root_squash:共享目录用户的属性，如果用户是root，那么对于这个共享目录来说就具有root权限。</p><p>async：数据会先暂存于内存中，而不立即写入硬盘。</p><h3 id="重启服务并设置开机自启"><a href="#重启服务并设置开机自启" class="headerlink" title="重启服务并设置开机自启"></a>重启服务并设置开机自启</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service rpcbind restart</span><br><span class="line">service nfs restart</span><br><span class="line">chkconfig rpcbind on</span><br><span class="line">chkconfig nfs on</span><br></pre></td></tr></table></figure><p><span id="inline-blue">注意要先开启rpcbind服务，然后在开启nfs服务,不然在客户机测试时会出现如下错误。</span></p><img src="/img/nfs/rpc.png"><h3 id="服务器端设置-usr-src本地写权限"><a href="#服务器端设置-usr-src本地写权限" class="headerlink" title="服务器端设置/usr/src本地写权限"></a>服务器端设置/usr/src本地写权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod o+w /use/src#为其他用户添加写权限</span><br></pre></td></tr></table></figure><h3 id="在客户机上查看NFS服务器上的共享目录"><a href="#在客户机上查看NFS服务器上的共享目录" class="headerlink" title="在客户机上查看NFS服务器上的共享目录"></a>在客户机上查看NFS服务器上的共享目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showmount -e 192.168.136.156</span><br></pre></td></tr></table></figure><h3 id="客户机上测试"><a href="#客户机上测试" class="headerlink" title="客户机上测试"></a>客户机上测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/root#建立本地挂载点</span><br><span class="line">mount 192.168.136.156:/root /data/root#挂载远程资源到本地</span><br><span class="line">mkdir -p /tmp/src#建立本地挂载点</span><br><span class="line">mount 192.168.136.156:/usr/src /tmp/src#挂载远程资源到本地</span><br><span class="line">mount |tail -2#查看挂载点的最后两行</span><br><span class="line">cd /data/root#root用户进入目录测试需求1</span><br><span class="line">touch nfs</span><br><span class="line">cd /tmp/src#普通用户进入目录测试需求2</span><br><span class="line">touch yhy</span><br></pre></td></tr></table></figure><p><code>我们可以在不同的挂载点下建立文件夹来测试需求</code></p><h3 id="把所有用户都映射成nfsnobody"><a href="#把所有用户都映射成nfsnobody" class="headerlink" title="把所有用户都映射成nfsnobody"></a>把所有用户都映射成nfsnobody</h3><img src="/img/nfs/exports.jpg"><p>使用<code>chmod o-w /usr/src</code>命令清除之前的权限，使用<code>setfacl -m u:nfsnobody:rwx /usr/src</code>来设置访问控制列表。</p><h3 id="客户机测试"><a href="#客户机测试" class="headerlink" title="客户机测试"></a>客户机测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch bestyhy</span><br></pre></td></tr></table></figure><img src="/img/nfs/no.png"><h3 id="客户写卸载NFS服务器"><a href="#客户写卸载NFS服务器" class="headerlink" title="客户写卸载NFS服务器"></a>客户写卸载NFS服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">umount /data/root</span><br><span class="line">umount /tmp/src</span><br></pre></td></tr></table></figure><p><span id="inline-green">若不能卸载则加上 <code>-lf</code>参数强制结束</span></p><h2 id="任务二架设企业级NFS服务器"><a href="#任务二架设企业级NFS服务器" class="headerlink" title="任务二架设企业级NFS服务器"></a><code>任务二</code>架设企业级NFS服务器</h2><p><span id="inline-purple">背景</span></p><h3 id="备份NFS配置文件-1"><a href="#备份NFS配置文件-1" class="headerlink" title="备份NFS配置文件"></a>备份NFS配置文件</h3><p><code>cp /etc/exports /etc/exports.bak</code></p><h3 id="编辑配置文件-1"><a href="#编辑配置文件-1" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/exports</span><br></pre></td></tr></table></figure><center>未完待续</center>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置与应用Samba服务</title>
      <link href="/Samba.html"/>
      <url>/Samba.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>Samba是一款自由软件，用来让UNIX系列操作系统与微软的windows操作系统SMB/CIFS网络协定做连结。Samba不仅可以存取及分享SMB的资料夹与打印机，本身还可以整合录入windows server网域，扮演着网域控制站以及加入活动目录。此软件在windows和unix系列操作系统之间搭建起一座桥梁让两者资源可以互通有无。</p></blockquote><a id="more"></a><h1 id="任务一"><a href="#任务一" class="headerlink" title="任务一"></a><code>任务一</code></h1><p><span id="inline-green">安装Samba与共享用户的家目录</span></p><h2 id="Samba软件的安装"><a href="#Samba软件的安装" class="headerlink" title="Samba软件的安装"></a>Samba软件的安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y samba</span><br></pre></td></tr></table></figure> <img src="/img/samba/1.png"><h2 id="新建samba用户"><a href="#新建samba用户" class="headerlink" title="新建samba用户"></a>新建samba用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd yhy -s /dev/null</span><br><span class="line">smbpasswd -a yhy</span><br></pre></td></tr></table></figure><p><img src="/img/samba/3.png" alt=""></p><h2 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h2><p>samba服务重新启动，并且设置开机启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service smb restart</span><br><span class="line">chkconfig smb on</span><br></pre></td></tr></table></figure><p><img src="/img/samba/2.png" alt=""></p><h2 id="关闭防火墙及SELinux"><a href="#关闭防火墙及SELinux" class="headerlink" title="关闭防火墙及SELinux"></a>关闭防火墙及SELinux</h2><p><img src="/img/samba/7.png" alt="">)<img src="/img/samba/8.png" alt=""></p><h2 id="进行访问"><a href="#进行访问" class="headerlink" title="进行访问"></a>进行访问</h2><blockquote><p><code>备注</code>： Windows客户端需要启用SMB协议的支持如果Win10 系统没有启用smb协议，可在控制面板中，启用该功能，Windows客户端访问配置服务器端和客户端电脑的IP地址无论是无线网卡还是有线网卡桥接，确保其在同一个网段即可。</p></blockquote><h3 id="windows客户端访问"><a href="#windows客户端访问" class="headerlink" title="windows客户端访问"></a>windows客户端访问</h3><p> <img src="/img/samba/11.png" alt="">)<img src="/img/samba/12.png" alt=""></p><h3 id="Linux客户端访问"><a href="#Linux客户端访问" class="headerlink" title="Linux客户端访问"></a>Linux客户端访问</h3><p><img src="/img/samba/15.png" alt=""></p><h1 id="任务二"><a href="#任务二" class="headerlink" title="任务二"></a>任务二</h1><p><span id="inline-yellow">配置学校samba服务器</span></p><blockquote><p>现学校需要配置一台samba服务器，老师需要把资料共享给学生，老师可以将自己的资源上传到服务器上，而学生只能下载资源，不能上传以及删除服务器上的资源。</p></blockquote><p><span id="inline-yellow">分析:</span>我们需要建立一个共享目录，只有teachers组用户可以读写该目录，而students用户组只能读取。具体操作如下</p><h2 id="建立用户以及群组"><a href="#建立用户以及群组" class="headerlink" title="建立用户以及群组"></a>建立用户以及群组</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">groupadd students  #建立学生群组</span><br><span class="line">groupadd teachers  #建立教师群组</span><br><span class="line">useradd -g students student1  #建立学生用户并且加入学生群组</span><br><span class="line">useradd -g teachers teacher1  #建立教师用户并且加入教师群组</span><br></pre></td></tr></table></figure><h2 id="建立samba用户"><a href="#建立samba用户" class="headerlink" title="建立samba用户"></a>建立samba用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">smbpasswd -a student1</span><br><span class="line">smbpasswd -a teacher1</span><br></pre></td></tr></table></figure><h2 id="建立共享目录以及设置文件夹权限"><a href="#建立共享目录以及设置文件夹权限" class="headerlink" title="建立共享目录以及设置文件夹权限"></a>建立共享目录以及设置文件夹权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/student  #在home下建立共享目录</span><br><span class="line">chgrp students /home/student1  #设置共享目录所属组为students</span><br><span class="line">chmod 757 /home/student  #设置共享目录权限</span><br><span class="line">chmod g+s /home/student  #设置特殊权限。目录下所有文件的所有属组会变成和目录一样的权限</span><br></pre></td></tr></table></figure><h2 id="配置samb配置文件的全局参数"><a href="#配置samb配置文件的全局参数" class="headerlink" title="配置samb配置文件的全局参数"></a>配置samb配置文件的全局参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p><code>备注</code>浏览即可目前大部分不需要修改，只需在最后添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[student]</span><br><span class="line">path=/home/student</span><br><span class="line">comment =student</span><br><span class="line">write list=@teachers</span><br><span class="line">valid users=@teachers @students   #主要此处有空格</span><br></pre></td></tr></table></figure><h2 id="samba服务重新启动"><a href="#samba服务重新启动" class="headerlink" title="samba服务重新启动"></a>samba服务重新启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service smb restart</span><br></pre></td></tr></table></figure><h2 id="客户端测试"><a href="#客户端测试" class="headerlink" title="客户端测试"></a>客户端测试</h2><p><code>如果之前使用其他smb账号登录过，需要断开连接重新登录</code></p><p><img src="/img/samba/net.png" alt=""></p><p><code>student1登录</code></p><p><img src="/img/samba/student1.png" alt="">)<img src="/img/samba/student.png" alt=""></p><p><code>teacher1</code></p><p><img src="/img/samba/teacher1.png" alt=""></p><p>teacher1可以删除以及上传（teacher1具有读写权限）而student1则只能下载文件(没有相关权限)</p><h1 id="任务三"><a href="#任务三" class="headerlink" title="任务三"></a><code>任务三</code></h1><p><span id="inline-blue">配置企业级Samba权限</span></p><p><code>背景</code>配置公司的samba服务器，目录为/samba。/samba内有3个文件夹，市场部的文件夹market要求只有市场部的员工才可以修改，登录需要验证；销售部的文件夹sales要求只能销售部员工才能读取修改，登录时需要验证；pub是公共文件夹，所有用户都能够访问，允许所有登录者读取修改，登录时需要验证。user可以修改所有的工作目录。</p><h2 id="配置企业一般文件权限"><a href="#配置企业一般文件权限" class="headerlink" title="配置企业一般文件权限"></a>配置企业一般文件权限</h2><p>第一步：建立共享目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /samba/market sales pub</span><br></pre></td></tr></table></figure><p>第二步：建立用户群组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd marketusers#建立市场部用户组</span><br><span class="line">groupadd salesusers#建立销售部用户组</span><br><span class="line">useradd user -s /sbin/nologin#建立user用户并指明不可用的shell</span><br></pre></td></tr></table></figure><p>第三步：设置文件夹权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chmod 770 sales market</span><br><span class="line">chmod 777 pub</span><br><span class="line">chown :marketusers market</span><br><span class="line">chown :salesusers sales</span><br></pre></td></tr></table></figure><p>第四步：备份配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/samba/smb.conf /etc/samba/smb.conf.bak</span><br></pre></td></tr></table></figure><p>第五步：编辑samba配置文件</p><p><code>在最后添加如下内容</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[samba]</span><br><span class="line">comment=samba share files</span><br><span class="line">path=/samba</span><br><span class="line">vaild=@marketusers @salesusers user</span><br><span class="line">read only=no</span><br><span class="line">create mask=666</span><br><span class="line">directory mask=777</span><br></pre></td></tr></table></figure><p>第六步：建立samba用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbpasswd -a user</span><br></pre></td></tr></table></figure><h2 id="配置企业特殊文件权限"><a href="#配置企业特殊文件权限" class="headerlink" title="配置企业特殊文件权限"></a>配置企业特殊文件权限</h2><p>第一步：建立共享目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/sales</span><br><span class="line">mkdir /home/market</span><br></pre></td></tr></table></figure><p>第二步：建立用户以及群组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">groupadd sales</span><br><span class="line">groupadd market</span><br><span class="line">useradd -g sales salesuser#建立salesuser用户并加入sales组</span><br><span class="line">useradd -g market marketuser</span><br><span class="line">useradd ceo</span><br></pre></td></tr></table></figure><p>第三步：建立samba访问账号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">smbpasswd -a salesuser</span><br><span class="line">smbpasswd -a marketuser</span><br><span class="line">smbpasswd -a ceo</span><br></pre></td></tr></table></figure><p>第四步:设置文件夹的权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chgrp sales /home/sales  #修改所属组为sales</span><br><span class="line">chgrp market /home/market</span><br><span class="line">chown ceo /home/sales</span><br><span class="line">chwon ceo /home/market#修改目录的用户为ceo</span><br><span class="line">chmod 770 /home/sales</span><br><span class="line">chmod 770 /home/market</span><br><span class="line">chmod g+s /home/sales#为目录加上setgid标识</span><br><span class="line">chmod g+s /home/market</span><br></pre></td></tr></table></figure><p><code>备注</code>setgid权限只对于目录有效，任何用户在此目录下创建的文件都属于和该目录所属的组相同的组。</p><p>第五步：修改配置文件</p><p><code>修改内容如下</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">security =user</span><br><span class="line">[sales]</span><br><span class="line">path=/home/sales</span><br><span class="line">comment=sales</span><br><span class="line">write liset=@sales ceo</span><br><span class="line">valid users=@sales ceo</span><br><span class="line">create mask=0770</span><br><span class="line">directory mask=0770</span><br><span class="line">[market]</span><br><span class="line">path=/home/market</span><br><span class="line">comment=market</span><br><span class="line">write liset=@market ceo</span><br><span class="line">valid users=@market ceo</span><br><span class="line">create mask=0770</span><br><span class="line">directory mask=0770</span><br></pre></td></tr></table></figure><p>第六步：重启服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service smb restart</span><br></pre></td></tr></table></figure><p><span id="inline-purple">客户端验证即可</span></p><p>ceo用户登录</p><p><img src="/img/samba/ceo.png" alt=""></p><p>可上传文件</p><p><img src="/img/samba/ceo1.png" alt=""></p><p>salesuser用户登录</p><p><img src="/img/samba/salesuser.png" alt="">)<img src="/img/samba/salesuser1.png" alt=""></p><h2 id="配置企业严格文件权限"><a href="#配置企业严格文件权限" class="headerlink" title="配置企业严格文件权限"></a>配置企业严格文件权限</h2><p>由于之前登录的时候会看到自己的共享目录以及没有权限访问的共享文件目录。所以下面我们对其进行优化🙃</p><p>第一步：复制配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/samba</span><br><span class="line">cp smb.conf smb.conf.ceo</span><br><span class="line">cp smb.conf smb.conf.markets</span><br><span class="line">cp smb.conf smb.conf.sales</span><br></pre></td></tr></table></figure><p>第二步：配置各自的配置文件</p><p>smb.conf.ceo的配置文件的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[sales]</span><br><span class="line">path=/home/sales</span><br><span class="line">comment=sales</span><br><span class="line">writeable=yes</span><br><span class="line">valid users=ceo</span><br><span class="line">create mask=0770</span><br><span class="line">directory mask=0770</span><br><span class="line">[market]</span><br><span class="line">path=/home/market</span><br><span class="line">comment=market</span><br><span class="line">writeable=yes</span><br><span class="line">valid users=ceo</span><br><span class="line">create mask=0770</span><br><span class="line">directory mask=0770</span><br></pre></td></tr></table></figure><p>smb.conf.markets的配置文件的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[market]</span><br><span class="line">path=/home/market</span><br><span class="line">comment=market</span><br><span class="line">writeable=yes</span><br><span class="line">valid users=@market</span><br><span class="line">create mask=0770</span><br><span class="line">directory mask=0770</span><br></pre></td></tr></table></figure><p>smb.conf.sales的配置文件的内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[sales]</span><br><span class="line">path=/home/sales</span><br><span class="line">comment=sales</span><br><span class="line">writeable=yes</span><br><span class="line">valid users=@sales</span><br><span class="line">create mask=0770</span><br><span class="line">directory mask=0770</span><br></pre></td></tr></table></figure><p>主配置文件smb.conf的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">security=user</span><br><span class="line">include=/etc/samba/smb.conf.%G</span><br><span class="line">include=/etc/samba/smb.conf.%U</span><br></pre></td></tr></table></figure><p>第三步：关闭防火墙以及selinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>第四步：重启服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service smb restart</span><br></pre></td></tr></table></figure><p>第五步：客户端测试</p><p>salesuser用户测试</p><p><img src="/img/samba/salesuser2.png" alt="">)<img src="/img/samba/s.png" alt=""></p><p>marketuser测试</p><p><img src="/img/samba/m.png" alt=""></p><p>ceo测试</p><p><img src="/img/samba/c.png" alt="">)<img src="/img/samba/cc.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置与应用DHCP服务</title>
      <link href="/DHCP.html"/>
      <url>/DHCP.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>DHCP(Dynamic Host Configuration Protocol,动态主机配置协议)是一个简化主机IP地址分配管理的TCP/IP协议。只要在网络中安装和配置了DHCP服务器，用户不用再自行输入任何数据，就可以将一台计算机接入到网络之中，所有入网的必要参数(包括IP地址、子网掩码、默认网关、DNS服务器的地址等)的设置都可交给DHCP服务器负责，它会自动的配置好。</p></blockquote><a id="more"></a><h1 id="DHCP服务器的租约方式"><a href="#DHCP服务器的租约方式" class="headerlink" title="DHCP服务器的租约方式"></a>DHCP服务器的租约方式</h1><p>①限定租期：这种方式是一种动态分配的方式，并且可以很好的解决IP地址不够用的问题。</p><p>②永久使用：采用这种方式的前提是IP地址足够使用，这样DHCP客户端就不必就不必频繁地向DHCP服务器提出续约的请求。</p><p><img src="/img/DHCP.png" alt="客户机申请IP地址流程图"></p><p>从图可以看出，DHCP服务工作分为6个阶段：</p><p>1）发现阶段</p><p>即DHCP客户端寻找DHCP服务器的过程，对于客户端发送DHCP发现(Discovery)报文。因为DHCP服务器对应于DHCP客户端是未知的，所以DHCP客户端发出的DHCP发现报文是广播包，源地址为0.0.0.0，目的地址为255.255.255.255。如果同一个网络内没有DHCP服务器，而该网关接口配置了DHCP中继（Relay)功能，则该接口即为DHCP的中继，DHCP中将继会将该DHCP报文的源IP地址修改为该接口的IP地址，而目的地址则为DHCP中继配置的DHCP服务器的IP地址。</p><p>2）应答阶段</p><p>网络上的所有支持TCP/IP的主机都会收到该DHCP发现报文，但是只有DHCP服务器会响应该报文。如果网络中存在多个DHCP服务器，则多个DHCP服务器均会回复该DHCP发现报文。</p><p>3）地址请求阶段</p><p>DHCP客户机收到若干个DHCP服务器响应的DHCP应答报文后，选择其中一个DHCP服务器作为目标DHCP服务器。选择策略通常为选择第一个响应的DHCP应答报文所属的DHCP服务器。然后以广播方式回答一个DHCP请求(Requset)报文，该报文中包含向目标DHCP的IP地址等信息。之所以是广播方式发出的，是为了通知其他DHCP服务器自己将选择该DHCP服务器所提供的IP地址。</p><p>4）确认分配IP地址阶段</p><p>DHCP服务器收到DHCP服务请求报文后，解析该报文请求IP地址所属的子网。并从dhcp.conf文件中与之匹配的子网（Subnet）中取出一个可用的IP地址（从可用地址段选择一个IP地址后，首先发送ICMP报文来ping该IP地址，如果收到该IP地址的ICMP报文，则抛弃该IP地址，重新选择IP地址继续进行ICMP报文测试，直到找到一个网络中没有人使用的IP地址，用以达到防止动态分配的IP地址与网络中其他设备的IP地址冲突的目的），设置在DHCP发现报文yiadress字段中，表示为该客户端分配的IP地址，并且为该租用（Lease）设置该子网配置的选项（Option),例如默认租用租期、最大租期、路由器等信息。</p><p>DHCP从地址池中选择IP地址，以如下优先级进行选择：</p><p>（1）当前已经存在的IP Mac的对应关系；</p><p>（2）客户端以前的IP地址</p><p>（3）读取发现报文中的Requested Ip Address Option的值，如果存在并且IP地址可用；</p><p>（4）从配置的子网中选择IP地址</p><p>5）更新租约阶段</p><p>DHCP客户机获取到的IP地址都有一个租约，租约过期后，DHCP服务器将收回该IP地址，所以如果DHCP客户机想继续使用该IP地址，则必须更新租约。更新的方式就是，当当前租约期限过了一半的时候，DHCP客户机将会发送DHCP更新(Rrenew)报文来续约租期。或者DHCP客户机重新登录网络，当DHCP客户机重新登录后，发送一个以包含之前的DHCP服务器分配的IP地址信息的DHCP请求报文。</p><p>6）确认新的租约阶段</p><p>当DHCP服务器收到更新租约的请求后，会尝试让DHCP客户端继续使用该IP地址，并回答一个ACK报文。但是如果该IP地址无法再次分配给该DHCP客户端后，DHCP回复一个NAK报文，当DHCP客户机收到该NAK报文后，会重新发送DHCP发现报文来重新获取IP地址。</p><h1 id="项目实施"><a href="#项目实施" class="headerlink" title="项目实施"></a>项目实施</h1><h2 id="任务一-配置与安装单IP作用域"><a href="#任务一-配置与安装单IP作用域" class="headerlink" title="任务一   配置与安装单IP作用域"></a><code>任务一</code>   配置与安装单IP作用域</h2><p>在某个局域网内有11台计算机，采用DHCP获取IP地址，地址段为192.168.16.1~192.168.16.14，子网掩码是255.255.225.240.其中IP地址192.168.16.1分配路由器，IP地址192.168.16.8和192.168.16.9分配给指定的Mac地址的主机，DNS服务器地址为8.8.8.8及114.114.114.114，配置一个DHCP服务器来动态分配IP地址。其中服务器本身IP地址为192.168.16.14。</p><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><h4 id="配置本机ip地址"><a href="#配置本机ip地址" class="headerlink" title="配置本机ip地址"></a>配置本机ip地址</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">service network restart</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/ip.png" alt="配置IP">)<img src="/img/dhcp/s.png" alt="查看IP"></p><h4 id="安装DHCP服务"><a href="#安装DHCP服务" class="headerlink" title="安装DHCP服务"></a>安装DHCP服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install dhcp -y</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/dhcp.png" alt=""></p><h4 id="复制DHCP的示例文件"><a href="#复制DHCP的示例文件" class="headerlink" title="复制DHCP的示例文件"></a>复制DHCP的示例文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/doc/dhcp-4.1.1/dhcpd.conf.sample /etc/dhcp/dhcpd.conf</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/c.png" alt=""></p><h4 id="编辑DHCP的配置文件"><a href="#编辑DHCP的配置文件" class="headerlink" title="编辑DHCP的配置文件"></a>编辑DHCP的配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/dhcp/dhcp.conf</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/b.png" alt=""></p><h4 id="重启DHCP服务"><a href="#重启DHCP服务" class="headerlink" title="重启DHCP服务"></a>重启DHCP服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service dhcpd restart</span><br><span class="line">chkconfig dhcpd on #设置开机自启</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/cq.png" alt=""></p><h4 id="客户端验证"><a href="#客户端验证" class="headerlink" title="客户端验证"></a>客户端验证</h4><p>1）Windows客户端验证（由于无线路由器有dhcp功能，会干扰验证，可以尝试，插上网线，启用有线网卡的功能，并在虚拟机里的网络选项配置桥接到有线网卡）<br><img src="/img/dhcp/g.png" alt=""> <img src="/img/dhcp/w.png" alt=""><br>2）Linux客户端验证<br><img src="/img/dhcp/l.png" alt=""></p><h2 id="任务二-架设企业级的DHCP服务器"><a href="#任务二-架设企业级的DHCP服务器" class="headerlink" title="任务二 架设企业级的DHCP服务器"></a><code>任务二</code> 架设企业级的DHCP服务器</h2><p>公司需要架设一台DHCP服务器，服务器IP地址为192.168.23.254，其余要求如下</p><p><code>(1)</code>为子网192.168.23.0/24建立一个IP作用域，并将192.168.23.20~192.168.23.200范围之内的IP地址动态分配给客户机。</p><p><code>(2)</code>子网中的DNS服务器地址为192.168.23.2与114.114.114.114，IP路由器地址为192.168.23.1，所在的网域名为bestyhy.com,将这些惨呼指定给客户机使用。</p><p><code>(3)</code>为某台主机保留192.168.23.123，这个IP地址，DNS服务器地址为192.168.23.5.</p><h3 id="实现步骤-1"><a href="#实现步骤-1" class="headerlink" title="实现步骤"></a>实现步骤</h3><h4 id="配置本机ip地址-1"><a href="#配置本机ip地址-1" class="headerlink" title="配置本机ip地址"></a>配置本机ip地址</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/1.png" alt=""></p><h4 id="设置主机名和打开网络开关"><a href="#设置主机名和打开网络开关" class="headerlink" title="设置主机名和打开网络开关"></a>设置主机名和打开网络开关</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network</span><br></pre></td></tr></table></figure><p><code>备注</code>:networking=yes打开网络的总开关，如果设置为no，那么本服务器将🙅‍不能提供任何网络功能。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NETWORKING=yes#打开服务器网络总开关</span><br><span class="line">HOSTNAME=bestyhy.com    #设置主机名字为bestyhy.com</span><br></pre></td></tr></table></figure><h4 id="设置主机名与主机IP对应解析"><a href="#设置主机名与主机IP对应解析" class="headerlink" title="设置主机名与主机IP对应解析"></a>设置主机名与主机IP对应解析</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts </span><br><span class="line"></span><br><span class="line">192.168.23.254 bestyhy.com</span><br></pre></td></tr></table></figure><h4 id="设置默认搜索域名"><a href="#设置默认搜索域名" class="headerlink" title="设置默认搜索域名"></a>设置默认搜索域名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/resolv.conf</span><br><span class="line"></span><br><span class="line">search bestyhy.com</span><br><span class="line">nameserver192.168.23.2</span><br></pre></td></tr></table></figure><h4 id="重启网络服务"><a href="#重启网络服务" class="headerlink" title="重启网络服务"></a>重启网络服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/2.png" alt=""></p><h4 id="编辑DHCP配置文件"><a href="#编辑DHCP配置文件" class="headerlink" title="编辑DHCP配置文件"></a>编辑DHCP配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/dhcp/dhcp.conf</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/3.png" alt="">)<img src="/img/dhcp/4.png" alt=""></p><h4 id="重启DHCP服务-1"><a href="#重启DHCP服务-1" class="headerlink" title="重启DHCP服务"></a>重启DHCP服务</h4><p><img src="/img/dhcp/cq.png" alt=""></p><h4 id="客户端验证-1"><a href="#客户端验证-1" class="headerlink" title="客户端验证"></a>客户端验证</h4><p>1）Windows客户端验证（由于无线路由器有dhcp功能，会干扰验证，可以尝试，插上网线，启用有线网卡的功能，并在虚拟机里的网络选项配置桥接到有线网卡）<br><img src="/img/dhcp/g.png" alt="">   <img src="/img/dhcp/5.png" alt="">  <img src="/img/dhcp/6.png" alt=""></p><p>2）Linux客户端验证</p><p><img src="/img/dhcp/7.png" alt="">  </p><p> <img src="/img/dhcp/8.png" alt=""></p><p> <img src="/img/dhcp/9.png" alt=""></p><h2 id="任务三配置多IP作用域服务器"><a href="#任务三配置多IP作用域服务器" class="headerlink" title="任务三配置多IP作用域服务器"></a><code>任务三</code>配置多IP作用域服务器</h2><p><span id="inline-green">背景</span>公司原有机器为250台，IP地址规划为192.168.31.0/24网段，动态管理网络IP地址，现在要升级到500台，公司要求在保持原有IP地址规划不变的情况下扩容现有的网络IP地址。</p><h3 id="实现步骤-2"><a href="#实现步骤-2" class="headerlink" title="实现步骤"></a>实现步骤</h3><h4 id="开启路由转发功能"><a href="#开启路由转发功能" class="headerlink" title="开启路由转发功能"></a>开启路由转发功能</h4><p><span id="inline-blue">备注</span>服务器的IP就是管理各网段的网管，也就是说DHCP服务器的网卡担当网关的功能，这需要打开DHCP服务器的转发功能（让两个网段的机器可以相互通信）</p><p>①</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>找到net.ipv4.ip_forward=0,把0改为1。<span id="inline-blue">在命令模式下输入 / +自己想要搜索的内容然后回车即可快速找到相关信息。</span></p><p>②通过shell命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "1" &gt; /proc/sys/net/ipv4/ip_forword</span><br></pre></td></tr></table></figure><p><code>sysctl -p</code>刷新修改的参数设置，使之立刻生效。</p><h4 id="给网卡配置多个IP地址"><a href="#给网卡配置多个IP地址" class="headerlink" title="给网卡配置多个IP地址"></a>给网卡配置多个IP地址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/sysconfig/network-scripts/</span><br><span class="line">vim ifcfg-eth0</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/ip.jpg" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp ifcfg-eth0 ifcfg-eth0:1</span><br><span class="line">vim  ifcfg-eth0:1</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/ip1.jpg" alt=""></p><p>使用<code>service network restart</code>命令重新启动网络服务，是IP地址生效。</p><h4 id="修改DHCP配置文件"><a href="#修改DHCP配置文件" class="headerlink" title="修改DHCP配置文件"></a>修改DHCP配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/dhcp/dhcpd.conf</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/dhcp.jpg" alt=""></p><h4 id="重启DHCP服务-2"><a href="#重启DHCP服务-2" class="headerlink" title="重启DHCP服务"></a>重启DHCP服务</h4><p><img src="/img/dhcp/cq.png" alt=""></p><h2 id="任务四配置DHCP的中继服务"><a href="#任务四配置DHCP的中继服务" class="headerlink" title="任务四配置DHCP的中继服务"></a><code>任务四</code>配置DHCP的中继服务</h2><p><span id="inline-purple">任务说明</span>DHCP客户端使用IP广播来寻找同一网段上的DHCP服务器。当服务器和客户端处在不同网段，即使被路由器分割开来时，路由器是不会转发这种广播包的。因此可能需要在每个网段上都设置一个DHCP服务器，虽然DHCP只消耗很小的一部分资源，但是多个DHCP服务器会带来管理上的不便。DHCP中继的使用使得一个DHCP服务器同时为多个网段服务的可能。在DHCP广播情况下，客户在本地网段广播一个DHCP发现分组。网关获得这个分组，如果配置了帮助地址，就将DHCP分组转发到特定地址。</p><p><span id="inlie-green">背景</span>企业在组网时，根据实际需要划分了两个VLAN，中间通过一台Linux服务器连接。如何让一台DHCP服务器为多个网段提供服务。</p><h3 id="实现步骤-3"><a href="#实现步骤-3" class="headerlink" title="实现步骤"></a>实现步骤</h3><p>两个网络中的IP作用域的配置与任务三相同，配置中继服务的两个IP地址分别为192.168.31.1和192.168.32.1</p><h4 id="配置DHCP-relay"><a href="#配置DHCP-relay" class="headerlink" title="配置DHCP relay"></a>配置DHCP relay</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/dhcrelay</span><br></pre></td></tr></table></figure><p><img src="/img/dhcp/dhcrelay.png" alt=""></p><h4 id="开启路由转发功能-1"><a href="#开启路由转发功能-1" class="headerlink" title="开启路由转发功能"></a>开启路由转发功能</h4><p><span id="inline-blue">备注</span>服务器的IP就是管理各网段的网管，也就是说DHCP服务器的网卡担当网关的功能，这需要打开DHCP服务器的转发功能（让两个网段的机器可以相互通信）</p><p>①</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>找到net.ipv4.ip_forward=0,把0改为1。<span id="inline-blue">在命令模式下输入 / +自己想要搜索的内容然后回车即可快速找到相关信息。</span></p><p>②通过shell命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "1" &gt; /proc/sys/net/ipv4/ip_forword</span><br></pre></td></tr></table></figure><p><code>sysctl -p</code>刷新修改的参数设置，使之立刻生效。</p><h4 id="运行DHCP服务"><a href="#运行DHCP服务" class="headerlink" title="运行DHCP服务"></a>运行DHCP服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service dhcpd restart</span><br><span class="line">chkconfig  dhcpd on</span><br></pre></td></tr></table></figure><h4 id="配置DHCP客户端"><a href="#配置DHCP客户端" class="headerlink" title="配置DHCP客户端"></a>配置DHCP客户端</h4><p>通过<code>setup</code>命令，在use DHCP后面的[]中，按空格添加“*”</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>遗传算法工具箱应用举例</title>
      <link href="/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%BA%94%E7%94%A8%E4%B8%BE%E4%BE%8B.html"/>
      <url>/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%BA%94%E7%94%A8%E4%B8%BE%E4%BE%8B.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><a id="more"></a><h1 id="简单一元函数优化"><a href="#简单一元函数优化" class="headerlink" title="简单一元函数优化"></a>简单一元函数优化</h1><p>利用遗传算法计算以下函数的最小值：</p><center><img src="/img/fx.png"></center><p>选择二进制编码，遗传算法参数设置如表所示</p><table><thead><tr><th>种群大小</th><th>最大遗传代数</th><th>个体长度</th><th>代沟</th><th>交叉概率</th><th>变异概率</th></tr></thead><tbody><tr><td>40</td><td>20</td><td>20</td><td>0.95</td><td>0.7</td><td>0.01</td></tr></tbody></table><p>遗传算法优化代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear all</span><br><span class="line">close all</span><br><span class="line"><span class="comment">%%画函数图</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">lb=<span class="number">1</span>;</span><br><span class="line">ub=<span class="number">2</span>;      <span class="comment">%函数自变量范围为[1,2]</span></span><br><span class="line">ezplot(<span class="string">'sin(10 * pi * X)/X'</span>,[lb,ub]);</span><br><span class="line">xlabel(<span class="string">'自变量/X'</span>)</span><br><span class="line">ylabel(<span class="string">'函数值/Y'</span>)</span><br><span class="line"><span class="comment">%%定义遗传算法参数</span></span><br><span class="line">NIND=<span class="number">40</span>;        <span class="comment">%种群大小</span></span><br><span class="line">MAXGEN=<span class="number">20</span>;     <span class="comment">%最大遗传代数</span></span><br><span class="line">PRECI=<span class="number">20</span>;      <span class="comment">%个体长度</span></span><br><span class="line">GGAP=<span class="number">0.95</span>;      <span class="comment">%代沟</span></span><br><span class="line">px=<span class="number">0.7</span>;         <span class="comment">%交叉概率</span></span><br><span class="line">pm=<span class="number">0.01</span>;        <span class="comment">%变异概率</span></span><br><span class="line">trace=<span class="built_in">zeros</span>(<span class="number">2</span>,MAXGEN);      <span class="comment">%寻优结果初始值</span></span><br><span class="line">FieldD=[PRECI;lb;ub;<span class="number">1</span>;<span class="number">0</span>;<span class="number">1</span>;<span class="number">1</span>];       <span class="comment">%区域描述器</span></span><br><span class="line">Chrom=crtbp(NIND,PRECI);            <span class="comment">%创建任意离散随机种群</span></span><br><span class="line"><span class="comment">%%优化</span></span><br><span class="line">gen=<span class="number">0</span>;      <span class="comment">%代计数器</span></span><br><span class="line">X=bs2rv(Chrom,FieldD);      <span class="comment">%初始种群二进制到十进制转换</span></span><br><span class="line">ObjV=<span class="built_in">sin</span>(<span class="number">10</span>*<span class="built_in">pi</span>*X)./X;       <span class="comment">%计算目标函数值</span></span><br><span class="line"><span class="keyword">while</span> gen&lt;MAXGEN</span><br><span class="line">    FitnV=ranking(ObjV);    <span class="comment">%分配适应度值</span></span><br><span class="line">    SelCh=select(<span class="string">'sus'</span>,Chrom,FitnV,GGAP);       <span class="comment">%选择</span></span><br><span class="line">    SelCh=recombin(<span class="string">'xovsp'</span>,SelCh,px);           <span class="comment">%重组</span></span><br><span class="line">    SelCh=mut(SelCh,pm);                        <span class="comment">%变异</span></span><br><span class="line">    X=bs2rv(SelCh,FieldD);                      <span class="comment">%子代个体的十进制转换</span></span><br><span class="line">    ObjVSel=<span class="built_in">sin</span>(<span class="number">10</span>*<span class="built_in">pi</span>*X)./X;                    <span class="comment">%计算子代的目标函数值</span></span><br><span class="line">    [Chrom,ObjV]=reins(Chrom,SelCh,<span class="number">1</span>,<span class="number">1</span>,ObjV,ObjVSel); <span class="comment">%重插入子代到父代，得到新种群</span></span><br><span class="line">    X=bs2rv(Chrom,FieldD);</span><br><span class="line">    gen=gen+<span class="number">1</span>;          <span class="comment">%代计数器增加</span></span><br><span class="line">    <span class="comment">%获取每代的最优解及其序号，Y为最优解，I为个体的序号</span></span><br><span class="line">    [Y,I]=<span class="built_in">min</span>(ObjV);</span><br><span class="line">    trace(<span class="number">1</span>,gen)=X(I);      <span class="comment">%记下每代的最优值</span></span><br><span class="line">    trace(<span class="number">2</span>,gen)=Y;         <span class="comment">%记下每代的最优值</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">plot</span>(trace(<span class="number">1</span>,:),trace(<span class="number">2</span>,:),<span class="string">'bo'</span>);           <span class="comment">%画出每代的最优点</span></span><br><span class="line">grid on;</span><br><span class="line"><span class="built_in">plot</span>(X,ObjV,<span class="string">'b*'</span>);          <span class="comment">%画出最后一代种群的hold off</span></span><br><span class="line"><span class="comment">%%画进化图</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(<span class="number">1</span>:MAXGEN,trace(<span class="number">2</span>,:));</span><br><span class="line">grid on;</span><br><span class="line">xlabel(<span class="string">'遗传代数'</span>);</span><br><span class="line">ylabel(<span class="string">'解的变化'</span>);</span><br><span class="line">title(<span class="string">'进化过程'</span>);</span><br><span class="line">bestY=trace(<span class="number">2</span>,<span class="keyword">end</span>);</span><br><span class="line">bestX=trace(<span class="number">1</span>,<span class="keyword">end</span>);</span><br><span class="line">fprintf([<span class="string">'最优解:\nX='</span>,num2str(bestX),<span class="string">'\nY='</span>,num2str(bestY),<span class="string">'\n'</span>])</span><br></pre></td></tr></table></figure><p>最优解：</p><p>X=1.1491</p><p>Y=-0.8699</p><img src="/img/min.png"><center>其中O是每代的最优解，*是20代以后的种群分布，图二为种群优化20代的进化图。</center><h1 id="二元函数优化"><a href="#二元函数优化" class="headerlink" title="二元函数优化"></a>二元函数优化</h1><p>利用遗传算法求下面函数的最大值：</p><img src="/img/fy.jpg"><p>选择二进制编码，遗传算法参数设置如表所示</p><table><thead><tr><th>种群大小</th><th>最大遗传代数</th><th><center>个体长度</center></th><th>代沟</th><th>交叉概率</th><th>变异概率</th></tr></thead><tbody><tr><td>40</td><td>50</td><td><center>40(2个自变量，每个长20)</center></td><td>0.95</td><td>0.7</td><td>0.01</td></tr></tbody></table><p>程序代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear all</span><br><span class="line">close all</span><br><span class="line"><span class="comment">%%画出函数图</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line">lbx=<span class="number">-2</span>;ubx=<span class="number">2</span>;       <span class="comment">%函数自变量x的范围为[-2,2]</span></span><br><span class="line">lby=<span class="number">-2</span>;uby=<span class="number">2</span>;       <span class="comment">%函数自变量y的范围为[-2,2]</span></span><br><span class="line">ezmesh(<span class="string">'y*sin(2*pi*x)+x*cos(2*pi*y)'</span>,[lbx,ubx,lby,uby],<span class="number">50</span>);     <span class="comment">%画出函数曲线</span></span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="comment">%%定义遗传算法函数</span></span><br><span class="line">NIND=<span class="number">40</span>;        <span class="comment">%种群大小</span></span><br><span class="line">MAXGEN=<span class="number">50</span>;      <span class="comment">%最大遗传代数</span></span><br><span class="line">PRECI=<span class="number">20</span>;       <span class="comment">%个体长度</span></span><br><span class="line">GGAP=<span class="number">0.95</span>;      <span class="comment">%代沟</span></span><br><span class="line">px=<span class="number">0.07</span>;        <span class="comment">%交叉概率</span></span><br><span class="line">pm=<span class="number">0.01</span>;        <span class="comment">%变异概率</span></span><br><span class="line">trace=<span class="built_in">zeros</span>(<span class="number">3</span>,MAXGEN);      <span class="comment">%寻优结果初始值</span></span><br><span class="line">FieldD=[PRECI PRECI;lbx lby;ubx uby;<span class="number">1</span> <span class="number">1</span>;<span class="number">0</span> <span class="number">0</span>;<span class="number">1</span> <span class="number">1</span>;<span class="number">1</span> <span class="number">1</span>];       <span class="comment">%区域描述器</span></span><br><span class="line">Chrom=crtbp(NIND,PRECI*<span class="number">2</span>);      <span class="comment">%创建任意离散随机种群</span></span><br><span class="line"><span class="comment">%%优化</span></span><br><span class="line">gen=<span class="number">0</span>;      <span class="comment">%代计数器</span></span><br><span class="line">XY=bs2rv(Chrom,FieldD);     <span class="comment">%初始种群的十进制转换</span></span><br><span class="line">X=XY(:,<span class="number">1</span>);</span><br><span class="line">Y=XY(:,<span class="number">1</span>);</span><br><span class="line">ObjV=Y.*<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*X)+X.*<span class="built_in">cos</span>(<span class="number">2</span>*<span class="built_in">pi</span>*Y);     <span class="comment">%计算目标函数值</span></span><br><span class="line"><span class="keyword">while</span> gen&lt;MAXGEN</span><br><span class="line">    FitnV=ranking(-ObjV);       <span class="comment">%分配适应度值</span></span><br><span class="line">    SelCh=select(<span class="string">'sus'</span>,Chrom,FitnV,GGAP);       <span class="comment">%选择</span></span><br><span class="line">    SelCh=recombin(<span class="string">'xovsp'</span>,SelCh,px);       <span class="comment">%重组</span></span><br><span class="line">    SelCh=mut(SelCh,pm);        <span class="comment">%变异</span></span><br><span class="line">    XY=bs2rv(SelCh,FieldD);     <span class="comment">%子代个体的十进制转换</span></span><br><span class="line">    X=XY(:,<span class="number">1</span>);Y=XY(:,<span class="number">2</span>);</span><br><span class="line">    ObjVSel=Y.*<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*X)+X.*<span class="built_in">cos</span>(<span class="number">2</span>*<span class="built_in">pi</span>*Y);      <span class="comment">%计算子代的目标函数值</span></span><br><span class="line">    [Chrom,ObjV]=reins(Chrom,SelCh,<span class="number">1</span>,<span class="number">1</span>,ObjV,ObjVSel); <span class="comment">%重插入子代到父代，得到新种群</span></span><br><span class="line">    XY=bs2rv(Chrom,FieldD);</span><br><span class="line">    gen=gen+<span class="number">1</span>;      <span class="comment">%代计数器增加</span></span><br><span class="line">    <span class="comment">%%获取每代的最优解及其序号，Y为最优解，I为个体序号</span></span><br><span class="line">    [Y,I]=<span class="built_in">max</span>(ObjV);</span><br><span class="line">    trace(<span class="number">1</span>:<span class="number">2</span>,gen)=XY(I,:);     <span class="comment">%记下每代的最优值</span></span><br><span class="line">    trace(<span class="number">3</span>,gen)=Y;     <span class="comment">%记下每代的最优值</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">plot3</span>(trace(<span class="number">1</span>,:),trace(<span class="number">2</span>,:),trace(<span class="number">3</span>,:),<span class="string">'bo'</span>);       <span class="comment">%画出每代的最优点</span></span><br><span class="line">grid on;</span><br><span class="line"><span class="built_in">plot3</span>(XY(:,<span class="number">1</span>),XY(:,<span class="number">2</span>),ObjV,<span class="string">'bo'</span>);       <span class="comment">%画出最后一代种群</span></span><br><span class="line"><span class="built_in">hold</span> off</span><br><span class="line"><span class="comment">%%画进化图</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(<span class="number">1</span>:MAXGEN,trace(<span class="number">3</span>,:));</span><br><span class="line">grid on;</span><br><span class="line">xlabel(<span class="string">'遗传代数'</span>);</span><br><span class="line">ylabel(<span class="string">'解的变化'</span>);</span><br><span class="line">title(<span class="string">'进化过程'</span>);</span><br><span class="line">bestZ=trace(<span class="number">3</span>,<span class="keyword">end</span>);</span><br><span class="line">bestX=trace(<span class="number">1</span>,<span class="keyword">end</span>);</span><br><span class="line">bestY=trace(<span class="number">2</span>,<span class="keyword">end</span>);</span><br><span class="line">fprintf([<span class="string">'最优解：\nX='</span>,num2str(bestX),<span class="string">'\nY='</span>,num2str(bestY),<span class="string">'\nZ='</span>,num2str(bestZ),<span class="string">'\n'</span>])</span><br></pre></td></tr></table></figure><p>运行结果为：<code>最优解：X=1.7609Y=-1.999Z=3.7552</code></p><img src="/img/max.png"><center>其中O是每代的最优解,图二为种群优化50代的进化图。</center>]]></content>
      
      
      <categories>
          
          <category> matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab遗传算法工具箱</title>
      <link href="/gatbx.html"/>
      <url>/gatbx.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>近期在学习Matlab遗传算法，就接触到了谢菲尔德大学的Matlab遗传算法工具箱。下面将对其进行简单的介绍以及安装。<a id="more"></a></p><h2 id="工具箱简介"><a href="#工具箱简介" class="headerlink" title="工具箱简介"></a>工具箱简介</h2><p>​    谢菲尔德(Sheffield)遗传算法工具箱是由英国谢菲尔德大学开发的遗传算法工具箱。由MATLAB高级语言编写，对问题使用M文件编写，我们可以看见算法的源代码，与此匹配的是MATLAB数据分析、可视化工具、特殊目的的应用领域工具箱和展现给使用者具有研究遗传算法可能性的一致环境。该工具为遗传算法研究者以及想我这样的小白提供了十分广泛的实用函数。</p><h2 id="工具箱下载"><a href="#工具箱下载" class="headerlink" title="工具箱下载"></a>工具箱下载</h2><p>​    <a href="http://codem.group.shef.ac.uk/index.php/ga-toolbox（免费）" target="_blank" rel="noopener">http://codem.group.shef.ac.uk/index.php/ga-toolbox（免费）</a></p><img src="/img/gatbx.png"><h2 id="后续步骤"><a href="#后续步骤" class="headerlink" title="后续步骤"></a>后续步骤</h2><h3 id="文件格式修改"><a href="#文件格式修改" class="headerlink" title="文件格式修改"></a>文件格式修改</h3><p>下载后是一个zip的压缩包，使用解压工具解压即可。But工作还没有结束，解压后里面的文件都是以.M为后缀的</p><p>我们需要将其转化为.m后缀的。但是由于文件过多一个一个改实在是浪费时间，所以选择使用windows批处理的方式。首先我们需要新建一个记事本文件在里面输入</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ren</span> *.M *.m</span><br></pre></td></tr></table></figure><p>保存关闭，然后将记事本.txt后缀改为.bat后缀。双击运行这个bat文件，或许并不能直接看到文件由.M转化为.m但是刷新一下就🆗咯。</p><h3 id="工具箱添加"><a href="#工具箱添加" class="headerlink" title="工具箱添加"></a>工具箱添加</h3><p>做完上面工作后，我们需要将这个<code>gatbx</code>文件夹移动到电脑上MATLAB软件安装目录下的<code>toolbox</code>文件夹下，随后打开MATLAB软件进行添加。主要有两种方式：</p><p>①以命令行的方式：在命令行中输入以下代码</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str=[matlabroot,<span class="string">'\toolbox\gatbx'</span>];<span class="comment">%获得工具箱所在的路径</span></span><br><span class="line">addpath(str)<span class="comment">%将工具箱所在的文件夹添加到matlab的搜索路径中</span></span><br></pre></td></tr></table></figure><p>②图形用户界面的方式</p><p><img src="/img/lujing.png" alt=""></p><p>或者直接复制你自己电脑上的toolbox文件夹所在的路径，在MATLAB中找到该文件。添加路径即可使用</p><img src="/img/lujing1.png"><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><center>终于添加完成了那么到底有没有成功呢让我们来验证一下好了。<center><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">v=ver(<span class="string">'gatbx'</span>)</span><br><span class="line"></span><br><span class="line">v = </span><br><span class="line"></span><br><span class="line">  包含以下字段的 struct:</span><br><span class="line"></span><br><span class="line">       Name: <span class="string">'Genetic Algorithm Toolbox'</span></span><br><span class="line">    Version: <span class="string">'1.3'</span></span><br><span class="line">    Release: <span class="string">''</span></span><br><span class="line">       Date: <span class="string">'17-Jan-2003'</span></span><br></pre></td></tr></table></figure><p>如果返回如此信息则说明到此我们已经大功告成🆗，如果返回为空则说明未成功❌。</p>]]></content>
      
      
      <categories>
          
          <category> matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>visual studioC4996错误解决方法</title>
      <link href="/vs.html"/>
      <url>/vs.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Visual Studio 被称为”宇宙第一IDE”其功能齐全且强大。但是在使用VS写C语言程序的时候使用c的传统库函数scanf，strcpy，sprintf等会提示C4996错误。这是由于微软在VS2013以后不建议再使用这些函数，因此使用时会报如此错误。<a id="more"></a></p><p><span id="inline-blue">方法一：</span></p><p><code>#define _CRT_SECURE_NO_WARNINGS把这个宏定义一定要放到.c文件的第一行。</code></p><p><span id="inline-yellow">方法二：</span></p><p><code>在主函数任意一行加上如下代码：#pragma warning(disable:4996)</code></p><p>如图所示<img src="/img/vs.png"></p><p><span id="inline-purple">方法三:</span></p><p><code>**更改预处理定义：  项目-&gt;属性-&gt;配置属性-&gt;C/C++ -&gt; 预处理器 -&gt; 预处理器定义，增加_CRT_SECURE_NO_DEPRECATE**</code></p><img src="/img/vs1.png"><p><span id="yellow">方法四：</span></p><p><code>最为简单的方法就是直接使用安全函数来替换老的函数.如scanf改为scanf_s即可。</code></p>]]></content>
      
      
      <categories>
          
          <category> visual studio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> visual studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hanoi</title>
      <link href="/Hanoi.html"/>
      <url>/Hanoi.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><img src="/img/Hanoi.png" alt="Hanoi"></p><a id="more"></a><h1 id="汉诺塔"><a href="#汉诺塔" class="headerlink" title="汉诺塔"></a>汉诺塔</h1><p>汉诺塔（又称河内塔）问题是源于印度一个古老传说的益智玩具。它是一个非常著名的智力趣题，在很多算法书籍📕和智力竞赛中都有涉及。有A,B,C三根柱子，在A柱子上有n个大小不等的盘子，大盘在下，小盘在上。要求将所有盘子由A柱搬动到C柱上，每次只能搬动一个盘子，搬动过程可以借助任何一根柱子，但是必须满足大盘在上，小盘在下。</p><h1 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h1><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#source代表源柱子，temp代表中间柱，target代表模板柱子，n为 盘子个数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(source,target)</span>:</span></span><br><span class="line">    print(source,<span class="string">"==&gt;"</span>,target)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanoi</span><span class="params">(n,source,temp,target)</span>:</span></span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>):</span><br><span class="line">        move(source,target)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanoi(n<span class="number">-1</span>,source,target,temp)</span><br><span class="line">        move(source,target)</span><br><span class="line">        hanoi(n<span class="number">-1</span>,temp,source,target)</span><br><span class="line">n=int(input(<span class="string">"输入盘子数："</span>))</span><br><span class="line">print(<span class="string">"移动"</span>,n,<span class="string">"个盘子的步骤是："</span>)</span><br><span class="line">hanoi(n,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>)</span><br></pre></td></tr></table></figure><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Hanoi</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> a,<span class="keyword">char</span> b,<span class="keyword">char</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Move</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> a, <span class="keyword">char</span> b)</span></span>;</span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">8</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"汉诺塔的层数:\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">" %d"</span>,&amp;n);</span><br><span class="line">    Hanoi(n, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Hanoi</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> a, <span class="keyword">char</span> b, <span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Move(n, a, c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Hanoi(n - <span class="number">1</span>, a, c, b);</span><br><span class="line">        Move(n, a, c);</span><br><span class="line">        Hanoi(n - <span class="number">1</span>, b, a, c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Move</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> a, <span class="keyword">char</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    count++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"第%d次移动 Move %d: Move from %c to %c !\n"</span>,count,n,a,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>非递归实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//第0位置是柱子上的塔盘数目</span></span><br><span class="line"><span class="keyword">int</span> zhua[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;, zhub[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;, zhuc[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">charis</span><span class="params">(<span class="keyword">char</span> x, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"><span class="comment">//左右字符出现顺序固定，且根据n值奇偶尔不同</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span>'A':</span><br><span class="line"><span class="keyword">return</span>(n % <span class="number">2</span> == <span class="number">0</span>) ? <span class="string">'C'</span> : <span class="string">'B'</span>;</span><br><span class="line"><span class="keyword">case</span><span class="string">'B'</span>:</span><br><span class="line"><span class="keyword">return</span>(n % <span class="number">2</span> == <span class="number">0</span>) ? <span class="string">'A'</span> : <span class="string">'C'</span>;</span><br><span class="line"><span class="keyword">case</span>'C':</span><br><span class="line"><span class="keyword">return</span>(n % <span class="number">2</span> == <span class="number">0</span>) ? <span class="string">'B'</span> : <span class="string">'A'</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">return'0';</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> lch, <span class="keyword">char</span> rch)</span></span></span><br><span class="line"><span class="function"><span class="comment">//打印字符</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (lch == <span class="string">'A'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (rch)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span><span class="string">'B'</span>:</span><br><span class="line">zhub[<span class="number">0</span>]++;</span><br><span class="line">zhub[zhub[<span class="number">0</span>]] = zhua[zhua[<span class="number">0</span>]];</span><br><span class="line">zhua[zhua[<span class="number">0</span>]] = <span class="number">0</span>;</span><br><span class="line">zhua[<span class="number">0</span>]--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span>'C':</span><br><span class="line">zhuc[<span class="number">0</span>]++;</span><br><span class="line">zhuc[zhuc[<span class="number">0</span>]] = zhua[zhua[<span class="number">0</span>]];</span><br><span class="line">zhua[zhua[<span class="number">0</span>]] = <span class="number">0</span>;</span><br><span class="line">zhua[<span class="number">0</span>]--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (lch == <span class="string">'B'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (rch)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span>'A':</span><br><span class="line">zhua[<span class="number">0</span>]++;</span><br><span class="line">zhua[zhua[<span class="number">0</span>]] = zhub[zhub[<span class="number">0</span>]];</span><br><span class="line">zhub[zhub[<span class="number">0</span>]] = <span class="number">0</span>;</span><br><span class="line">zhub[<span class="number">0</span>]--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span>'C':</span><br><span class="line">zhuc[<span class="number">0</span>]++;</span><br><span class="line">zhuc[zhuc[<span class="number">0</span>]] = zhub[zhub[<span class="number">0</span>]];</span><br><span class="line">zhub[zhub[<span class="number">0</span>]] = <span class="number">0</span>;</span><br><span class="line">zhub[<span class="number">0</span>]--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (lch == <span class="string">'C'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (rch)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span>'A':</span><br><span class="line">zhua[<span class="number">0</span>]++;</span><br><span class="line">zhua[zhua[<span class="number">0</span>]] = zhuc[zhuc[<span class="number">0</span>]];</span><br><span class="line">zhuc[zhuc[<span class="number">0</span>]] = <span class="number">0</span>;</span><br><span class="line">zhuc[<span class="number">0</span>]--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="string">'B'</span>:</span><br><span class="line">zhub[<span class="number">0</span>]++;</span><br><span class="line">zhub[zhub[<span class="number">0</span>]] = zhuc[zhuc[<span class="number">0</span>]];</span><br><span class="line">zhuc[zhuc[<span class="number">0</span>]] = <span class="number">0</span>;</span><br><span class="line">zhuc[<span class="number">0</span>]--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t"</span>);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= zhua[<span class="number">0</span>]; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, zhua[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">")"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= zhub[<span class="number">0</span>]; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, zhub[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">")"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= zhuc[<span class="number">0</span>]; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, zhuc[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">")"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Hanoi</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//分配2^n个空间</span></span><br><span class="line"><span class="keyword">bool</span> * isrev;</span><br><span class="line">isrev = (<span class="keyword">bool</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">bool</span>)*(<span class="keyword">int</span>)<span class="built_in">pow</span>(<span class="number">2</span>, n));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="built_in">pow</span>(<span class="number">2</span>, n); i++)</span><br><span class="line">isrev[i] = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//循环计算是否逆序</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> ci = <span class="number">2</span>; ci &lt;= n; ci++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> zixh = (<span class="keyword">int</span>)<span class="built_in">pow</span>(<span class="number">2</span>, ci - <span class="number">1</span>); zixh &lt; <span class="built_in">pow</span>(<span class="number">2</span>, ci); zixh += <span class="number">4</span>)</span><br><span class="line"><span class="comment">//初始值重复一次，自增值可加4，减少循环次数。</span></span><br><span class="line">isrev[zixh] = isrev[(<span class="keyword">int</span>)<span class="built_in">pow</span>(<span class="number">2</span>, ci) - zixh];</span><br><span class="line"><span class="comment">//该位置为中间位置，且奇次幂逆序，偶数幂不逆序</span></span><br><span class="line">isrev[(<span class="keyword">int</span>)<span class="built_in">pow</span>(<span class="number">2</span>, ci)] = ((ci - <span class="number">1</span>) % <span class="number">2</span> == <span class="number">0</span>) ? <span class="literal">false</span> : <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> lch = <span class="string">'A'</span>, rch;</span><br><span class="line">rch = (n % <span class="number">2</span> == <span class="number">0</span> ? <span class="string">'B'</span> : <span class="string">'C'</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\t"</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c-&gt;%c"</span>, lch, rch);</span><br><span class="line">print(lch, rch);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">2</span>; k &lt; <span class="built_in">pow</span>(<span class="number">2</span>, n); k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (k % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">rch = charis(lch,n);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">lch = charis(rch,n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\t"</span>, k);</span><br><span class="line"><span class="keyword">if</span> (isrev[k])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c-&gt;%c"</span>, rch, lch);</span><br><span class="line">print(rch, lch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c-&gt;%c"</span>, lch, rch);</span><br><span class="line">print(lch, rch);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入盘子个数:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">zhua[<span class="number">0</span>] = n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">zhua[i] = n - i + <span class="number">1</span>;</span><br><span class="line">Hanoi(n);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hanoi</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> n 盘子的数目</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> origin 源座</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> assist 辅助座</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> destination 目的座</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hanoi</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> origin, <span class="keyword">char</span> assist, <span class="keyword">char</span> destination)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            move(origin, destination);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            hanoi(n - <span class="number">1</span>, origin, destination, assist);</span><br><span class="line">            move(origin, destination);</span><br><span class="line">            hanoi(n - <span class="number">1</span>, assist, origin, destination);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// Print the route of the movement</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">char</span> origin, <span class="keyword">char</span> destination)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Direction:"</span> + origin + <span class="string">"---&gt;"</span> + destination);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Hanoi hanoi = <span class="keyword">new</span> Hanoi();</span><br><span class="line">        hanoi.hanoi(<span class="number">3</span>, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> C </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> C </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>......</title>
      <link href="/mood.html"/>
      <url>/mood.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">您好, 这里需要密码.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="4871511f2b0f7fa9ff365d34f10aeecf2810ff849f5a5e89aa1a908dea18f3b5">9eb72e389f849baf007377a2d7bacc732d435300e1d7f8fd51cc251e86accc74fc6affb9a7aeb98013057765655d105249104539fe22b946807018dab42d5b8db047f18e7c532266525509477bb97ff0c2587bc736e8a5b14e6b827dbe63d62de17490af42734e6cd86212fdaef66bd5e2c58feefc665ae8509fe4a8975a280a51fa1f90d17cdbc6d51963918c22c62ca1f6da67b312c8ccdf9e4294c33625ae7717c5711d2aa2765cf14b27a3b03b0a215a9f0741eae79c2acf7e4b540fb309d806f2525bbabf45696504b4e838eab0299a300e72b15cbe2653fe34e7a90e761affa2a16938a57c17ad0c08ab23756fa23ac804eb5c173b0a17c05f711193e2d0c1008c925c7c1aed266ec273475dc8c65ca185d211975b3cccffd9da6009456b6e7a3399182e2d38551e732dc25620761fcc6110427917456c3a5d82362b37c57fe1836affffcb234fcd609d78280ad2a229c21ee85b1341d7366de39f9020e19d7b37445914a82f0dbb5488811dc16477988d0273a04a2d0e6508db5a317e8e493d7956444b0059741c75c2b7d639743d973afce6d39da5f1f961559a9a070d919c07397679984932010643001f66c91bde8f60d4661fe0d8eb8bd13e9220c7ce2b05f3a174b07c7f87204add74bf991ae03aae20fbf53433a7ff6f757a38cf0a3b8745acf816fc7f77febd6d817851de81a917ebb8701d4f449404be70adbc6e83ba6020a67a2d6754aa6d81a8b65eb4bbcf178b2f1ffb465814ae6ceb751214b12fdbc0a4757d31bb7cc515f99d0193cbeb40bb34ea4c135251fc3a3c8fc1df833c1ca7cebdcea2757501417e1882e2e7a4695d11efce2f96485c2d319904dc9eaba2788ccd96386065eaaed255074cf1fea65651cee05168781de33699a12166b344e997143fd7969ff665d6c00fe6fafa4077652a61ef1d071d1c7592bceb94e4973fd18f238bb624b0eb3b9a85cbb478a81fd02652a6a348080ed8c56ed4b5557101d134e86468cbd01e122c374c8d323e540694e70d438ffce5ab80477755af0338f06eca8fbd6181cf0e3b6400e222d6cb69b59c4ecd14211869260a21eb1032e2f839ed45f7ea72891179</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客踩坑</title>
      <link href="/hexo.html"/>
      <url>/hexo.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>​    近日使用Hexo和GithubPages搭建了属于自己的博客，从博客搭建开始到最后搭建成功一直都小心翼翼。生怕自己一不小心就会踩到莫名奇妙的坑🕳，搭建的过程比较的顺利没有出什么错误。直到昨天！！！<a id="more"></a></p><p>​    GithubPages 呢在国内较慢，百度不收录，而CodingPages 在国内较快。因为还有几个腾讯云活动几块钱购买的域名还在闲置着，所以呢我就寻思着新建一个博客托管到CodingPages上面。在之前曾使用国外虚假身份证撸过国外学校的教育邮箱，当时是想申请AWS学生包来着，没想到最后翻车了申请了多次都没有申请成功。既然是教育邮箱那么肯定有很多优惠啊什么的，当时就申请了GitHub学生包等一些其他的东西。当时就突发奇想我可以把博客同时托管到两个平台上😂，于是最终就把博客托管到了用当时的GitHub账号的存储库下面。在此过程中需要创建SSH key所以就把之前的(C:\Users\Administrator\.ssh)文件夹下内容给删掉了。使用ssh-keygen -t rsa -C “邮箱地址”生成了新的密钥文件。新的博客最后也搭建成功了也可以正常访问<a href="https://www.6bl.xyz" target="_blank" rel="noopener">另外一个博客地址</a> 。好了废话讲了这么多肯定都听腻了，下面讲重点好了。</p><p>​    之前博客科学上网的那篇文章一直没有写完(不是我不想写，因为实在太多了写不动了)，就想去再写一点内容。写了一部分内容后当我把博客推送到GitHub时出现了问题，没有推送成功。报错是下面所示的样子<img src="/img/error.png" alt="">大致看了一下报错的内容它这里说”Please make sure you have the correct access rights and the repository exists.”谷歌了一下原来是SSH key有问题。<img src="/img/chidai1.jpg" alt="">之前曾生成过一次SSH key但是两个网站是用的不同的GitHub账号，他们各自绑定的邮箱也是不同的所以才会报如此错误。所以就又删掉了(C:\Users\Administrator\.ssh)文件夹下内容，需要重新生成一下密钥文件。</p><p>1.首先我得重新在git设置一下身份的名字和邮箱，Git Bash进入到需要提交的文件夹底下输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line"></span><br><span class="line">git config --global user.email“your@email.com&quot;</span><br></pre></td></tr></table></figure><p>2.ssh-keygen -t rsa -C “<a href="mailto:your@email.com" target="_blank" rel="noopener">your@email.com</a>“（请填你设置的邮箱地址）一直回车即可。</p><p><img src="/img/01.png" alt=""></p><p>3.复制密钥文件内容（路径形如<code>C:\Users\Administrator\.ssh\id_rsa.pub</code>），粘贴到<a href="https://github.com/settings/keys" target="_blank" rel="noopener">New SSH Key</a>即可。<img src="/img/02.png" alt=""></p><p>4.在命令行中(Git Bash)中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><center>再输入yes当返回返回“You’ve successfully authenticated”即成功</center><p>5.推送到GithubPages。在命令行（即Git Bash）依次输入以下命令， 返回<code>INFO Deploy done: git</code>即成功推送：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft office办公软件安装与激活</title>
      <link href="/office%E6%BF%80%E6%B4%BB.html"/>
      <url>/office%E6%BF%80%E6%B4%BB.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文主要去介绍windows系统office办公软件的安装以及解决我们日常生活中所遇到的Windows系统中office软件失效需要激活问题<a id="more"></a></p><p>在电脑的日常使用中，我们通常离不开对office办公软件的使用。但是日常的使用之中大多数人都会遇到如下这种情况。</p><p><img src="/img/office.jpg" alt="">)<img src="/img/office.png" alt="">再或者就是自己的电脑上没有Microsoft office办公软件。只能使用国产的WPS(并不是说国产的差，主要是wps有一些广告什么的给我们的使用带来了一些不便)正常的情况来说一般购买电脑的话，卖家都会给你的电脑安装windows系统并且给你安装office软件并且全部激活。但是在你日后的使用过程中电脑💻会遇到各种你曾经没有遇到过的的问题。这些各种各样你不曾遇到过的问题都会给你的电脑系统造成影响，当然也会给你的office办公软件造成影响。至于什么问题在这里不一一举例，这不是这篇文章的重点。废话不多说，下面来讲一讲今天的主角。</p><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><p>当它打开后是如下说示这个样子的<img src="/img/install.png" alt="">)可以根据自己的需求来进行选择安装。<img src="/img/install2.png" alt=""> <img src="/img/install1.png" alt="">)当我们安装完毕之后当我们再次打开office办公软件的时候你就会发现我们的软件已经安装好了。<img src="/img/word.png" alt=""></p><h1 id="软件激活"><a href="#软件激活" class="headerlink" title="软件激活"></a>软件激活</h1><center>但是此时依旧有开头所示的那样需要我们输入密钥来对软件进行激活![](/img/wocao.jpg)这可咋整呢？废了这么大的劲儿安装上还是没有激活需要激活，难道必须去买密钥才行嘛？给你个明确的答案，当然是不用的。这个这个软件除了安装功能外还有激活的功能![](/img/jihuo.png)</center><p>点击Activate Office等待片刻若下方框内显示激活成功则表明我们刚刚下载的Microsoft office办公软件已经安装激活完毕。以后可以免费的使用啦！<img src="/img/zhenxiang.gif" alt=""> </p><h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><p><img src="/img/office2019.jpg" alt=""> <center><a href="https://pan.baidu.com/s/1QSFuZlzguJ8tymCinwHhRQ" target="_blank" rel="noopener">这是一个神奇的链接</a></center></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>打击盗版，维护正版。毕竟有一些破解软件并不是十分的安全，他们都被不法分子动了手脚。<img src="/img/!.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Windows软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 破解软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学上网</title>
      <link href="/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91.html"/>
      <url>/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><strong><span id="inline-green"> 说在前面: </span>这篇博客只是记录自己平时学习经验，并无恶意传播使用的意图。</strong><a id="more"></a></p><h1 id="什么是科学上网？"><a href="#什么是科学上网？" class="headerlink" title="什么是科学上网？"></a>什么是科学上网？</h1><p>由于<strong>“翻墙”</strong>在国内成为敏感词汇，现在更多的使用<strong>科学上网</strong>来代替“翻墙”。科学上网即是翻墙的一种较为隐晦的说法，是指通过某种途径进行上网的一种方式。此处的墙也非彼处的墙，这里所说的墙是指<a href="http://baike.baidu.com/link?url=Ko6D0GzKfQ2gXQ3oXLr-6_Racoa5uo8UApoNRRV5Jc8LyCYv1fGBGDxMxOV7ULARGidRgcoM6DVh3m06PMD_y823plq8PCCs51xmz6aJoY_" target="_blank" rel="noopener">great firewall</a> ,是我国互联网所特有的。通常特指在中国大陆绕过<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%AE%A1%E6%9F%A5" target="_blank" rel="noopener">互联网审查</a>封锁技术（IP封锁、端口封锁、关键词过滤、域名劫持等），突破防火长城，实现对网络内容的访问。如果你想要看看外面的世界，就得翻墙。</p><h1 id="为什么科学上网？"><a href="#为什么科学上网？" class="headerlink" title="为什么科学上网？"></a>为什么科学上网？<img src="/img/cat.jpg" alt=""></h1><p>​    对于大多数的人来说科学上网主要因为自己平时学习工作方面有需求。需要科学上网来查一些有用的资料来解决自己目前所遇到的难题。通过科学上网的时候去学习一些当今较为火热的领域对自己十分有用的一些专业知识。通过科学上网去下载一些国内所没有的资料或者是搜集一些美图素材等等。</p><p>​    但是还有一大部分的人是为了访问境外的色情淫秽网站（例如<a href="https://www.pornhub.com/" target="_blank" rel="noopener">pronhub</a> )<img src="/img/child.jpg" alt="">。还有去浏览一些当局无法管控的的新闻网站（例如BBC中文网）和社交网站（例如Facebook、Twitter）等。这些网站上面充斥着很多不良信息以及虚假信息。之所以这些网站在国内被屏蔽，是因为这些网站上面有太多不良的不好的不利于青少年健康成长，不利于国家正常发展的信息。若中国大陆居民需要访问这些被屏蔽的网站，则需要<strong>翻墙</strong>。</p><p>​    极少数的人是为了自己平时的娱乐，通过科学上网去找一些国外新上映的电影或者最新发布的音乐。去了解一些国外发生的有趣的事情或者欣赏国外美丽风景以及其不同于我们的民族风俗文化等等。        </p><p>​    对于境外众多的信息我们必须”去其糟粕，取其精华“。目前国内的网络环境，其实并不利于我们学习成长。想学一点东西，想查一点东西。通常是没法学、查不到这种情况，要么就是搜来一堆你不想看到的广告。那么既然想学点东西，就不能被所网络束缚住。要通过一些办法去看一看外面的世界！</p><h1 id="目前科学上网有哪几种？"><a href="#目前科学上网有哪几种？" class="headerlink" title="目前科学上网有哪几种？"></a>目前科学上网有哪几种？</h1><p>目前来说，我了解的方式主要有两种：VPN和VPS两种！</p><p>VPN：全称为Virtual Private Network 虚拟专用网络。在公用网络上建立专用网络，进行加密通讯。在企业网络中有广泛应用。VPN网关通过对数据包的加密和数据包目标地址的转换实现远程访问。VPN有多种分类方式，主要是按协议进行分类。VPN可通过服务器、硬件、软件等多种方式实现。我们可以用一个帐号和密码，就可以通过虚拟专线网络代理，突破网络限制来直接访问远程网站（比如上国外网站Facebook和Twitter），或着是加速网络访问和数据传输（比如网游加速器）。</p><p>VPS:全称为Virtual Private Server 虚拟专用服务器技术，将一台服务器分割成多个虚拟专享服务器的优质服务。实现VPS的技术分为容器 技术，和虚拟化技术 。在容器或虚拟机中，每个VPS都可分配独立公网IP地址、独立操作系统、实现不同VPS间磁盘空间、内存、CPU资源、进程和系统配置的隔离，为用户和应用程序模拟出“独占”使用计算资源的体验。VPS可以像独立服务器一样，重装操作系统，安装程序，单独重启服务器。VPS为使用者提供了管理配置的自由，可用于企业虚拟化，也可以用于IDC资源租用。</p><p>二者区别是VPS主要是用来做服务器，VPN则是用来建立虚拟专线连接。</p><p>目前我用过的科学上网工具主要有以下几种：蓝灯VPN、赛风VPN、无界、自由门、SS(Shadowsocks)、SSR(ShadowsockR)、SSD(ShadowsocksD)、v2ray。</p><h2 id="1-蓝灯VPN"><a href="#1-蓝灯VPN" class="headerlink" title="1.蓝灯VPN"></a>1.蓝灯VPN</h2><center>近日，一封由广东省警方发出的**行政处罚决定书**在网上疯传根据该文件显示，广州一网民朱某，因“**擅自建立、****使用非法定信道进行国际联网**”被行政处罚，罚金人民币1000元![](/img/20190115072138504910.jpg)简单来说，朱某因为从去年8月起，频繁使用VPN “蓝灯 Lantern Pro” 进行“翻墙”上网，而被警告并处罚金。</center><p>那么到底啥是蓝灯呢？他是这样子的<img src="/img/1548229142377.png" alt="">)同时启动后它还是这个样子的<img src="/img/lantern.png" alt="">)它有免费版和专业版两种。免费版一个月只有500MB(不知道软件故障还是什么，之前使用完后还是可以继续用)专业版价钱也比较的贵<img src="/img/price.png" alt="">专业版嘛没有使用过,不限流量或许速度也会稍微快一点吧。</p><p><strong>个人建议：</strong>蓝灯专业版呢肯定是不建议购买，当然也不建议去使用蓝灯VPN！因为不太安全并且有人已经因为使用蓝灯而被抓。如果你不怕的话请你自便！<img src="/img/landeng.gif" alt=""></p><h2 id="2-赛风VPN"><a href="#2-赛风VPN" class="headerlink" title="2.赛风VPN"></a>2.赛风VPN</h2><p>赛风VPN也是一款老牌的VPN,国内也有不少人在使用。我是亲测是可以使用的。工具给你们了,速度到底怎么样？到底能不能用？这就看你们各自的运气了，只能帮你们到这里了。究竟怎么样你们用了之后自见分晓。<img src="/img/saifeng.jpg" alt="">)<img src="/img/saifeng.png" alt="">在这里看到了卢老爷😂没什么好说的上香就完事了     #上香</p><h2 id="3-自由门"><a href="#3-自由门" class="headerlink" title="3.自由门"></a>3.自由门</h2><p>这个可以称得上是一个存活时间很长的的梯子了，至今依旧可以用。毕竟是有些背景的东西不会轻易的被墙话不多说，老司机都应该懂的， 反正还是悠着点用吧，万里长城永不倒，大清亡不了！“轮子”做的东西虽然不比其他的差，但是”轮子”不怀好意不居好心。当你使用自由门的时候它会给你弹出一个网站<img src="/img/2.png">这些上面宣传”练功”的各种”好处“又是千里之外灭火又是”练功“获得新生的一类的东西。这牛逼吹的不得不感慨一句<img src="/img/kuxuan.jpg">如果真的这么神的话那么大家岂不是可以天天不吃不喝就能长生不老了，显然这是不可能的事情。不得不吐槽一下这牛逼吹的也太没有水平了……”轮子”为什么被定为邪教肯定不是因为这个，这帮人吃饱的撑了糊弄无知百姓对百姓身体健康造成迫害并且还想法设法的来反政府。捏造一些不存在的虚假信息，来蛊惑人心。对于当今发生的事情做出一些不正确的的评论，所以自由门还是少用为好。省的用多了被迷惑了心智，最终误入歧途。<img src="/img/自由门.jpg" alt="#" title="亲测自由门可用"></p><h2 id="4-无界浏览"><a href="#4-无界浏览" class="headerlink" title="4.无界浏览"></a>4.无界浏览</h2><p>无界浏览跟自由门的幕后主使是一样都是由“轮子”。2002年，无界浏览于美国硅谷被开发，设计者为海外法轮功学员。它使用起来也相当的简单，只需双击打开等待连接成功后即可使用。<img src="/img/wujie.jpg"></p><blockquote><p>不过这个跟自由门还是慎用为好，毕竟这两个并不是最好的还有很大的风险问题</p></blockquote><h2 id="5-SS-SSR-SSD"><a href="#5-SS-SSR-SSD" class="headerlink" title="5.SS/ SSR /SSD"></a>5.SS/ SSR /SSD</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>SS (Shadowsocks)，是一种加密的传输方式（一种基于 Socks5 代理方式的网络数据加密传输包）；SS 是目前主流的科学上网方式，是目前最稳定最好用的科学上网工具之一。<br>SSR（ShadowsocksR）是 SS 的修改版，也算是增强版，是在SS 的基础上做了些功能的增加和修改。</p><p>SSD(ShadowsocksD)一个依附于shadowsocks的项目，跟随上游更新。使用了不同的使用了不同的混淆方式专为机场设计。电脑上有360/2345/百度全家通不能使用这款软件。在软件作者看来你使用这些软件的情况下还”翻墙”你真的与傻逼无异。至于为什么,请你自己动脑想想你自己为啥这么傻逼！！！<a href="https://github.com/CGDF-Github/SSD-Windows" target="_blank" rel="noopener">这是其在GitHub上的项目地址</a></p><p>这三款软件的图标皆为一个小飞机，外观颜色分别为蓝、粉红、黑三种颜色。这三款软件都是科学上网工具的最佳之选。但是仅仅有客户端还不能翻墙，<strong>还得需要在SS 客户端中添加正常可用的 节点，节点可以自己买 VPS 服务器搭建。当然你也可以买别人搭建好的，也有人搭建了免费共享出来的</strong>。网上的机场虽然有很多很多但都不是官方提供，中途跑路的机场不在少数。大家在购买节点前务必考虑清楚这家机场是否值得信赖，是否值得你去购买，是否有高的性价比。否则吃亏上当受骗的那个人永远是你！</p><h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><blockquote><p>一些免费节点 </p></blockquote><p><a href="https://free-ss.site/" target="_blank" rel="noopener">https://free-ss.site/</a></p><blockquote><p>几个不错的机场</p></blockquote><p><a href="https://xn--i2ru8q2qg.com/" target="_blank" rel="noopener">喵帕斯</a> 一家老机场，性价比相对来说较高。注册时需要邀请码，邀请码自寻。</p><p><a href="https://lisuanlaoji.co/" target="_blank" rel="noopener">几鸡</a> 也是一家十分不错的机场，有多种套餐供你选择。节点众多，速度也都十分的快。</p><p><a href="https://mdss.cloud" target="_blank" rel="noopener">MENGDI</a> 自己目前正在用的一家，老牌机场有质量保证。之前有很多公益免费节点，后来被迫采取收费。当然价钱也是十分的低啊。<br>对于科学上网的节点其实有很多很多，当然机场也是多的数不过来。免费的也有不少但是想要一直白嫖是不可能的。那些收费的机场价钱也都十分的低，都是良心价反正你买不了吃亏买不了上当。</p><h3 id="搭建VPS服务器科学上网"><a href="#搭建VPS服务器科学上网" class="headerlink" title="搭建VPS服务器科学上网"></a>搭建VPS服务器科学上网</h3><ul><li><p>利用AWS 搭建免费 Shadowsocks:<a href="http://lichendi.com/2016/06/07/%E5%88%A9%E7%94%A8AWS%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9shadowsocks" target="_blank" rel="noopener">http://lichendi.com/2016/06/07/shadowsocks/</a></p></li><li><p>Google Cloud 可以免费拿一台 VPS 试用一年:<a href="http://51.ruyo.net/p/2144.html" target="_blank" rel="noopener">http://51.ruyo.net/p/2144.html</a></p><blockquote><p>这是两个关于使用VPS搭建科学上网工具的详细教程，想白嫖的机会来了可以免费通过国外云平台搭建自己的科学上网工具。这个前提是你必须有一张双币信用卡！</p></blockquote></li></ul><p>之前曾买过阿里云香港的服务器搭建了科学上网工具，速度快到飞起爽的一批。可是好景并不长<img src="/img/ku.jpg">使用了几天后阿里云客服就打电话给我问我买服务器干嘛。当时随便编了个谎言给应付过去了，以为可以使用的长久一点不会被官方给发现。自己还是太天真了，这种事情在国内是禁止的阿里云怎么会包庇你干不能干的事情呢？当时自己并没有意识到这个情况，还把自己的节点分享给了同学使用不过也没事。最后使用了快到一个月的时候，该来的它最终还是来了。<img src="/img/b.jpg"></p><p><img src="/img/a.jpg">就当我在看完第一张图片的不到1分钟内阿里云就给我发了封警告⚠邮件。当时就直接傻了怎么会这么巧<img src="/img/wocao.jpg">当时只能赶紧把服务器给停掉了……从那以后就没有再自己买过国内厂商的服务器。如果要购买服务器还是推荐购买国外的，像搬瓦工就挺不错的。不过在这里还是稍微简单的讲下自己当时在阿里云搭建服务器科学上网的过程。选择购买<a href="https://dwz.cn/3Y1BedpO" target="_blank" rel="noopener">阿里云的轻量型服务器</a> <img src="/img/6.png">购买时长可以根据你自身情况而定。可以加入购物车后再结算，当然也可以直接结算。好了到这里已经结束了，原因是我没有那24块钱来购买服务器。<img src="/img/yes.jpg"></p><h1 id="科学上网工具下载"><a href="#科学上网工具下载" class="headerlink" title="科学上网工具下载"></a>科学上网工具下载</h1><h2 id="蓝灯下载链接："><a href="#蓝灯下载链接：" class="headerlink" title="蓝灯下载链接："></a>蓝灯下载链接：</h2><p><a href="/software/lantern/lantern-installer.exe">蓝灯windows版</a> 、<a href="/software/lantern/lantern-installer.apk">蓝灯Android版</a>  、<a href="/software/lantern/lantern-installer.dmg">蓝灯MAC版</a> 、<a href="/software/lantern/lantern-installer-64-bit.deb">蓝灯Ubuntu64位</a> 、 <a href="/software/lantern/lantern-installer-32-bit.deb">蓝灯Ubuntu32位</a> </p><h2 id="赛风下载链接："><a href="#赛风下载链接：" class="headerlink" title="赛风下载链接："></a>赛风下载链接：</h2><p><a href="/software/psiphon3.exe">赛风windows版</a> 、<a href="/software/PsiphonAndroid.apk">赛风安卓版</a></p><blockquote><p><strong>注意：但为了更加安全，建议翻墙时不要使用国产杀毒软件！因为很多国产杀毒软件，比如360（重点）、腾讯管家、金山卫士等不仅仅会干扰翻墙，造成软件无法正常使用或速度变慢，它们与防火墙还有千丝万缕的关系。所以为了更好、更稳定、更安全的翻墙，建议卸载国产杀毒软件，至少翻墙时不要用它们（有些干扰眼睛是看不到的）。现在国外好用的免费杀毒软件也挺多的，网上一搜就有很多。如果翻墙插件被杀毒软件“误删”了或者默默地删掉了，退出杀毒软件，重新解压下载的压缩包。<br><strong>温馨提示：请系好安全带，飙车有风险，驾驶需谨慎，因飙车引发的血案还请责任自负！</strong></strong></p></blockquote><p>——————————————————————————–未完待续——————————————————————————</p>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world.html"/>
      <url>/hello-world.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>这是自己写的第一篇博客。对于写博客这件事情大一的这个时候就有这种打算了可是由于种种原因一直到拖到现在。<a id="more"></a></p><p>主要是自己当时菜的真实(现在依旧十分菜)只能眼巴巴的看着大佬们写的博客……只能从他们博客上“偷学”一些知识<img src="/img/lei.jpg">但是那些外表光鲜亮丽到处散发着光芒的大佬们，谁又知道他在那阴暗的角落里经历过多少苦难忍受着多少寂寞呢?所有的事情并不是像我们想象的那样子是一蹴而就的，它都需要你经过一番努力才能够完成的。在现实世界里有些东西你不去学是永远不可能会的！虽然学了未必就可以十分精通但是多学一点东西对自己来说总还是有好处的。于是就想方设法建立了这个属于自己的博客网站！以此来记录自己平时学习与生活中的点点滴滴，同时想给大家分享一些学习上的知识。</p><p>还记得写下的第一个C语言程序代码吗？大多数人想必都是“Hello World”虽然短短几行代码但是却似乎并不是“世界，你好”这么简单。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"Hello, World!"</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <center><span id="inline-blue">Hello World </span></center><center>**当一个人来到这个世界由生到死，到底有什么样的意义？到底怎么样才算活的有意义?**</center><center>**平时的所作为到底有何意义?不仅仅只是对他人的意义，更确切的说对于自身的意义。**</center><center>**到底是体验生命中的各种情感？还是创造各种有价值的事物？抑或是其他些什么东西？**</center><center><span id="inline-purple">Just Do It</span></center><center>**建立这个网站的初衷是记录自己日常中的每一天，去寻找生活中的意义。**</center><center>**从淡去的曾经，到平常的现在，再到不定的未来，这或许便是我的一生了！**</center><center><span id="inline-yellow">Be yourself</span></center><center>**"做好你自己"妈妈经常对我说的一句话**</center><center>是啊，做好自己。人生的意义或许就在于此吧！</center><center>首先，只有做好自己了才能够感染号召更多的人向好的方向去发展，去实现人生的意义！</center><blockquote><center>愿你走出半生，归来仍是少年！！！</center></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
